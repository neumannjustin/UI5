{"!define":{"sap.ui.model.type.String":{"!description":"This class represents string simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.String.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.SimpleType"},"sap.ui.model.analytics.odata4analytics.QueryResultRequest_obj":{"!type":"fn(oQueryResult: sap.ui.model.analytics.odata4analytics.QueryResult, oParameterizationRequest?: sap.ui.model.analytics.odata4analytics.ParameterizationRequest)","prototype":"sap.ui.model.analytics.odata4analytics.QueryResultRequest"},"sap.ui.model.analytics.odata4analytics.Parameterization_obj":{"!type":"fn(oEntityType: sap.ui.model.analytics.odata4analytics.EntityType, oEntitySet: sap.ui.model.analytics.odata4analytics.EntitySet)","prototype":"sap.ui.model.analytics.odata4analytics.Parameterization"},"sap.ui.model.analytics.v2.BatchResponseCollector":{"!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.core.mvc.Controller":{"getOwnerComponent":{"!description":"Gets the component of the Controllers view\n\nIf there is no Component connected to the view or the view is not connected to the controller,\nundefined is returned.","!type":"fn() -> sap.ui.core.Component","!category":"function"},"!description":"A generic controller implementation for the UI5 Model View controller concept.\n\nCan either be used as a generic controller which is enriched on the fly with methods\nand properties (see {@link sap.ui.controller}) or  as a base class for typed controllers.","byId":{"!description":"Returns an Element of the connected view with the given local Id.\n\nViews automatically prepend their own id as a prefix to created Elements\nto make the ids unique even in the case of multiple view instances.\nThis method helps to find an element by its local id only.\n\nIf no view is connected or if the view doesn't contain an element with\nthe given local id, undefined is returned.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function"},"!category":"class","getView":{"!description":"Returns the view associated with this controller or undefined.","!type":"fn() -> sap.ui.core.mvc.View","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.Controller.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"createId":{"!description":"Converts a view local id to a globally unique one by prepending\nthe view id.\n\nIf no view is connected, undefined is returned.","!type":"fn(sId: String) -> String","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.Icon":{"getAlt":{"!description":"Gets current value of property <code>alt<\/code>.\n\nThis defines the alternative text which is used for outputting the aria-label attribute on the DOM.","!type":"fn() -> String","!category":"function"},"setHoverColor":{"!description":"Sets a new value for property <code>hoverColor<\/code>.\n\nThis color is shown when icon is hovered. This property has no visual effect when run on mobile device.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHoverColor: String) -> sap.ui.core.Icon","!category":"function"},"getDecorative":{"!description":"Gets current value of property <code>decorative<\/code>.\n\nA decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getBackgroundColor":{"!description":"Gets current value of property <code>backgroundColor<\/code>.\n\nBackground color of the Icon in normal state.","!type":"fn() -> String","!category":"function"},"firePress":{"!description":"Fires event press to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.Icon","!category":"function"},"setDecorative":{"!description":"Sets a new value for property <code>decorative<\/code>.\n\nA decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDecorative: Boolean) -> sap.ui.core.Icon","!category":"function"},"setAlt":{"!description":"Sets a new value for property <code>alt<\/code>.\n\nThis defines the alternative text which is used for outputting the aria-label attribute on the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAlt: String) -> sap.ui.core.Icon","!category":"function"},"setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sColor: String) -> sap.ui.core.Icon","!category":"function"},"getActiveBackgroundColor":{"!description":"Gets current value of property <code>activeBackgroundColor<\/code>.\n\nBackground color for Icon in active state.","!type":"fn() -> String","!category":"function"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThis is the height of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setHoverBackgroundColor":{"!description":"Sets a new value for property <code>hoverBackgroundColor<\/code>.\n\nBackground color for Icon in hover state. This property has no visual effect when run on mobile device.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHoverBackgroundColor: String) -> sap.ui.core.Icon","!category":"function"},"getUseIconTooltip":{"!description":"Gets current value of property <code>useIconTooltip<\/code>.\n\nDecides whether a default Icon tooltip should be used if no tooltip is set.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getActiveColor":{"!description":"Gets current value of property <code>activeColor<\/code>.\n\nThis color is shown when icon is pressed/activated by the user.","!type":"fn() -> String","!category":"function"},"!category":"class","setActiveBackgroundColor":{"!description":"Sets a new value for property <code>activeBackgroundColor<\/code>.\n\nBackground color for Icon in active state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sActiveBackgroundColor: String) -> sap.ui.core.Icon","!category":"function"},"getNoTabStop":{"!description":"Gets current value of property <code>noTabStop<\/code>.\n\nDefines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached.\nIf it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThis is the width of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThis is the width of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.Icon","!category":"function"},"setUseIconTooltip":{"!description":"Sets a new value for property <code>useIconTooltip<\/code>.\n\nDecides whether a default Icon tooltip should be used if no tooltip is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUseIconTooltip: Boolean) -> sap.ui.core.Icon","!category":"function"},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nSince Icon uses font, this property will be applied to the css font-size property on the rendered DOM element.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getSrc":{"!description":"Gets current value of property <code>src<\/code>.\n\nThis property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with a Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nSince Icon uses font, this property will be applied to the css font-size property on the rendered DOM element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSize: sap.ui.core.CSSSize) -> sap.ui.core.Icon","!category":"function"},"getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent.","!type":"fn() -> String","!category":"function"},"setNoTabStop":{"!description":"Sets a new value for property <code>noTabStop<\/code>.\n\nDefines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached.\nIf it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bNoTabStop: Boolean) -> sap.ui.core.Icon","!category":"function"},"setBackgroundColor":{"!description":"Sets a new value for property <code>backgroundColor<\/code>.\n\nBackground color of the Icon in normal state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBackgroundColor: String) -> sap.ui.core.Icon","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.core.Icon<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.Icon<\/code> itself.\n\nThis event is fired when icon is pressed/activated by the user. When a handler is attached to this event, the Icon gets tab stop. If you want to disable this behavior, set the noTabStop property to true.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Icon","!category":"function"},"getHoverColor":{"!description":"Gets current value of property <code>hoverColor<\/code>.\n\nThis color is shown when icon is hovered. This property has no visual effect when run on mobile device.","!type":"fn() -> String","!category":"function"},"getHoverBackgroundColor":{"!description":"Gets current value of property <code>hoverBackgroundColor<\/code>.\n\nBackground color for Icon in hover state. This property has no visual effect when run on mobile device.","!type":"fn() -> String","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.core.Icon","!category":"function"},"!description":"Icon uses embeded font instead of pixel image. Comparing to image, Icon is easily scalable, color can be altered live and various effects can be added using css.\n\nA set of built in Icons is available and they can be fetched by calling sap.ui.core.IconPool.getIconURI and set this value to the src property on the Icon.","setSrc":{"!description":"Sets a new value for property <code>src<\/code>.\n\nThis property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with a Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSrc: sap.ui.core.URI) -> sap.ui.core.Icon","!category":"function"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThis is the height of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.Icon","!category":"function"},"setActiveColor":{"!description":"Sets a new value for property <code>activeColor<\/code>.\n\nThis color is shown when icon is pressed/activated by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sActiveColor: String) -> sap.ui.core.Icon","!category":"function"},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.core.Icon<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Icon","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Icon.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.Orientation":{"!description":"Orientation of an UI element","Vertical":{"!description":"Arrange Vertically","!type":"String","!category":"enum"},"!category":"static class","Horizontal":{"!description":"Arrange Horizontally","!type":"String","!category":"enum"}},"sap.ui.model.SimpleType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.SimpleType with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Type.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.SimpleType"},"sap.ui.core.ComponentContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ComponentContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.ComponentContainer"},"sap.ui.Device.system":{"phone":{"!description":"If this flag is set to <code>true<\/code>, the device is recognized as a phone.\n\nFurthermore, a CSS class <code>sap-phone<\/code> is added to the document root element.","!type":"Boolean","!category":"enum"},"tablet":{"!description":"If this flag is set to <code>true<\/code>, the device is recognized as a tablet.\n\nFurthermore, a CSS class <code>sap-tablet<\/code> is added to the document root element.","!type":"Boolean","!category":"enum"},"!description":"Provides a basic categorization of the used device based on various indicators.\n\nThese indicators are for example the support of touch events, the screen size, the used operation system or\nthe user agent of the browser.\n\n<b>Note:<\/b> Depending on the capabilities of the device it is also possible that multiple flags are set to <code>true<\/code>.","!category":"namespace","desktop":{"!description":"If this flag is set to <code>true<\/code>, the device is recognized as a desktop system.\n\nFurthermore, a CSS class <code>sap-desktop<\/code> is added to the document root element.","!type":"Boolean","!category":"enum"}},"sap.ui.core.tmpl.HandlebarsTemplate":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.HandlebarsTemplate.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.ManagedObject"},"sap.ui.model.control":{"!description":"Control-based DataBinding","!category":"namespace"},"sap.ui.core.HTML_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.HTML with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.HTML"},"sap.ui.core.CalendarType":{"!description":"The types of Calendar","!category":"static class","Islamic":{"!description":"The Islamic calendar","!type":"String","!category":"enum"},"Gregorian":{"!description":"The Gregorian calendar","!type":"String","!category":"enum"}},"sap.ui.core.support.Support":{"StubType":{"!description":"Enumeration providing the possible support stub types.","!type":"String","!category":"enum"},"getType":{"!description":"Returns the type of this support stub.","!type":"fn() -> String","!category":"function"},"detachEvent":{"!type":"fn()","!category":"function"},"extend":{"!description":"Creates a new subclass of class sap.ui.core.support.Support with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn(), sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!category":"namespace","toString":{"!type":"function toString() { [native code for Array.toString, arity=0] }\n)","!category":"function"},"getStub":{"!description":"Returns the support stub instance. If an instance was not yet available a new one is\nwith the given type is created.\n\nThis function is internal and must not be called by an application.","!type":"fn(sType?: String) -> sap.ui.core.support.Support","!category":"function"},"openSupportTool":{"!description":"Opens the support tool in an external browser window.","!type":"fn()","!category":"function"},"EventType":"sap.ui.core.support.Support.EventType","sendEvent":{"!description":"Sends an event to the remote window.","!type":"fn(sEventId: String, mParams?: Object)","!category":"function"},"attachEvent":{"!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.support.Support.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.analytics.AnalyticalTreeBindingAdapter":{"getNumberOfExpandedLevels":{"!description":"Retrieves the currently set number of expanded levels from the Binding (commonly an AnalyticalBinding).","!type":"fn() -> Number","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","hasTotaledMeasures":{"!description":"Checks if the AnalyticalBinding has totaled measures available.\nUsed for rendering sum rows.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","setNumberOfExpandedLevels":{"!description":"Sets the number of expanded levels on the TreeBinding (commonly an AnalyticalBinding).\nThis is NOT the same as AnalyticalTreeBindingAdapter#collapse or AnalyticalTreeBindingAdapter#expand.\nSetting the number of expanded levels leads to different requests.\nThis function is used by the AnalyticalTable for the ungroup/ungroup-all feature.","!type":"fn(iLevels: Number)","!category":"function"},"!proto":"sap.ui.base.Object"},"jQuery.sap.util.Properties":{"!description":"Represents a list of properties (key/value pairs).\n\nEach key and its corresponding value in the property list is a string.\nValues are unicode escaped \\ue0012.\nKeys are case-sensitive and only alpha-numeric characters with a leading character are allowed.\n\nUse {@link jQuery.sap.properties} to create an instance of jQuery.sap.util.Properties.\n\nThe getProperty method is used to retrieve a value from the list.\nThe setProperty method is used to store or change a property in the list.\nAdditionally, the getKeys method can be used to retrieve an array of all keys that are\ncurrently in the list.","!category":"static class"},"sap.ui.model.analytics":{"AnalyticalBinding":"sap.ui.model.analytics.AnalyticalBinding_obj","AnalyticalTreeBindingAdapter":"sap.ui.model.analytics.AnalyticalTreeBindingAdapter_obj","v2":"sap.ui.model.analytics.v2","!category":"namespace","odata4analytics":"sap.ui.model.analytics.odata4analytics","ODataModelAdapter":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn()","!category":"function"}},"sap.ui.model.ClientModel":{"updateBindings":{"!description":"update all bindings","!type":"fn(bForceUpdate: Boolean)","!category":"function"},"destroy":{"!type":"fn()","!category":"function"},"!description":"Model implementation for Client models","getData":{"!description":"Returns the current data of the model.\nBe aware that the returned object is a reference to the model data so all changes to that data will also change the model data.","!type":"fn()","!category":"function"},"!category":"class","forceNoCache":{"!description":"Force no caching.","!type":"fn(bForceNoCache?: Boolean)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ClientModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.Model"},"sap.ui.core.URI":{"!description":"A string type that represents an RFC 3986 conformant URI.","!category":"namespace"},"sap.ui.model.analytics.odata4analytics.EntityType":{"getRequiredFilterPropertyNames":{"!description":"Get names of properties that must be filtered, that is they must appear\nin every $filter expression","!type":"fn() -> array(string)","!category":"function"},"getTextPropertyOfProperty":{"!description":"Get the text property related to the property with specified name\n(identified by property metadata annotation sap:text)","!type":"fn(sPropertyName: String) -> Object","!category":"function"},"findPropertyByName":{"!description":"Find property by name","!type":"fn(sPropertyName: String) -> Object","!category":"function"},"getProperties":{"!description":"Get all properties","!type":"fn() -> Object","!category":"function"},"getSuperOrdinatePropertyOfProperty":{"!description":"Get the super-ordinate property related to the property with specified\nname (identified by property metadata annotation sap:super-ordinate)","!type":"fn(sPropertyName: String) -> Object","!category":"function"},"getAllHierarchyPropertyNames":{"!description":"Get the names of all properties with an associated hierarchy","!type":"fn() -> array(string)","!category":"function"},"getKeyProperties":{"!description":"Get key properties of this type","!type":"fn() -> array(string)","!category":"function"},"getLabelOfProperty":{"!description":"Get label of the property with specified name (identified by property\nmetadata annotation sap:label)","!type":"fn(sPropertyName: String) -> String","!category":"function"},"!description":"Representation of a OData entity type.","getTypeDescription":{"!description":"Get full description for this entity type","!type":"fn() -> Object","!category":"function"},"getHierarchy":{"!description":"Get the hierarchy associated to a given property Based on the current\nspecification, hierarchies are always recursive. TODO: Extend behavior\nwhen leveled hierarchies get in scope","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.RecursiveHierarchy","!category":"function"},"getSortablePropertyNames":{"!description":"Get names of properties that can be sorted, that is they can be used in\n$orderby expressions","!type":"fn() -> array(string)","!category":"function"},"getQuickInfoOfProperty":{"!description":"Get quick info of the property with specified name (identified by property\nmetadata annotation sap:quickinfo)","!type":"fn(sPropertyName: String) -> String","!category":"function"},"!category":"class","getFilterablePropertyNames":{"!description":"Get names of properties that can be filtered, that is they can be used in\n$filter expressions","!type":"fn() -> array(string)","!category":"function"},"getHeadingOfProperty":{"!description":"Get heading of the property with specified name (identified by property\nmetadata annotation sap:heading)","!type":"fn(sPropertyName: String) -> String","!category":"function"},"getPropertiesWithFilterRestrictions":{"!description":"Get properties for which filter restrictions have been specified","!type":"fn() -> Object","!category":"function"},"getQName":{"!description":"Get the fully qualified name for this entity type","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.odata4analytics.Model":{"!description":"Representation of an OData model with analytical annotations defined\n       by OData4SAP.","!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.test.matchers.AggregationLengthEquals":{"!description":"AggregationLengthEquals - checks if an aggregation contains at least one entry","getName":{"!description":"Getter for property <code>name<\/code>.\n\nThe name of the aggregation that is used for matching","!type":"fn() -> String","!category":"function"},"!category":"class","setName":{"!description":"Setter for property <code>name<\/code>.","!type":"fn(sName: String) -> sap.ui.test.matchers.AggregationLengthEquals","!category":"function"},"getLength":{"!description":"Getter for property <code>length<\/code>.\n\nThe length that aggregation <code>name<\/code> should have","!type":"fn() -> Number","!category":"function"},"setLength":{"!description":"Setter for property <code>length<\/code>.","!type":"fn(iLength: Number) -> sap.ui.test.matchers.AggregationLengthEquals","!category":"function"},"isMatching":{"!description":"Checks if the control's aggregation <code>name<\/code> has length <code>length<\/code>","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function"},"!proto":"sap.ui.test.matchers.Matcher"},"sap.ui.model.analytics.odata4analytics.ParameterizationRequest":{"!description":"Creation of URIs for query parameterizations.","getURIToParameterizationEntry":{"!description":"Get the URI to locate the parameterization entity for the values assigned\nto all parameters beforehand. Notice that a value must be supplied for\nevery parameter including those marked as optional. For optional\nparameters, assign the special value that the service provider uses as an\n\"omitted\" value. For example, for services based on BW Easy Queries, this\nwould be an empty string.","!type":"fn(sServiceRootURI: String)","!category":"function"},"getParameterization":{"!description":"Get the description of the parameterization on which this request\noperates on","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Parameterization","!category":"function"},"!category":"class","setParameterValue":{"!description":"Assign a value to a parameter","!type":"fn(sParameterName: String, sValue: String, sToValue: String)","!category":"function"},"getURIToParameterizationEntitySet":{"!description":"Get the URI to locate the entity set for the query parameterization.","!type":"fn(sServiceRootURI: String)","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.SimpleType":{"!description":"This is an abstract base class for simple types.","validateValue":{"!description":"Validate whether a given value in model representation is valid and meets the\ndefined constraints (if any).","!type":"fn(oValue: Object)","!category":"function"},"formatValue":{"!description":"Format the given value in model representation to an output value in the given\ninternal type. This happens according to the format options, if target type is 'string'.\nIf oValue is not defined or null, null will be returned.","!type":"fn(oValue: Object, sInternalType: String) -> Object","!category":"function"},"!category":"class","parseValue":{"!description":"Parse a value of an internal type to the expected value of the model type.","!type":"fn(oValue: Object, sInternalType: String) -> Object","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.SimpleType.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.Type"},"sap.ui.model.odata":{"CountMode":"sap.ui.model.odata.CountMode","ODataContextBinding":"sap.ui.model.odata.ODataContextBinding_obj","BatchMode":"sap.ui.model.odata.BatchMode","v2":"sap.ui.model.odata.v2","ODataModel":"sap.ui.model.odata.ODataModel_obj","AnnotationHelper":"sap.ui.model.odata.AnnotationHelper","type":"sap.ui.model.odata.type","OperationMode":"sap.ui.model.odata.OperationMode","ODataPropertyBinding":"sap.ui.model.odata.ODataPropertyBinding_obj","Filter":"sap.ui.model.odata.Filter_obj","ODataMetaModel":"sap.ui.model.odata.ODataMetaModel_obj","!description":"OData-based DataBinding","ODataTreeBindingAdapter":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn()","!category":"function"},"ODataListBinding":"sap.ui.model.odata.ODataListBinding_obj","ODataMetadata":"sap.ui.model.odata.ODataMetadata_obj","!category":"namespace","UpdateMethod":"sap.ui.model.odata.UpdateMethod","ODataAnnotations":"sap.ui.model.odata.ODataAnnotations_obj","ODataMessageParser":"sap.ui.model.odata.ODataMessageParser_obj","ODataUtils":"sap.ui.model.odata.ODataUtils"},"sap.ui.core":{"IconColor":"sap.ui.core.IconColor","PopupInterface":"sap.ui.core.PopupInterface","handleValidation":{"!description":"Enable/disable validation handling by MessageManager for this component.\nThe resulting Messages will be propagated to the controls.","!type":"Boolean","!category":"enum"},"RenderManager":"sap.ui.core.RenderManager_obj","SeparatorItem":"sap.ui.core.SeparatorItem_obj","Scrolling":"sap.ui.core.Scrolling","activeBackgroundColor":{"!description":"Background color for Icon in active state.","!type":"String","!category":"enum"},"ScrollBarAction":"sap.ui.core.ScrollBarAction","LocalBusyIndicator":"sap.ui.core.LocalBusyIndicator_obj","BarColor":"sap.ui.core.BarColor","Item":"sap.ui.core.Item_obj","CalendarType":"sap.ui.core.CalendarType","search":"sap.ui.core.search","CustomData":"sap.ui.core.CustomData_obj","IconPool":"sap.ui.core.IconPool_obj","AccessibleRole":"sap.ui.core.AccessibleRole","collision":{"!description":"Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.","!type":"sap.ui.core.Collision","!category":"enum"},"scrollPosition":{"!description":"Scroll position in steps or pixels.","!type":"Number","!category":"enum"},"IntervalTrigger":"sap.ui.core.IntervalTrigger_obj","LabelEnablement":"sap.ui.core.LabelEnablement","support":"sap.ui.core.support","EventBus":"sap.ui.core.EventBus_obj","CSSSize":"sap.ui.core.CSSSize","CSSSizeShortHand":"sap.ui.core.CSSSizeShortHand","steps":{"!description":"Number of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically.","!type":"Number","!category":"enum"},"ws":"sap.ui.core.ws","Toolbar":"sap.ui.core.Toolbar","TextAlign":"sap.ui.core.TextAlign","textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!type":"sap.ui.core.TextDirection","!category":"enum"},"Wrapping":"sap.ui.core.Wrapping","content":{"!description":"HTML content to be displayed, defined as a string. \n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)<\/code>, so any \nrestrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are:\n<ul>\n<li>the content must be enclosed in tags, pure text is not supported. <\/li>\n<li>if the content contains script tags, they will be executed but they will not appear in the \n    resulting DOM tree. When the contained code tries to find the corresponding script tag, \n    it will fail.<\/li>\n<\/ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content \n(e.g. setContent(\"<div/><div/>\")), but this is not a guaranteed feature. The accepted content \nmight be restricted to single root nodes in future versions. To notify applications about this \nfact, a warning is written in the log when multiple root nodes are used.","!type":"String","!category":"enum"},"Dock":"sap.ui.core.Popup.Dock","VariantLayoutData":"sap.ui.core.VariantLayoutData_obj","closeDelay":{"!description":"Closing delay of the tooltip in milliseconds","!type":"Number","!category":"enum"},"ScrollBar":"sap.ui.core.ScrollBar_obj","AppCacheBuster":"sap.ui.core.AppCacheBuster","MessageType":"sap.ui.core.MessageType","myPosition":{"!description":"Optional. My position defines which position on the extended tooltip being positioned to align with the target control.","!type":"sap.ui.core.Dock","!category":"enum"},"LayoutData":"sap.ui.core.LayoutData_obj","ComponentMetadata":"sap.ui.core.ComponentMetadata_obj","Control":"sap.ui.core.Control_obj","delegate":"sap.ui.core.delegate","timestamp":{"!description":"Message's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs.","!type":"String","!category":"enum"},"useIconTooltip":{"!description":"Decides whether a default Icon tooltip should be used if no tooltip is set.","!type":"Boolean","!category":"enum"},"Renderer":"sap.ui.core.Renderer","activeColor":{"!description":"This color is shown when icon is pressed/activated by the user.","!type":"String","!category":"enum"},"openDuration":{"!description":"Optional. Open Duration in milliseconds.","!type":"Number","!category":"enum"},"TitleLevel":"sap.ui.core.TitleLevel","!category":"namespace","ImeMode":"sap.ui.core.ImeMode","src":{"!description":"This property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with a Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here.","!type":"sap.ui.core.URI","!category":"enum"},"URI":"sap.ui.core.URI","theming":"sap.ui.core.theming","UIComponent":"sap.ui.core.UIComponent_obj","Orientation":"sap.ui.core.Orientation","contentSize":{"!description":"Size of the scrollable content (in pixels).","!type":"sap.ui.core.CSSSize","!category":"enum"},"Message":"sap.ui.core.Message_obj","sanitizeContent":{"!description":"Whether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.","!type":"Boolean","!category":"enum"},"HorizontalAlign":"sap.ui.core.HorizontalAlign","Locale":"sap.ui.core.Locale_obj","emphasized":{"!description":"If set the title is displayed emphasized.\nThis feature is nor supported by all controls using the Title.control.","!type":"Boolean","!category":"enum"},"Title":"sap.ui.core.Title_obj","readOnly":{"!description":"Determines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.","!type":"Boolean","!category":"enum"},"!description":"The SAPUI5 Core Runtime.\n\nContains the UI5 jQuery plugins (jQuery.sap.*), the Core and all its components,\nbase classes for Controls, Components and the Model View Controller classes.","Collision":"sap.ui.core.Collision","Popup":"sap.ui.core.Popup_obj","Label":"sap.ui.core.Label","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!type":"[String]","!category":"enum"},"UIArea":"sap.ui.core.UIArea_obj","Element":"sap.ui.core.Element_obj","vertical":{"!description":"Orientation. Defines if the Scrollbar is vertical or horizontal.","!type":"Boolean","!category":"enum"},"ComponentContainer":"sap.ui.core.ComponentContainer_obj","EnabledPropagator":"sap.ui.core.EnabledPropagator_obj","VerticalAlign":"sap.ui.core.VerticalAlign","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!type":"Boolean","!category":"enum"},"backgroundColor":{"!description":"Background color of the Icon in normal state.","!type":"String","!category":"enum"},"tmpl":"sap.ui.core.tmpl","settings":{"!description":"The settings object passed to the component when created. The property can only be applied initially.","!type":"Object","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"ListItem":"sap.ui.core.ListItem_obj","type":{"!description":"type : String","!type":"String","!category":"enum"},"preferDOM":{"!description":"Whether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true):\n<ul>\n<li>for the initial rendering: when an HTML control is added to an UIArea for the first time \n    and if the root node of that UIArea contained DOM content with the same id as the HTML \n    control, then that content will be used for rendering instead of any specified string \n    content<\/li>\n<li>any follow-up rendering: when an HTML control is rendered for the second or any later \n    time and the preferDOM flag is set, then the DOM from the first rendering is preserved \n    and not replaced by the string content<\/li>\n<\/ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.","!type":"Boolean","!category":"enum"},"ValueState":"sap.ui.core.ValueState","level":{"!description":"Defines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.","!type":"sap.ui.core.TitleLevel","!category":"enum"},"height":{"!description":"This property is the height of the control that has to\nbe covered. With this height the position of the animation can be\nproperly set.","!type":"sap.ui.core.CSSSize","!category":"enum"},"HTML":"sap.ui.core.HTML_obj","hoverBackgroundColor":{"!description":"Background color for Icon in hover state. This property has no visual effect when run on mobile device.","!type":"String","!category":"enum"},"ID":"sap.ui.core.ID","value":{"!description":"The data stored in this CustomData object.\nWhen the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string.\nIf this restriction is violated, a warning will be logged and nothing will be written to the DOM.","!type":"Object","!category":"enum"},"BusyIndicator":"sap.ui.core.BusyIndicator","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"Component":"sap.ui.core.Component_obj","BusyIndicatorUtils":"sap.ui.core.BusyIndicatorUtils","key":{"!description":"Can be used as input for subsequent actions.","!type":"String","!category":"enum"},"closeDuration":{"!description":"Optional. Close Duration in milliseconds.","!type":"Number","!category":"enum"},"enabled":{"!description":"Enabled items can be selected.","!type":"Boolean","!category":"enum"},"CSSColor":"sap.ui.core.CSSColor","text":{"!description":"The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.","!type":"String","!category":"enum"},"width":{"!description":"This property is the width of the control that has to\nbe covered. With this width the position of the animation can be\nproperly set.","!type":"sap.ui.core.CSSSize","!category":"enum"},"format":"sap.ui.core.format","ValueStateSupport":"sap.ui.core.ValueStateSupport","noTabStop":{"!description":"Defines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached.\nIf it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.","!type":"Boolean","!category":"enum"},"url":{"!description":"The URL of the component. The property can only be applied initially.","!type":"sap.ui.core.URI","!category":"enum"},"size":{"!description":"Size of the Scrollbar (in pixels).","!type":"sap.ui.core.CSSSize","!category":"enum"},"Design":"sap.ui.core.Design","IShrinkable":"sap.ui.core.IShrinkable","ResizeHandler":"sap.ui.core.ResizeHandler","util":"sap.ui.core.util","Fragment":"sap.ui.core.Fragment_obj","decorative":{"!description":"A decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.","!type":"Boolean","!category":"enum"},"CustomStyleClassSupport":{"!description":"Applies the support for custom style classes on the prototype of a <code>sap.ui.core.Element<\/code>.\n\nAll controls (subclasses of <code>sap.ui.core.Control<\/code>) provide the support custom style classes. The control API provides functions\nto the application which allow it to add, remove or change style classes for the control.\nIn general, this option is not available for elements because elements do not necessarily have a representation in the DOM.\n\nThis function can be used by a control developer to explicitly enrich the API of his/her element implementation with the API functions\nfor the custom style class support. It must be called on the prototype of the element.\n\n<b>Usage Example:<\/b>\n<pre>\nsap.ui.define(['sap/ui/core/Element', 'sap/ui/core/CustomStyleClassSupport'], function(Element, CustomStyleClassSupport) {\n   \"use strict\";\n   var MyElement = Element.extend(\"my.MyElement\", {\n      metadata : {\n         //...\n      }\n      //...\n   });\n   \n   CustomStyleClassSupport.apply(MyElement.prototype);\n   \n   return MyElement;\n}, true);\n<\/pre>\n\nFurthermore, the function <code>oRenderManager.writeClasses(oElement);<\/code> ({@link sap.ui.core.RenderManager#writeClasses}) must be called within\nthe renderer of the control to which the element belongs, when writing the root tag of the element. This ensures the classes are written to the HTML.\n\nThis function adds the following functions to the elements prototype:\n<ul>\n<li><code>addStyleClass<\/code>: {@link sap.ui.core.Control#addStyleClass}<\/li>\n<li><code>removeStyleClass<\/code>: {@link sap.ui.core.Control#removeStyleClass}<\/li>\n<li><code>toggleStyleClass<\/code>: {@link sap.ui.core.Control#toggleStyleClass}<\/li>\n<li><code>hasStyleClass<\/code>: {@link sap.ui.core.Control#hasStyleClass}<\/li>\n<\/ul>\nIn addition the clone function of the element is extended to ensure that the custom style classes are also available on the cloned element.\n\n<b>Note:<\/b> This function can only be used <i>within<\/i> control development. An application cannot add style class support on existing elements by calling this function.","!type":"fn()","!category":"function"},"openDelay":{"!description":"Opening delay of the tooltip in milliseconds","!type":"Number","!category":"enum"},"atPosition":{"!description":"Optional. At position defines which position on the target control to align the positioned tooltip.","!type":"sap.ui.core.Dock","!category":"enum"},"routing":"sap.ui.core.routing","propagateModel":{"!description":"Defines whether binding information is propagated to the component.","!type":"Boolean","!category":"enum"},"additionalText":{"!description":"Some additional text of type string, optionally to be displayed along with this item.","!type":"String","!category":"enum"},"TextDirection":"sap.ui.core.TextDirection","Percentage":"sap.ui.core.Percentage","DeclarativeSupport":"sap.ui.core.DeclarativeSupport_obj","OpenState":"sap.ui.core.OpenState","History":"sap.ui.core.History_obj","alt":{"!description":"This defines the alternative text which is used for outputting the aria-label attribute on the DOM.","!type":"String","!category":"enum"},"name":{"!description":"Component name, the package where the component is contained. The property can only be applied initially.","!type":"String","!category":"enum"},"InvisibleText":"sap.ui.core.InvisibleText_obj","offset":{"!description":"Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".","!type":"String","!category":"enum"},"hoverColor":{"!description":"This color is shown when icon is hovered. This property has no visual effect when run on mobile device.","!type":"String","!category":"enum"},"icon":{"!description":"Defines the URL for icon display","!type":"sap.ui.core.URI","!category":"enum"},"LocaleData":"sap.ui.core.LocaleData_obj","Core":"sap.ui.core.Core_obj","Configuration":"sap.ui.core.Configuration_obj","TooltipBase":"sap.ui.core.TooltipBase_obj","message":"sap.ui.core.message","writeToDom":{"!description":"If set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute.\nIf the key is \"abc\" and the value is \"cde\", the HTML will look as follows:\n&lt;SomeTag ... data-abc=\"cde\" ... &gt;\nThus the application can provide stable attributes by data binding which can be used for styling or identification purposes.\nATTENTION: use carefully to not create huge attributes or a large number of them.","!type":"Boolean","!category":"enum"},"mvc":"sap.ui.core.mvc","FormatSettings":"sap.ui.core.Configuration.FormatSettings_obj","color":{"!description":"The color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent.","!type":"String","!category":"enum"},"Icon":"sap.ui.core.Icon_obj"},"jQuery.sap.history_obj":{"!type":"fn(mSettings: Object)","prototype":"jQuery.sap.history"},"sap.ui.model.Binding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Binding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(the: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.Binding"},"sap.ui.core.format.NumberFormat":{"!description":"The NumberFormat is a static class for formatting and parsing numeric values according\nto a set of format options.","getFloatInstance":{"!description":"Get a float instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p>\nThis instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\nPlease set the roundingMode property in oFormatOptions to change the\ndefault value.\n<\/p>","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.NumberFormat","!category":"function"},"getPercentInstance":{"!description":"Get a percent instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p>\nThis instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\nPlease set the roundingMode property in oFormatOptions to change the\ndefault value.\n<\/p>","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.NumberFormat","!category":"function"},"!category":"class","getIntegerInstance":{"!description":"Get an integer instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p>\nThis instance has TOWARDS_ZERO set as default rounding mode.\nPlease set the roundingMode property in oFormatOptions to change the\ndefault value.\n<\/p>","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.NumberFormat","!category":"function"},"format":{"!description":"Format a number according to the given format options.","!type":"fn(oValue: Number | Array, sMeasure?: String) -> String","!category":"function"},"parse":{"!description":"Parse a string which is formatted according to the given format options.","!type":"fn(sValue: String) -> Number | Array","!category":"function"},"getCurrencyInstance":{"!description":"Get a currency instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p>\nThis instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\nPlease set the roundingMode property in oFormatOptions to change the\ndefault value.\n<\/p>","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.NumberFormat","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.format.NumberFormat.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.mvc.TemplateView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.TemplateView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.TemplateView"},"sap.ui.core.Locale":{"getSAPLogonLanguage":{"!description":"Best guess to get a proper SAP Logon Language for this locale.\n\nConversions taken into account:\n<ul>\n<li>use the language part only<\/li> \n<li>convert old ISO639 codes to newer ones (e.g. 'iw' to 'he')<\/li>\n<li>for Chinese, map 'Traditional Chinese' to SAP proprietary code 'zf'<\/li>\n<li>map private extensions x-sap1q and x-sap2q to SAP pseudo languages '1Q' and '2Q'<\/li>\n<li>remove ext. language sub tags<\/li>\n<li>convert to uppercase<\/li>\n<\/ul>\n\nNote that the conversion also returns a result for languages that are not \nsupported by the default set of SAP languages. This method has no knowledge \nabout the concrete languages of any given backend system.","!type":"fn() -> String","!category":"function"},"getPrivateUseSubtags":{"!description":"Get the locale private use section","!type":"fn() -> String","!category":"function"},"getScript":{"!description":"Get the locale script or null if none was specified.\n\nNote that the case might differ from the original language tag\n(Upper case first letter and lower case reminder enforced as \nrecommended by BCP47/ISO15924)","!type":"fn() -> String","!category":"function"},"!description":"Locale represents a locale setting, consisting of a language, script, region, variants, extensions and private use section","getVariantSubtags":{"!description":"Get the locale variants as an array of individual variants.\n\nThe separating dashes are not part of the result.\nIf there is no variant section in the locale tag, an empty array is returned.","!type":"fn() -> [String]","!category":"function"},"getLanguage":{"!description":"Get the locale language.\n\nNote that the case might differ from the original script tag \n(Lower case is enforced as recommended by BCP47/ISO639).","!type":"fn() -> String","!category":"function"},"!category":"class","getExtension":{"!description":"Get the locale extension as a single string or null.\n\nThe extension always consists of a singleton character (not 'x'), \na dash '-' and one or more extension token, each separated \nagain with a dash.\n\nUse {@link #getExtensions} to get the individual extension tokens as an array.","!type":"fn() -> String","!category":"function"},"getRegion":{"!description":"Get the locale region or null if none was specified.\n\nNote that the case might differ from the original script tag \n(Upper case is enforced as recommended by BCP47/ISO3166-1).","!type":"fn() -> String","!category":"function"},"getPrivateUse":{"!description":"Get the locale private use section or null.","!type":"fn() -> String","!category":"function"},"getVariant":{"!description":"Get the locale variants as a single string or null.\n\nMultiple variants are separated by a dash '-'.","!type":"fn() -> String","!category":"function"},"getExtensionSubtags":{"!description":"Get the locale extensions as an array of tokens.\n\nThe leading singleton and the separating dashes are not part of the result.\nIf there is no extensions section in the locale tag, an empty array is returned.","!type":"fn() -> [String]","!category":"function"},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Locale.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"jQuery.Event":{"getOffsetX":{"!description":"Returns OffsetX of Event. In jQuery there is a bug. In IE the value is in offsetX, in FF in layerX","!type":"fn() -> Number","!category":"function"},"!description":"Check the jQuery.Event class documentation available under \"http://www.jquery.com\"<br/>\nand \"http://api.jquery.com/category/events/event-object/\" for details.","isPseudoType":{"!description":"Checks whether this instance of {@link jQuery.Event} is of the given <code>sType<\/code> pseudo type.","!type":"fn(sType: String) -> Boolean","!category":"function"},"!category":"class","getOffsetY":{"!description":"Returns OffsetY of Event. In jQuery there is a bug. in IE the value is in offsetY, in FF in layerY.","!type":"fn() -> Number","!category":"function"},"getPseudoTypes":{"!description":"Returns an array of names (as strings) identifying {@link jQuery.sap.PseudoEvents} that are fulfilled by this very Event instance.","!type":"fn() -> [String]","!category":"function"},"!proto":"Object"},"sap.ui.core.CustomData":{"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe data stored in this CustomData object.\nWhen the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string.\nIf this restriction is violated, a warning will be logged and nothing will be written to the DOM.","!type":"fn() -> Object","!category":"function"},"setWriteToDom":{"!description":"Sets a new value for property <code>writeToDom<\/code>.\n\nIf set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute.\nIf the key is \"abc\" and the value is \"cde\", the HTML will look as follows:\n&lt;SomeTag ... data-abc=\"cde\" ... &gt;\nThus the application can provide stable attributes by data binding which can be used for styling or identification purposes.\nATTENTION: use carefully to not create huge attributes or a large number of them.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bWriteToDom: Boolean) -> sap.ui.core.CustomData","!category":"function"},"getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nThe key of the data in this CustomData object.\nWhen the data is just stored, it can be any string, but when it is to be written to HTML (writeToDom == true) then it must also be a valid HTML attribute name (it must conform to the sap.ui.core.ID type and may contain no colon) to avoid collisions, it also may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\nIf any restriction is violated, a warning will be logged and nothing will be written to the DOM.","!type":"fn() -> String","!category":"function"},"!description":"Contains a single key/value pair of custom data attached to an Element. See method data().","getWriteToDom":{"!description":"Gets current value of property <code>writeToDom<\/code>.\n\nIf set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute.\nIf the key is \"abc\" and the value is \"cde\", the HTML will look as follows:\n&lt;SomeTag ... data-abc=\"cde\" ... &gt;\nThus the application can provide stable attributes by data binding which can be used for styling or identification purposes.\nATTENTION: use carefully to not create huge attributes or a large number of them.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nThe data stored in this CustomData object.\nWhen the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string.\nIf this restriction is violated, a warning will be logged and nothing will be written to the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oValue: Object) -> sap.ui.core.CustomData","!category":"function"},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nThe key of the data in this CustomData object.\nWhen the data is just stored, it can be any string, but when it is to be written to HTML (writeToDom == true) then it must also be a valid HTML attribute name (it must conform to the sap.ui.core.ID type and may contain no colon) to avoid collisions, it also may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\nIf any restriction is violated, a warning will be logged and nothing will be written to the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.ui.core.CustomData","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.CustomData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.core.VerticalAlign":{"Bottom":{"!description":"\nContent is aligned at the bottom.","!type":"String","!category":"enum"},"Top":{"!description":"\nContent is aligned at the top.","!type":"String","!category":"enum"},"Inherit":{"!description":"\nContent respect the parent's vertical alignment.","!type":"String","!category":"enum"},"!description":"Configuration options for vertical alignments, for example of a layout cell content within the borders.","Middle":{"!description":"\nContent is centered vertically .","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.model.odata.type.Double":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Double<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>number<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ndefined constraints.","!type":"fn(fValue: Number)","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type. When formatting to \"string\", very large\nor very small values are formatted to the exponential format (e.g. \"-3.14 E+15\").","!type":"fn(vValue: Number | String, sTargetType: String) -> Number | String","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to an Edm.Double in\n<code>number<\/code> representation.","!type":"fn(vValue: String | Number, sSourceType: String) -> Number","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Double.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.core.ws.WebSocket_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ws.WebSocket with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sUrl: String, aProtocols?: Array)","prototype":"sap.ui.core.ws.WebSocket"},"sap.ui.core.util.serializer.XMLViewSerializer":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.XMLViewSerializer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.test.matchers.BindingPath":{"setModelName":{"!description":"Setter for property <code>modelName<\/code>.","!type":"fn(sModelName: String) -> sap.ui.test.matchers.BindingPath","!category":"function"},"!description":"BindingPath - checks if a control has a binding context with the exact same binding path","setPath":{"!description":"Setter for property <code>path<\/code>.","!type":"fn(sPath: String) -> sap.ui.test.matchers.BindingPath","!category":"function"},"getPath":{"!description":"Getter for property <code>path<\/code>.\n\nThe value of the binding path that is used for matching.","!type":"fn() -> String","!category":"function"},"!category":"class","getModelName":{"!description":"Getter for property <code>modelName<\/code>.\n\nThe name of the binding model that is used for matching.","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.test.matchers.Matcher"},"sap.ui.model.odata.BatchMode":{"!description":"Different modes for retrieving the count of collections","!category":"namespace","None":{"!description":"No batch requests","!type":"String","!category":"enum"},"Group":{"!description":"Batch grouping enabled","!type":"String","!category":"enum"}},"sap.ui.model.FilterType":{"!description":"Operators for the Filter.","Application":{"!description":"Filters which are changed by the application","!type":"String","!category":"enum"},"!category":"namespace","Control":{"!description":"Filters which are set by the different controls","!type":"String","!category":"enum"}},"sap.ui.model.odata.type.DateTime_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTime with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.DateTimeBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.DateTime"},"sap.ui.core.message.ControlMessageProcessor_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.ControlMessageProcessor with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.message.ControlMessageProcessor"},"sap.ui.model.type.Boolean_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Boolean with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Boolean"},"sap.ui.core.Element_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Element with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the following:\n<ul>\n<li><code>metadata:<\/code> an (optional) object literal containing meta information about the class.\nThe information in the object literal will be wrapped by an instance of ElementMetadata\nand might contain the following information:\n<ul>\n<li>all values accepted for metadata as documented for the {@link sap.ui.base.Object.extend Object.extend} method<\/li>\n<li>library: {string} (optional) name of the library that contains the element/control\n<li>properties: a map of property info objects, mapped by the property name\n    Each info object should be a simple object literal and may contain the following information\n    <ul>\n    <li>type {string} optional type of the property, defaults to type \"string\"\n    <li>[defaultValue] {any} default value of the property. When omitted, defaults to the default value for the type\n    <li>group {string} optional semantic group of the property. Defaults to \"Misc\"\n    <\/ul>\n    If the property info object is not an object literal, it is assumed to be a string and\n    interpreted as the type of the property. All other informations use their default values.\n<li>aggregations: a map of aggregation info objects, mapped by the aggregation name\n    By convention, the name should be a singular name for aggregations of cardinality 0..1 and\n    should be a plural name for aggregations of cardinality 0..n.\n\n    The info object should contain the following information\n    <ul>\n    <li>type {string} (optional) type of the aggregated controls/elements, defaults to sap.ui.core.Control\n    <li>altTypes {string[]} (optional) alternative primitive types that the aggregation can have (like string etc.). Defaults to no alternative types.\n    <li>multiple {boolean} (optional) information about the cardinality, defaults to true (multiple aggregation)\n    <li>singularName {string} (optional) singular name for 0..n aggregations. If not specified, a singular name is guessed from the plural name.\n    <\/ul>\n    If the aggregation info object is not an object literal, it is assumed to be a string and\n    interpreted as the type of the aggregation. All other informations use their default values.\n<li>associations: a map of association info objects, mapped by the association name\n    By convention, the name should be a singular name for aggregations of cardinality 0..1 and\n    should be a plural name for aggregations of cardinality 0..n.\n\n    The info object should contain the following information\n    <ul>\n    <li>type {string} type of the associated controls/elements, defaults to sap.ui.core.Control\n    <li>multiple {boolean} (optional) information about the cardinality, defaults to false (single aggregation)\n    <li>singularName {string} (optional) singular name for 0..n aggregations. If not specified, a singular name is guessed from the plural name.\n    <\/ul>\n    If the association info object is not an object literal, it is assumed to be a string and\n    interpreted as the type of the aggregation. All other informations then use their default values.\n<li>events: a map of event info objects, mapped by the event name\n    The info object can contain the following information\n    <ul>\n    <li><code>allowPreventDefault:<\/code> {boolean} whether the control allows to prevent its default behavior for this event (defaults to false) <\/li>\n    <\/ul>\n<\/ul>\nFor all properties, aggregations, associations and events, the usual access methods are created and added to the public facade.\nThey don't need to be listed in the publicMethods array.\n<\/li>\n\n<li><code>constructor:<\/code> a function that serves as a constructor function for the new element class.\nIf no constructor function is given, the framework creates a default implementation that delegates all\nits arguments to the constructor function of the base class.\n<b>Note:<\/b> most of the time, subclasses of Element don't need to specify their own constructor function.\nThey should use the symmetric {@link #init} and {@link #exit} hooks instead.\n<\/li>\n\n<li><code>renderer:<\/code> definition of a renderer. This can be any of the following\n<ul>\n<li>the class name of a renderer class (a string)<\/li>\n<li>a render function with signature <code>function(oRenderManager, oControl)<\/code> that implements the rendering for the new class<\/li>\n<li>an object literal that contains functions/properties that should be mixed into a new render class which is\ncreated as a subclass of the renderer of the current class.<\/li>\n<\/ul>\n<b>Note:<\/b> usually only controls have a renderer. But to keep the control creation APIs simple and to honor future\nextensions of the current policy, the definition of a renderer is supported for direct subclasses of Element as well.\n<\/li>\n\n<li><i>any-other-name:<\/i> any other property in the <code>oClassInfo<\/code> is copied into the prototype\nobject of the newly created class. Callers can thereby add methods or properties to all instances of the\nclass. But be aware that the given values are shared between all instances of the class. Usually, it doesn't\nmake sense to use primitive values here other than to declare public constants.\n\nAll methods added this way and whose name is not 'init' nor 'exit' nor does it start with an underscore ('_')\nnor with the prefix 'on' are assumed to be public methods and are automatically added to the list of public facade methods.\n<\/ul>\n\nThe prototype object of the newly created class uses the same prototype as instances of the base class\n(prototype chaining).\n\nA metadata object is always created, even if there is no <code>metadata<\/code> entry in the <code>oClassInfo<\/code>\nobject. A getter for the metadata is always attached to the prototype and to the class (constructor function)\nitself.\n\nLast but not least, with the third argument <code>FNMetaImpl<\/code> the constructor of a metadata class\ncan be specified. Instances of that class will be used to represent metadata for the newly created class\nand for any subclass created from it. Typically, only frameworks will use this parameter to enrich the\nmetadata for a new class hierarchy they introduce (as done by  {@link sap.ui.core.Element Element}).","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Element"},"sap.ui.model.analytics.odata4analytics.EntitySet_obj":{"!type":"fn(oModel: Object, oSchema: Object, oContainer: Object, oEntitySet: Object, oEntityType: Object)","prototype":"sap.ui.model.analytics.odata4analytics.EntitySet"},"sap.ui.core.mvc.HTMLView":{"!description":"A view defined/constructed by declarative HTML.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.HTMLView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.mvc.View"},"sap.ui.model.TreeBindingUtils":{"!category":"namespace"},"jQuery.os":{"blackberry":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.os.blackberry<br>Whether the current operating system is BlackBerry","!type":"Boolean","!category":"enum"},"os":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.os.name<br>The name of the operating system; currently supported are: \"ios\", \"android\", \"blackberry\"","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.os<br>Holds information about the current operating system","android":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.os.android<br>Whether the current operating system is Android","!type":"Boolean","!category":"enum"},"ios":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.os.ios<br>Whether the current operating system is Apple iOS","!type":"Boolean","!category":"enum"},"winphone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.os.winphone<br>Whether the current operating system is Windows Phone","!type":"Boolean","!category":"enum"},"!category":"namespace","fVersion":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.os.version<br>The version of the operating system parsed as a float (major and first minor version)","!type":"Number","!category":"enum"},"version":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.os.versionStr<br>The version of the operating system as a string (including minor versions)","!type":"String","!category":"enum"}},"sap.ui.core.routing.HistoryDirection":{"!description":"Enumaration for different HistoryDirections","Unknown":{"!description":"A Navigation took place, but it could be any of the other three states","!type":"String","!category":"enum"},"NewEntry":{"!description":"A new Entry is added to the history","!type":"String","!category":"enum"},"!category":"static class","Forwards":{"!description":"The page has already been navigated to and it was the successor of the previous page","!type":"String","!category":"enum"},"Backwards":{"!description":"The page has already been navigated to and it was the precessor of the previous page","!type":"String","!category":"enum"}},"sap.ui.app.MockServer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The mock server code has been moved to sap.ui.core.util - see {@link sap.ui.core.util.MockServer}<br>Class to mock a server","!category":"class","!proto":"sap.ui.base.ManagedObject"},"sap.ui.model.odata.v2.ODataContextBinding":{"!description":"The ContextBinding is a specific binding for a setting context for the model","!category":"class","refresh":{"!type":"fn(bForceUpdate?: Boolean, sGroupId?: String)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.format":{"FileSizeFormat":"sap.ui.core.format.FileSizeFormat_obj","!description":"Format classes","DateFormat":"sap.ui.core.format.DateFormat_obj","!category":"namespace","NumberFormat":"sap.ui.core.format.NumberFormat_obj","RoundingMode":"sap.ui.core.format.NumberFormat.RoundingMode"},"sap.ui.core.mvc.XMLView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.XMLView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.XMLView"},"sap.ui.core.format.DateFormat_obj":{"!type":"fn()","prototype":"sap.ui.core.format.DateFormat"},"sap.ui.core.util.serializer.delegate.HTML_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.HTML with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.serializer.delegate.Delegate.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(fnGetControlId?: fn(), fnGetEventHandlerName?: fn())","prototype":"sap.ui.core.util.serializer.delegate.HTML"},"sap.ui.model.odata.type.SByte_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.SByte with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.SByte"},"sap.ui.model.ListBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ListBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, aSorters?: Array, aFilters?: Array, mParameters?: Object)","prototype":"sap.ui.model.ListBinding"},"sap.ui.core.format.NumberFormat.RoundingMode":{"AWAY_FROM_ZERO":{"!description":"Rounding mode to round away from zero","!type":"String","!category":"enum"},"HALF_FLOOR":{"!description":"Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards negative infinity.","!type":"String","!category":"enum"},"!description":"Specifies a rounding behavior for numerical operations capable of discarding precision. Each rounding mode in this object indicates how the least\nsignificant returned digits of rounded result is to be calculated.","HALF_AWAY_FROM_ZERO":{"!description":"Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round away from zero.","!type":"String","!category":"enum"},"TOWARDS_ZERO":{"!description":"Rounding mode to round towards zero","!type":"String","!category":"enum"},"CEILING":{"!description":"Rounding mode to round towards positive infinity","!type":"String","!category":"enum"},"!category":"static class","FLOOR":{"!description":"Rounding mode to round towards negative infinity","!type":"String","!category":"enum"},"HALF_TOWARDS_ZERO":{"!description":"Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards zero.","!type":"String","!category":"enum"},"HALF_CEILING":{"!description":"Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards positive infinity.","!type":"String","!category":"enum"}},"sap.ui.core.tmpl.HandlebarsTemplate_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.HandlebarsTemplate with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.HandlebarsTemplate"},"sap.ui.model.odata.ODataMetadata_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMetadata with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sMetadataURI: String, mParams?: Object)","prototype":"sap.ui.model.odata.ODataMetadata"},"sap.ui.model.type.Date":{"getOutputPattern":{"!type":"fn()","!category":"function"},"!description":"This class represents date simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Date.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.SimpleType"},"sap.ui.core.Collision":{"!description":"Collision behavior: horizontal/vertical.\n\nDefines how the position of an element should be adjusted in case it overflows the window in some direction. For both\ndirections this can be \"flip\", \"fit\" or \"none\". If only one behavior is provided it is applied to both directions.\nExamples: \"flip\", \"fit none\".","!category":"namespace"},"sap.ui.model.Type_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Type with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.model.Type"},"sap.ui.core.EnabledPropagator":{"!description":"Helper Class for enhancement of a Control with propagation of enabled property.\n\n<b>This constructor should be applied to the prototype of a control<\/b>\n\nExample:\n<code>\nsap.ui.core.EnabledPropagator.call(<i>Some-Control<\/i>.prototype, <i>Default-value, ...<\/i>);\n<\/code>\ne.g.\n<code>\nsap.ui.core.EnabledPropagator.call(sap.ui.commons.Button.prototype);\n<\/code>","!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.odata4analytics.Dimension_obj":{"!type":"fn(oQueryResult: sap.ui.model.analytics.odata4analytics.QueryResult, oProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.Dimension"},"sap.ui.model.odata.type.Time":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Time<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as an\nobject with two properties:\n<ul>\n<li><code>__edmType<\/code> with the value \"Edm.Time\"\n<li><code>ms<\/code> with the number of milliseconds since midnight\n<\/ul>","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ndefined constraints.","!type":"fn(oValue: Object)","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type","!type":"fn(oValue: Object, sTargetType: String) -> String","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to a time object.","!type":"fn(sValue: String, sSourceType: String) -> Object","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Time.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.base.ManagedObject":{"insertAggregation":{"!description":"Inserts managed object <code>oObject<\/code> to the aggregation named <code>sAggregationName<\/code> at\nposition <code>iIndex<\/code>.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance\nof the type specified for that aggregation) or when the method is called for an aggregation\nof cardinality 0..1, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the given index is out of range with respect to the current content of the aggregation,\nit is clipped to that range (0 for iIndex < 0, n for iIndex > n).\n\nPlease note that this method does not work as expected when an object is added\nthat is already part of the aggregation. In order to change the index of an object\ninside an aggregation, first remove it, then insert it again.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically insert an object into an aggregation.\nUse the concrete method insert<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject, iIndex: Number, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"attachValidationSuccess":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'validationSuccess' event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired after a new value for a bound property has been propagated to the model.\nOnly fired, when the binding uses a data type.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function"},"setAssociation":{"!description":"Sets the associatied object for the given managed association of cardinality '0..1' and\nmarks this ManagedObject as changed.\n\nThe associated object can either be given by itself or by its id. If <code>null<\/code> or\n<code>undefined<\/code> is given, the association is cleared.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically set an object in an association.\nUse the concrete method set<i>XYZ<\/i> for association 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sAssociationName: String, sId: String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"setModel":{"!description":"Sets or unsets a model for the given model name for this ManagedObject.\n\nThe <code>sName<\/code> must either be <code>undefined<\/code> (or omitted) or a non-empty string.\nWhen the name is omitted, the default model is set/unset.\n\nWhen <code>oModel<\/code> is <code>null<\/code> or <code>undefined<\/code>, a previously set model\nwith that name is removed from this ManagedObject. If an ancestor (parent, UIArea or Core) has a model\nwith that name, this ManagedObject will immediately inherit that model from its ancestor.\n\nAll local bindings that depend on the given model name, are updated (created if the model references\nbecame complete now; updated, if any model reference has changed; removed if the model references\nbecame incomplete now).\n\nAny change (new model, removed model, inherited model) is also applied to all aggregated descendants\nas long as a descendant doesn't have its own model set for the given name.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null<\/code>,\nthe empty string <code>\"\"<\/code> or the string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code> as model name.\n\nNote: By design, it is not possible to hide an inherited model by setting a <code>null<\/code> or\n<code>undefined<\/code> model. Applications can set an empty model to achieve the same.\n\nNote: A ManagedObject inherits models from the Core only when it is a descendant of an UIArea.","!type":"fn(oModel: sap.ui.model.Model, sName?: String) -> sap.ui.base.ManagedObject","!category":"function"},"setBindingContext":{"!description":"Set the binding context for this ManagedObject for the model with the given name.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null<\/code>,\nthe empty string <code>\"\"<\/code> or the string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code> as model name.\n\nNote: A ManagedObject inherits binding contexts from the Core only when it is a descendant of an UIArea.","!type":"fn(oContext: Object, sModelName?: String) -> sap.ui.base.ManagedObject","!category":"function"},"setAggregation":{"!description":"Sets a new object in the named 0..1 aggregation of this ManagedObject and\nmarks this ManagedObject as changed.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance\nof the type specified for that aggregation) or when the method is called for an aggregation\nof cardinality 0..n, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the new object is the same as the currently aggregated object, then the internal state\nis not modified and this ManagedObject is not marked as changed.\n\nIf the given object is different, the parent of a previously aggregated object is cleared\n(it must have been this ManagedObject before), the parent of the given object is set to this\nManagedObject and {@link #invalidate} is called for this object.\n\nNote that this method does neither return nor destroy the previously aggregated object.\nThis behavior is inherited by named set methods (see below) in subclasses.\nTo avoid memory leaks, applications therefore should first get the aggregated object,\nkeep a reference to it or destroy it, depending on their needs, and only then set a new\nobject.\n\nNote that ManagedObject only implements a single level of change tracking: if a first\ncall to setAggregation recognizes a change, 'invalidate' is called. If another call to\nsetAggregation reverts that change, invalidate() will be called again, the new status\nis not recognized as being 'clean' again.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically set an object in an aggregation.\nUse the concrete method set<i>XYZ<\/i> for aggregation 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sAggregationName: String, oObject: Object, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"bindAggregation":{"!description":"Bind an aggregation to the model.\n\nThe bound aggregation will use the given template, clone it for each item\nwhich exists in the bound list and set the appropriate binding context.\nThis is a generic method which can be used to bind any aggregation to the\nmodel. A managed object may flag aggregations in the metamodel with\nbindable=\"bindable\" to get typed bind<i>Something<\/i> methods for those aggregations.","!type":"fn(sName: String, oBindingInfo: Object) -> sap.ui.base.ManagedObject","!category":"function"},"hasModel":{"!description":"Check if any model is set to the ManagedObject or to one of its parents (including UIArea and Core).\n\nNote: A ManagedObject inherits models from the Core only when it is a descendant of an UIArea.","!type":"fn() -> Boolean","!category":"function"},"unbindAggregation":{"!description":"Unbind the aggregation from the model","!type":"fn(sName: String, bSuppressReset: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"destroyAggregation":{"!description":"Destroys (all) the managed object(s) in the aggregation named <code>sAggregationName<\/code> and empties the\naggregation. If the aggregation did contain any object, this ManagedObject is marked as changed.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically destroy all objects in an aggregation.\nUse the concrete method destroy<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"getId":{"!description":"Returns the object's Id.","!type":"fn() -> String","!category":"function"},"findAggregatedObjects":{"!description":"Searches and returns an array of child elements and controls which are\nreferenced within an aggregation or aggregations of child elements/controls.\nThis can be either done recursive or not. Optionally a condition function can be passed that\nreturns true if the object should be added to the array.\n<br>\n<b>Take care: this operation might be expensive.<\/b>","!type":"fn(bRecursive: Boolean, fnCondition: Boolean) -> [sap.ui.base.ManagedObject]","!category":"function"},"clone":{"!description":"Clones a tree of objects starting with the object on which clone is called first (root object).\n\nThe ids within the newly created clone tree are derived from the original ids by appending\nthe given <code>sIdSuffix<\/code> (if no suffix is given, one will be created; it will be\nunique across multiple clone calls).\n\nThe <code>oOptions<\/code> configuration object can have the following properties:\n<ul>\n<li>The boolean value <code>cloneChildren<\/code> specifies wether associations/aggregations will be cloned<\/li>\n<li>The boolean value <code>cloneBindings<\/code> specifies if bindings will be cloned<\/li>\n<\/ul>\n\nFor each cloned object the following settings are cloned based on the metadata of the object and the defined options:\n<ul>\n<li>all properties that are not bound. If cloneBinding is false even these properties will be cloned;\nthe values are used by reference, they are not cloned<\/li>\n<li>all aggregated objects that are not bound. If cloneBinding is false even the ones that are bound will be cloned;\nthey are all cloned recursively using the same <code>sIdSuffix<\/code><\/li>\n<li>all associated controls; when an association points to an object inside the cloned object tree,\n    then the cloned association will be modified to that it points to the clone of the target object.\n    When the association points to a managed object outside of the cloned object tree, then its\n    target won't be changed.<\/li>\n<li>all models set via setModel(); used by reference <\/li>\n<li>all property and aggregation bindings (if cloneBindings is true); the pure binding infos (path, model name) are\n    cloned, but all other information like template control or factory function,\n    data type or formatter function are copied by reference. The bindings themselves\n    are created anew as they are specific for the combination (object, property, model).\n    As a result, any later changes to a binding of the original object are not reflected\n    in the clone, but changes to e.g the type or template etc. are.<\/li>\n<\/ul>\n\nEach clone is created by first collecting the above mentioned settings and then creating\na new instance with the normal constructor function. As a result, any side effects of\nmutator methods (setProperty etc.) or init hooks are repeated during clone creation.\nThere is no need to override <code>clone()<\/code> just to reproduce these internal settings!\n\nCustom controls however can override <code>clone()<\/code> to implement additional clone steps.\nThey usually will first call <code>clone()<\/code> on the super class and then modify the\nreturned clone accordingly.\n\nApplications <b>must never provide<\/b> the second parameter <code>aLocaleIds<\/code>.\nIt is determined automatically for the root object (and its non-existance also serves as\nan indicator for the root object). Specifying it will break the implementation of <code>clone()<\/code>.","!type":"fn(sIdSuffix?: String, aLocalIds?: [String], oOptions?: Object) -> sap.ui.base.ManagedObject","!category":"function"},"attachFormatError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'formatError' event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired when a new value for a bound property should have been propagated from the model,\nbut formatting the value failed with an exception.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function"},"detachFormatError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'formatError' event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function"},"getBindingInfo":{"!description":"Returns the binding infos for the given property or aggregation. The binding info contains information about path, binding object, format options,\nsorter, filter etc. for the property or aggregation.","!type":"fn(sName: String) -> Object","!category":"function"},"getParent":{"!description":"Returns the parent managed object or <code>null<\/code> if this object hasn't been added to a parent yet.","!type":"fn() -> sap.ui.base.ManagedObject","!category":"function"},"attachValidationError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'validationError' event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired when a new value for a bound property should have been propagated to the model,\nbut validating the value failed with an exception.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function"},"fireValidationError":{"!description":"Fires event validationError to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.base.ManagedObject<\/code>ManagedObject instance whose property initiated the model update.<\/li>\n<li>'property' of type <code>string<\/code>Name of the property for which the bound model property should have been been updated.<\/li>\n<li>'type' of type <code>sap.ui.model.Type<\/code>Data type used in the binding.<\/li>\n<li>'newValue' of type <code>any<\/code>New value (external representation) as parsed and validated by the binding.<\/li>\n<li>'oldValue' of type <code>any<\/code>Old value (external representation) as previously stored in the ManagedObject.<\/li>\n<li>'message' of type <code>string<\/code>Localized message describing the validation issues<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.base.ManagedObject","!category":"function"},"validateAggregation":{"!description":"Checks whether the given value is of the proper type for the given aggregation name.\n\nThis method is already called by {@link #setAggregation}, {@link #addAggregation} and {@link #insertAggregation}.\nIn many cases, subclasses of ManagedObject don't need to call it again in their mutator methods.","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject | Object, bMultiple: Boolean) -> sap.ui.base.ManagedObject | Object","!category":"function"},"create":{"!description":"Creates a new ManagedObject from the given data.\n\nIf vData is a managed object already, that object is returned.\nIf vData is an object (literal), then a new object is created with vData as settings.\nThe type of the object is either determined by a \"Type\" entry in the vData or\nby a type information in the oKeyInfo object","!type":"fn(vData: sap.ui.base.ManagedObject | Object, oKeyInfo: Object)","!category":"function"},"removeAllAssociation":{"!description":"Removes all the objects in the 0..n-association named <code>sAssociationName<\/code> and returns an array\nwith their IDs. This ManagedObject is marked as changed, if the association contained any objects.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically remove all object from an association.\nUse the concrete method removeAll<i>XYZ<\/i> for association 'XYZ' instead.","!type":"fn(sAssociationName: String, bSuppressInvalidate?: Boolean) -> Array","!category":"function"},"unbindProperty":{"!description":"Unbind the property from the model","!type":"fn(sName: String, bSuppressReset: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"propagateMessages":{"!description":"Generic method which is called, whenever messages for this object exists.","!type":"fn(sName: String, aMessages: Array)","!category":"function"},"unbindContext":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.11.1 please use unbindElement instead.<br>Removes the defined binding context of this object, all bindings will now resolve\nrelative to the parent context again.","!type":"fn(sModelName?: String) -> sap.ui.base.ManagedObject","!category":"function"},"getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically retrieve the value of a property.\nUse the concrete method get<i>XYZ<\/i> for property 'XYZ' instead.","!type":"fn(sPropertyName: String) -> Object","!category":"function"},"toString":{"!description":"Returns a simple string representation of this managed object.\n\nMainly useful for tracing purposes.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function"},"detachValidationSuccess":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'validationSuccess' event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function"},"validateProperty":{"!description":"Checks whether the given value is of the proper type for the given property name.\n\nIn case <code>null<\/code> or <code>undefined<\/code> is passed, the default value for\nthis property is used as value. If no default value is defined for the property, the\ndefault value of the type of the property is used.\n\nIf the property has a data type that is an instance of sap.ui.base.DataType and if\na <code>normalize<\/code> function is defined for that type, that function will be\ncalled with the resulting value as only argument. The result of the function call is\nthen used instead of the raw value.\n\nThis method is called by {@link #setProperty}. In many cases, subclasses of\nManagedObject don't need to call it themselves.","!type":"fn(sPropertyName: String, oValue: Object) -> Object","!category":"function"},"!proto":"sap.ui.base.EventProvider","bindObject":{"!description":"Bind the object to the referenced entity in the model, which is used as the binding context\nto resolve bound properties or aggregations of the object itself and all of its children\nrelatively to the given path.\nIf a relative binding path is used, this will be applied whenever the parent context changes.","!type":"fn(vPath: String | Object, mParameters?: Object) -> sap.ui.base.ManagedObject","!category":"function"},"getBindingContext":{"!description":"Get the binding context of this object for the given model name.\n\nIf the object does not have a binding context set on itself and has no own Model set,\nit will use the first binding context defined in its parent hierarchy.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null<\/code>,\nthe empty string <code>\"\"<\/code> or the string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code> as model name.\n\nNote: A ManagedObject inherits binding contexts from the Core only when it is a descendant of an UIArea.","!type":"fn(sModelName?: String) -> Object","!category":"function"},"getAssociation":{"!description":"Returns the content of the association wit hthe given name.\n\nFor associations of cardinality 0..1, a single string with the ID of an associated\nobject is returned (if any). For cardinality 0..n, an array with the IDs of the\nassociated objects is returned.\n\nIf the association does not contain any objects(s), the given <code>oDefaultForCreation<\/code>\nis set as new value of the association and returned to the caller. The only supported values for\n<code>oDefaultForCreation<\/code> are <code>null<\/code> and <code>undefined<\/code> in the case of\ncardinality 0..1 and <code>null<\/code>, <code>undefined<\/code> or an empty array (<code>[]<\/code>)\nin case of cardinality 0..n. If the argument is omitted, <code>null<\/code> is used independently\nfrom the cardinality.\n\n<b>Note:<\/b> the need to specify a default value and the fact that it is stored as\nnew value of a so far empty association is recognized as a shortcoming of this API\nbut can no longer be changed for compatibility reasons.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically retrieve the content of an association.\nUse the concrete method get<i>XYZ<\/i> for association 'XYZ' instead.","!type":"fn(sAssociationName: String, oDefaultForCreation: Object) -> [String | String]","!category":"function"},"getModel":{"!description":"Get the model to be used for data bindings with the given model name.\nIf the object does not have a model set on itself, it will use the first\nmodel defined in its parent hierarchy.\n\nThe name can be omitted to reference the default model or it must be a non-empty string.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null<\/code>,\nthe empty string <code>\"\"<\/code> or the string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code> as model name.","!type":"fn(sName?: String | undefined) -> sap.ui.model.Model","!category":"function"},"isTreeBinding":{"!description":"This method is used internally and should only be overridden by a tree managed object which utilizes the tree binding.\n In this case and if the aggregation is a tree node the overridden method should then return true.\n If true is returned the tree binding will be used instead of the list binding.","!type":"fn(sName: String) -> Boolean","!category":"function"},"getEventingParent":{"!description":"Returns the parent managed object as new eventing parent to enable control event bubbling\nor <code>null<\/code> if this object hasn't been added to a parent yet.","!type":"fn() -> sap.ui.base.EventProvider","!category":"function"},"indexOfAggregation":{"!description":"Searches for the provided ManagedObject in the named aggregation and returns its\n0-based index if found, or -1 otherwise. Returns -2 if the given named aggregation\nis of cardinality 0..1 and doesn't reference the given object.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically determine the position of an object in an aggregation.\nUse the concrete method indexOf<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject) -> Number","!category":"function"},"isBound":{"!description":"Find out whether a property or aggregation is bound","!type":"fn(sName: String) -> Boolean","!category":"function"},"addAssociation":{"!description":"Adds some object with the ID <code>sId<\/code> to the association identified by <code>sAssociationName<\/code> and\nmarks this ManagedObject as changed.\n\nThis method does not avoid duplicates.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically add an object to an association.\nUse the concrete method add<i>XYZ<\/i> for association 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sAssociationName: String, sId: String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"destroy":{"!description":"Cleans up the resources associated with this object and all its aggregated children.\n\nAfter an object has been destroyed, it can no longer be used in!\n\nApplications should call this method if they don't need the object any longer.","!type":"fn(bSuppressInvalidate?: Boolean)","!category":"function"},"bindProperty":{"!description":"Bind a property to the model.\nThe Setter for the given property will be called with the value retrieved\nfrom the data model.\nThis is a generic method which can be used to bind any property to the\nmodel. A managed object may flag properties in the metamodel with\nbindable=\"bindable\" to get typed bind methods for a property.\nA composite property binding which may have multiple paths (also known as Calculated Fields) can be declared using the parts parameter.\nNote a composite binding is read only (One Way).","!type":"fn(sName: String, oBindingInfo: Object) -> sap.ui.base.ManagedObject","!category":"function"},"getBinding":{"!description":"Get the binding object for a specific aggregation/property","!type":"fn(sName: String) -> sap.ui.model.Binding","!category":"function"},"!category":"class","detachParseError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'parseError' event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function"},"isInvalidateSuppressed":{"!description":"Returns whether rerendering is currently suppressed on this ManagedObject","!type":"fn()","!category":"function"},"removeAllAggregation":{"!description":"Removes all objects from the 0..n-aggregation named <code>sAggregationName<\/code>.\n\nThe removed objects are not destroyed nor are they marked as changed.\n\nAdditionally, it clears the parent relationship of all removed objects, marks this\nManagedObject as changed and returns an array with the removed objects.\n\nIf the aggregation did not contain any objects, an empty array is returned and this\nManagedObject is not marked as changed.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically remove all objects from an aggregation.\nUse the concrete method removeAll<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, bSuppressInvalidate?: Boolean) -> Array","!category":"function"},"addAggregation":{"!description":"Adds some entity <code>oObject<\/code> to the aggregation identified by <code>sAggregationName<\/code>.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance\nof the type specified for that aggregation) or when the method is called for an aggregation\nof cardinality 0..1, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the aggregation already has content, the new object will be added after the current content.\nIf the new object was already contained in the aggregation, it will be moved to the end.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically add an object to an aggregation.\nUse the concrete method add<i>XYZ<\/i> for aggregation 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"removeAssociation":{"!description":"Removes a ManagedObject from the association named <code>sAssociationName<\/code>.\n\nIf an object is removed, the Id of that object is returned and this ManagedObject is\nmarked as changed. Otherwise <code>undefined<\/code> is returned.\n\nIf the same object was added multiple times to the same association, only a single\noccurence of it will be removed by this method. If the object is not found or if the\nparameter can't be interpreted neither as a ManagedObject (or id) nor as an index in\nthe assocation, nothing will be removed. The same is true if an index is given and if\nthat index is out of range for the association.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically remove an object from an association.\nUse the concrete method remove<i>XYZ<\/i> for association 'XYZ' instead.","!type":"fn(sAssociationName: String, vObject: Number | String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean)","!category":"function"},"unbindObject":{"!description":"Removes the defined binding context of this object, all bindings will now resolve\nrelative to the parent context again.","!type":"fn(sModelName?: String) -> sap.ui.base.ManagedObject","!category":"function"},"setProperty":{"!description":"Sets the given value for the given property after validating and normalizing it,\nmarks this object as changed.\n\nIf the value is not valid with regard to the declared data type of the property,\nan Error is thrown (see {@link #validateProperty}. If the validated and normalized\n<code>oValue<\/code> equals the current value of the property, the internal state of\nthis object is not changed. If the value changes, it is stored internally and\nthe {@link #invalidate} method is called on this object. In the case of TwoWay\ndatabinding, the bound model is informed about the property change.\n\nNote that ManagedObject only implements a single level of change tracking: if a first\ncall to setProperty recognizes a change, 'invalidate' is called. If another call to\nsetProperty reverts that change, invalidate() will be called again, the new status\nis not recognized as being 'clean' again.\n\n<b>Note:<\/b> This method is a low level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically set a property.\nUse the concrete method set<i>XYZ<\/i> for property 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sPropertyName: String, oValue: Object, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"detachValidationError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'validationError' event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function"},"fireFormatError":{"!description":"Fires event formatError to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.base.ManagedObject<\/code>ManagedObject instance whose property should have received the model update.<\/li>\n<li>'property' of type <code>string<\/code>Name of the property for which the binding should have been updated.<\/li>\n<li>'type' of type <code>sap.ui.model.Type<\/code>Data type used in the binding (if any).<\/li>\n<li>'newValue' of type <code>any<\/code>New value (model representation) as propagated from the model.<\/li>\n<li>'oldValue' of type <code>any<\/code>Old value (external representation) as previously stored in the ManagedObject.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.base.ManagedObject","!category":"function"},"invalidate":{"!description":"This triggers rerendering of itself and its children.<br/> As <code>sap.ui.base.ManagedObject<\/code> \"bubbles up\" the\ninvalidate, changes to child-<code>Elements<\/code> will also result in rerendering of the whole sub tree.","!type":"fn()","!category":"function"},"getObjectBinding":{"!description":"Get the object binding object for a specific model","!type":"fn(sModelName: String) -> sap.ui.model.Binding","!category":"function"},"getBindingPath":{"!description":"Get the binding path for a specific aggregation/property","!type":"fn(sName: String) -> String","!category":"function"},"fireParseError":{"!description":"Fires event parseError to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.base.ManagedObject<\/code>ManagedObject instance whose property initiated the model update.<\/li>\n<li>'property' of type <code>string<\/code>Name of the property for which the bound model property should have been been updated.<\/li>\n<li>'type' of type <code>sap.ui.model.Type<\/code>Data type used in the binding.<\/li>\n<li>'newValue' of type <code>any<\/code>New value (external representation) as parsed by the binding.<\/li>\n<li>'oldValue' of type <code>any<\/code>Old value (external representation) as previously stored in the ManagedObject.<\/li>\n<li>'message' of type <code>string<\/code>Localized message describing the parse error<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.base.ManagedObject","!category":"function"},"getOriginInfo":{"!description":"Returns the origin info for the value of the given property.\n\nThe origin info might contain additional information for translatable\ntexts. The bookkeeping of this information is not active by default and must be\nactivated by configuration. Even then, it might not be present for all properties\nand their values depending on where the value came form.","!type":"fn(sPropertyName: String) -> Object","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","fireValidationSuccess":{"!description":"Fires event validationSuccess to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.base.ManagedObject<\/code>ManagedObject instance whose property initiated the model update.<\/li>\n<li>'property' of type <code>string<\/code>Name of the property for which the bound model property has been updated.<\/li>\n<li>'type' of type <code>sap.ui.model.Type<\/code>Data type used in the binding.<\/li>\n<li>'newValue' of type <code>any<\/code>New value (external representation) as propagated to the model.\n\n<b>Note: <\/b>the model might modify (normalize) the value again and this modification\nwill be stored in the ManagedObject. The 'newValue' parameter of this event contains\nthe value <b>before<\/b> such a normalization.<\/li>\n<li>'oldValue' of type <code>any<\/code>Old value (external representation) as previously stored in the ManagedObject.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.base.ManagedObject","!category":"function"},"removeAggregation":{"!description":"Removes an object from the aggregation named <code>sAggregationName<\/code> with cardinality 0..n.\n\nThe removed object is not destroyed nor is it marked as changed.\n\nIf the given object is found in the aggreation, it is removed, it's parent relationship\nis unset and this ManagedObject is marked as changed. The removed object is returned as\nresult of this method. If the object could not be found, <code>undefined<\/code> is returned.\n\nThis method must only be called for aggregations of cardinality 0..n. The only way to remove objects\nfrom a 0..1 aggregation is to set a <code>null<\/code> value for them.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically remove an object from an aggregation.\nUse the concrete method remove<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, vObject: Number | String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function"},"getAggregation":{"!description":"Returns the aggregated object(s) for the named aggregation of this ManagedObject.\n\nIf the aggregation does not contain any objects(s), the given <code>oDefaultForCreation<\/code>\n(or <code>null<\/code>) is set as new value of the aggregation and returned to the caller.\n\n<b>Note:<\/b> the need to specify a default value and the fact that it is stored as\nnew value of a so far empty aggregation is recognized as a shortcoming of this API\nbut can no longer be changed for compatibility reasons.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>.\nApplications or frameworks must not use this method to generically read the content of an aggregation.\nUse the concrete method get<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, oDefaultForCreation: sap.ui.base.ManagedObject | Array) -> sap.ui.base.ManagedObject | Array","!category":"function"},"attachParseError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'parseError' event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired when a new value for a bound property should have been propagated to the model,\nbut parsing the value failed with an exception.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function"},"bindContext":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.11.1 please use bindElement instead.<br>Bind the object to the referenced entity in the model, which is used as the binding context\nto resolve bound properties or aggregations of the object itself and all of its children\nrelatively to the given path.","!type":"fn(sPath: String) -> sap.ui.base.ManagedObject","!category":"function"},"applySettings":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(mSettings: Object, oScope?: Object) -> sap.ui.base.ManagedObject","!category":"function"},"getMetadata":{"!description":"Returns the metadata for the ManagedObject class.","!type":"fn() -> sap.ui.base.ManagedObjectMetadata","!category":"function"}},"sap.ui.core.util.serializer.HTMLViewSerializer":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.HTMLViewSerializer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.core.mvc.View.Preprocessor":{"!description":"Interface for Preprocessor implementations that can be hooked in the view life cycle.\n\nThere are two possibilities to use the preprocessor. It can be either passed to the view via the mSettings.preprocessors object\nwhere it is the executed only for this instance, or by the registerPreprocessor method of the view type. Currently this is\navailable only for XMLViews (as of version 1.30).","!category":"static class"},"sap.ui.core.util.XMLPreprocessor":{"IContext":"sap.ui.core.util.XMLPreprocessor.IContext","!description":"The XML pre-processor for template instructions in XML views.","!category":"namespace"},"jQuery.device.is":{"phone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use sap.ui.Device.system.phone instead<br>Whether the running device is a phone.\nIf a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile), \nthis property will also be set according to the simulated platform.\nThis property will be false when runs in desktop browser.","!type":"Boolean","!category":"enum"},"android_tablet":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use sap.ui.Device.system.tablet &amp;&amp; sap.ui.Device.os.android  instead<br>Whether the application runs on an Android tablet - based not on screen size but user-agent (so this is not guaranteed to be equal to jQuery.device.is.tablet on Android)\nhttps://developers.google.com/chrome/mobile/docs/user-agent\nSome device vendors however do not follow this rule","!type":"Boolean","!category":"enum"},"tablet":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use sap.ui.Device.system.tablet instead<br>Whether the running device is a tablet.\nIf a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile), \nthis property will also be set according to the simulated platform.\nThis property will be false when runs in desktop browser.","!type":"Boolean","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use the respective functions of sap.ui.Device<br>Holds information about the current device and its state","ipad":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 shouldn't do device specific coding; if still needed, use sap.ui.Device.os.ios &amp;&amp; sap.ui.Device.system.tablet<br>Whether the application runs on an iPad","!type":"Boolean","!category":"enum"},"!category":"namespace","desktop":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use sap.ui.Device.system.desktop instead<br>Whether the running device is a desktop browser.\nIf a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile), \nthis property will be false.","!type":"Boolean","!category":"enum"},"standalone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use window.navigator.standalone<br>Whether the application runs in standalone mode without browser UI (launched from the iOS home screen)","!type":"Boolean","!category":"enum"},"landscape":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.orientation.landscape<br>Whether the device is in \"landscape\" orientation (also \"true\" when the device does not know about the orientation)","!type":"Boolean","!category":"enum"},"iphone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 shouldn't do device specific coding; if still needed, use sap.ui.Device.os.ios &amp;&amp; sap.ui.Device.system.phone<br>Whether the application runs on an iPhone","!type":"Boolean","!category":"enum"},"portrait":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use sap.ui.Device.orientation.portrait<br>Whether the device is in portrait orientation","!type":"Boolean","!category":"enum"},"android_phone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use sap.ui.Device.system.phone &amp;&amp; sap.ui.Device.os.android  instead<br>Whether the application runs on an Android phone - based not on screen size but user-agent (so this is not guaranteed to be equal to jQuery.device.is.phone on Android)\nhttps://developers.google.com/chrome/mobile/docs/user-agent\nSome device vendors however do not follow this rule","!type":"Boolean","!category":"enum"}},"sap.ui.core.util.ExportColumn":{"getTemplate":{"!description":"Gets content of aggregation <code>template<\/code>.\n\nCell template for column.","!type":"fn() -> sap.ui.core.util.ExportCell","!category":"function"},"destroyTemplate":{"!description":"Destroys the template in the aggregation\nnamed <code>template<\/code>.","!type":"fn() -> sap.ui.core.util.ExportColumn","!category":"function"},"!description":"Can have a name and a cell template.","getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nColumn name.","!type":"fn() -> String","!category":"function"},"!category":"class","setTemplate":{"!description":"Sets the aggregated <code>template<\/code>.","!type":"fn(oTemplate: sap.ui.core.util.ExportCell) -> sap.ui.core.util.ExportColumn","!category":"function"},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nColumn name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.core.util.ExportColumn","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportColumn.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.ManagedObject"},"sap.ui.model.xml.XMLModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.xml.XMLModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oData: Object)","prototype":"sap.ui.model.xml.XMLModel"},"sap.ui.core.support":{"Support":"sap.ui.core.support.Support","!category":"namespace"},"sap.ui.test.OpaPlugin_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.OpaPlugin with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.test.OpaPlugin"},"sap.ui.test.PageObjectFactory_obj":{"!type":"fn()","prototype":"sap.ui.test.PageObjectFactory"},"sap.ui.model.type.Time":{"!description":"This class represents time simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Time.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.type.Date"},"sap.ui.model.CompositeType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.CompositeType with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.CompositeType"},"sap.ui.model.odata.v2.ODataContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataContextBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: Object, mParameters?: Object)","prototype":"sap.ui.model.odata.v2.ODataContextBinding"},"sap.ui.model.odata.ODataMetaModel":{"getODataValueLists":{"!description":"Returns a <code>Promise<\/code> which is resolved with a map representing the\n<code>com.sap.vocabularies.Common.v1.ValueList<\/code> annotations of the given property or\nrejected with an error.\nThe key in the map provided on successful resolution is the qualifier of the annotation or\nthe empty string if no qualifier is defined. The value in the map is the JSON object for\nthe annotation. The map is empty if the property has no\n<code>com.sap.vocabularies.Common.v1.ValueList<\/code> annotations.","!type":"fn(oPropertyContext: sap.ui.model.Context) -> Promise","!category":"function"},"getODataComplexType":{"!description":"Returns the OData complex type with the given qualified name, either as a path or as an\nobject, as indicated.","!type":"fn(sQualifiedName: String, bAsPath?: Boolean) -> Object | String","!category":"function"},"getODataEntitySet":{"!description":"Returns the OData entity set with the given simple name from the default entity container.","!type":"fn(sName: String, bAsPath?: Boolean) -> Object | String","!category":"function"},"getODataEntityContainer":{"!description":"Returns the OData default entity container.","!type":"fn(bAsPath?: Boolean) -> Object | String","!category":"function"},"setLegacySyntax":{"!description":"Legacy syntax not supported by OData meta model!","!type":"fn(bLegacySyntax: Boolean)","!category":"function"},"getODataAssociationEnd":{"!description":"Returns the OData association end corresponding to the given entity type's navigation\nproperty of given name.","!type":"fn(oEntityType: Object, sName: String) -> Object","!category":"function"},"loaded":{"!description":"Returns a promise which is fulfilled once the meta model data is loaded and can be used.","!type":"fn() -> Promise","!category":"function"},"getMetaContext":{"!description":"Returns the OData meta model context corresponding to the given OData model path.","!type":"fn(sPath?: String) -> sap.ui.model.Context","!category":"function"},"getODataFunctionImport":{"!description":"Returns the OData function import with the given simple or qualified name from the default\nentity container or the respective entity container specified in the qualified name.","!type":"fn(sName: String, bAsPath?: Boolean) -> Object | String","!category":"function"},"getODataEntityType":{"!description":"Returns the OData entity type with the given qualified name, either as a path or as an\nobject, as indicated.","!type":"fn(sQualifiedName: String, bAsPath?: Boolean) -> Object | String","!category":"function"},"!description":"Implementation of an OData meta model which offers a unified access to both OData v2\nmeta data and v4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata}\nas a foundation and merges v4 annotations from the existing\n{@link sap.ui.model.odata.ODataAnnotations} directly into the corresponding model element.\n\nAlso, annotations from the \"http://www.sap.com/Protocols/SAPData\" namespace are lifted up\nfrom the <code>extensions<\/code> array and transformed from objects into simple properties\nwith an \"sap:\" prefix for their name. Note that this happens in addition, thus the\nfollowing example shows both representations. This way, such annotations can be addressed\nvia a simple relative path instead of searching an array.\n<pre>\n\t\t{\n\t\t\t\"name\" : \"BusinessPartnerID\",\n\t\t\t\"extensions\" : [{\n\t\t\t\t\"name\" : \"label\",\n\t\t\t\t\"value\" : \"Bus. Part. ID\",\n\t\t\t\t\"namespace\" : \"http://www.sap.com/Protocols/SAPData\"\n\t\t\t}],\n\t\t\t\"sap:label\" : \"Bus. Part. ID\"\n\t\t}\n<\/pre>\n\nAs of 1.29.0, the corresponding vocabulary-based annotations for the following\n\"<a href=\"http://www.sap.com/Protocols/SAPData\">SAP Annotations for OData Version 2.0<\/a>\"\nare added, if they are not yet defined in the v4 annotations:\n<ul>\n<li><code>label<\/code>;<\/li>\n<li><code>creatable<\/code>, <code>deletable<\/code>, <code>deletable-path<\/code>,\n<code>pageable<\/code>, <code>requires-filter<\/code>, <code>searchable<\/code>,\n<code>topable<\/code>, <code>updatable<\/code> and <code>updatable-path<\/code> on entity sets;\n<\/li>\n<li><code>creatable<\/code>, <code>display-format<\/code> (\"UpperCase\" and \"NonNegative\"),\n<code>field-control<\/code>, <code>filterable<\/code>, <code>filter-restriction<\/code>,\n<code>heading<\/code>, <code>precision<\/code>, <code>quickinfo<\/code>,\n<code>required-in-filter<\/code>, <code>sortable<\/code>, <code>text<\/code>, <code>unit<\/code>,\n<code>updatable<\/code> and <code>visible<\/code> on properties;<\/li>\n<li><code>semantics<\/code>; the following values are supported:\n<ul>\n<li>\"bday\", \"city\", \"country\", \"email\" (including support for types, for example\n\"email;type=home,pref\"), \"familyname\", \"givenname\", \"honorific\", \"middlename\", \"name\",\n\"nickname\", \"note\", \"org\", \"org-unit\", \"org-role\", \"photo\", \"pobox\", \"region\", \"street\",\n\"suffix\", \"tel\" (including support for types, for example \"tel;type=cell,pref\"), \"title\" and\n\"zip\" (mapped to v4 annotation <code>com.sap.vocabularies.Communication.v1.Contact<\/code>);\n<\/li>\n<li>\"class\", \"dtend\", \"dtstart\", \"duration\", \"fbtype\", \"location\", \"status\", \"transp\" and\n\"wholeday\" (mapped to v4 annotation\n<code>com.sap.vocabularies.Communication.v1.Event<\/code>);<\/li>\n<li>\"body\", \"from\", \"received\", \"sender\" and \"subject\" (mapped to v4 annotation\n<code>com.sap.vocabularies.Communication.v1.Message<\/code>);<\/li>\n<li>\"completed\", \"due\", \"percent-complete\" and \"priority\" (mapped to v4 annotation\n<code>com.sap.vocabularies.Communication.v1.Task<\/code>).<\/li>\n<\/ul>\n<\/ul>\nFor example:\n<pre>\n\t\t{\n\t\t\t\"name\" : \"BusinessPartnerID\",\n\t\t\t...\n\t\t\t\"sap:label\" : \"Bus. Part. ID\",\n\t\t\t\"com.sap.vocabularies.Common.v1.Label\" : {\n\t\t\t\t\"String\" : \"Bus. Part. ID\"\n\t\t\t}\n\t\t}\n<\/pre>\n\nThis model is read-only and thus only supports\n{@link sap.ui.model.BindingMode.OneTime OneTime} binding mode. No events\n({@link sap.ui.model.Model#event:parseError parseError},\n{@link sap.ui.model.Model#event:requestCompleted requestCompleted},\n{@link sap.ui.model.Model#event:requestFailed requestFailed},\n{@link sap.ui.model.Model#event:requestSent requestSent}) are fired!\n\nWithin the meta model, the objects are arranged in arrays.\n<code>/dataServices/schema<\/code>, for example, is an array of schemas where each schema has\nan <code>entityType<\/code> property with an array of entity types, and so on. So,\n<code>/dataServices/schema/0/entityType/16<\/code> can be the path to the entity type with\nname \"Order\" in the schema with namespace \"MySchema\". However, these paths are not stable:\nIf an entity type with lower index is removed from the schema, the path to\n<code>Order<\/code> changes to <code>/dataServices/schema/0/entityType/15<\/code>.\n\nTo avoid problems with changing indexes, {@link sap.ui.model.Model#getObject getObject} and\n{@link sap.ui.model.Model#getProperty getProperty} support XPath-like queries for the\nindexes (since 1.29.1). Each index can be replaced by a query in square brackets. You can,\nfor example, address the schema using the path\n<code>/dataServices/schema/[${namespace}==='MySchema']<\/code> or the entity using\n<code>/dataServices/schema/[${namespace}==='MySchema']/entityType/[sap.ui.core==='Order']<\/code>.\n\nThe syntax inside the square brackets is the same as in expression binding. The query is\nexecuted for each object in the array until the result is true (truthy) for the first time.\nThis object is then chosen.\n\n<b>BEWARE:<\/b> Access to this OData meta model will fail before the promise returned by\n{@link #loaded loaded} has been resolved!","getODataProperty":{"!description":"Returns the given OData type's property (not navigation property!) of given name.\n\nIf an array is given instead of a single name, it is consumed (via\n<code>Array.prototype.shift<\/code>) piece by piece. Each element is interpreted as a\nproperty name of the current type, and the current type is replaced by that property's type.\nThis is repeated until an element is encountered which cannot be resolved as a property name\nof the current type anymore; in this case, the last property found is returned and\n<code>vName<\/code> contains only the remaining names, with <code>vName[0]<\/code> being the\none which was not found.\n\nExamples:\n<ul>\n<li> Get address property of business partner:\n<pre>\nvar oEntityType = oMetaModel.getODataEntityType(\"GWSAMPLE_BASIC.BusinessPartner\"),\n    oAddressProperty = oMetaModel.getODataProperty(oEntityType, \"Address\");\noAddressProperty.name === \"Address\";\noAddressProperty.type === \"GWSAMPLE_BASIC.CT_Address\";\n<\/pre>\n<\/li>\n<li> Get street property of address type:\n<pre>\nvar oComplexType = oMetaModel.getODataComplexType(\"GWSAMPLE_BASIC.CT_Address\"),\n    oStreetProperty = oMetaModel.getODataProperty(oComplexType, \"Street\");\noStreetProperty.name === \"Street\";\noStreetProperty.type === \"Edm.String\";\n<\/pre>\n<\/li>\n<li> Get address' street property directly from business partner:\n<pre>\nvar aParts = [\"Address\", \"Street\"];\noMetaModel.getODataProperty(oEntityType, aParts) === oStreetProperty;\naParts.length === 0;\n<\/pre>\n<\/li>\n<li> Trying to get address' foo property directly from business partner:\n<pre>\naParts = [\"Address\", \"foo\"];\noMetaModel.getODataProperty(oEntityType, aParts) === oAddressProperty;\naParts.length === 1;\naParts[0] === \"foo\";\n<\/pre>\n<\/li>\n<\/ul>","!type":"fn(oType: Object, vName: [String | String], bAsPath?: Boolean) -> Object | String","!category":"function"},"!category":"class","refresh":{"!description":"Refresh not supported by OData meta model!","!type":"fn()","!category":"function"},"!proto":"sap.ui.model.MetaModel","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataMetaModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getODataAssociationSetEnd":{"!description":"Returns the OData association <em>set<\/em> end corresponding to the given entity type's\nnavigation property of given name.","!type":"fn(oEntityType: Object, sName: String) -> Object","!category":"function"}},"sap.ui.core.message.MessageManager":{"removeMessages":{"!description":"Remove given Messages","!type":"fn(vMessages: Array)","!category":"function"},"destroy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>destroy MessageManager","!type":"fn()","!category":"function"},"removeAllMessages":{"!description":"Remove all messages","!type":"fn()","!category":"function"},"registerObject":{"!description":"Register ManagedObject: Validation and Parse errors are handled by the MessageManager for this object","!type":"fn(oObject: sap.ui.base.ManageObject, bHandleValidation: Boolean)","!category":"function"},"getMessageModel":{"!description":"Get the MessageModel","!type":"fn() -> sap.ui.core.message.MessageModel","!category":"function"},"!category":"class","unregisterObject":{"!description":"Unregister ManagedObject","!type":"fn(oObject: sap.ui.base.ManageObject)","!category":"function"},"unregisterMessageProcessor":{"!description":"Deregister MessageProcessor","!type":"fn(oProcessor: sap.ui.core.message.MessageProcessor)","!category":"function"},"addMessages":{"!description":"Add messages to MessageManager","!type":"fn(vMessages: sap.ui.core.Message | Array)","!category":"function"},"registerMessageProcessor":{"!description":"Register MessageProcessor","!type":"fn(oProcessor: sap.ui.core.message.MessageProcessor)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.MessageManager.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.base.Metadata_obj":{"!type":"fn(sClassName: String, oClassInfo: Object)","prototype":"sap.ui.base.Metadata"},"sap.ui.model.odata.type.DateTimeOffset":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.DateTimeOffset<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>Date<\/code> in local time.","getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.DateTimeOffset.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.DateTimeBase"},"sap.ui.model.odata.type.Boolean_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Boolean with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Boolean"},"sap.ui.test.matchers.AggregationFilled":{"!description":"AggregationFilled - checks if an aggregation contains at least one entry","getName":{"!description":"Getter for property <code>name<\/code>.\n\nThe name of the aggregation that is used for matching","!type":"fn() -> String","!category":"function"},"!category":"class","setName":{"!description":"Setter for property <code>name<\/code>.","!type":"fn(sName: String) -> sap.ui.test.matchers.AggregationFilled","!category":"function"},"isMatching":{"!description":"Checks if the control has a filled aggregation","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function"},"!proto":"sap.ui.test.matchers.Matcher"},"sap.ui.model.TreeBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.TreeBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext?: Object, aFilters?: Array, mParameters?: Object)","prototype":"sap.ui.model.TreeBinding"},"sap.ui.core.ws.ReadyState":{"OPEN":{"!description":"The WebSocket connection is established and communication is possible.","!type":"String","!category":"enum"},"CONNECTING":{"!description":"The connection has not yet been established.","!type":"String","!category":"enum"},"CLOSED":{"!description":"The connection has been closed or could not be opened.","!type":"String","!category":"enum"},"!description":"Defines the different ready states for a WebSocket connection.","!category":"namespace","CLOSING":{"!description":"The connection is going through the closing handshake.","!type":"String","!category":"enum"}},"sap.ui.model.odata.type.Guid":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Guid<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>string<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ngiven constraints.","!type":"fn(sValue: String)","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(sValue: String, sTargetType: String) -> String","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value to a GUID.","!type":"fn(sValue: String, sSourceType: String) -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Guid.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.base":{"Interface":"sap.ui.base.Interface_obj","Poolable":"sap.ui.base.Poolable","ManagedObject":"sap.ui.base.ManagedObject_obj","!description":"SAPUI5 base classes","ObjectPool":"sap.ui.base.ObjectPool_obj","EventProvider":"sap.ui.base.EventProvider_obj","Event":"sap.ui.base.Event_obj","!category":"namespace","Metadata":"sap.ui.base.Metadata_obj","Object":"sap.ui.base.Object_obj"},"sap.ui.core.util.XMLPreprocessor.IContext":{"!description":"Context interface provided by XML template processing as an additional first\nargument to any formatter function which opts in to this mechanism. Candidates for\nsuch formatter functions are all those used in binding expressions which are\nevaluated during XML template processing, including those used inside template\ninstructions like <code>&lt;template:if><\/code>. The formatter function needs to be\nmarked with a property <code>requiresIContext = true<\/code> to express that it\nrequires this extended signature (compared to ordinary formatter functions). The\nusual arguments are provided after the first one (currently: the raw value from the\nmodel).\n\nThis interface provides callback functions to access the model and path  which are\nneeded to process OData v4 annotations. It initially offers a subset of methods\nfrom {@link sap.ui.model.Context} so that formatters might also be called with a\ncontext object for convenience, e.g. outside of XML template processing (see below\nfor an exception to this rule).\n\n<b>Example:<\/b> Suppose you have a formatter function called \"foo\" like below\nand it is used within an XML template like\n<code>&lt;template:if test=\"{path: '...', formatter: 'foo'}\"><\/code>.\nIn this case <code>foo<\/code> is called with arguments\n<code>oInterface, vRawValue<\/code> such that\n<code>oInterface.getModel().getObject(oInterface.getPath()) === vRawValue<\/code>\nholds.\n<pre>\nwindow.foo = function (oInterface, vRawValue) {\n    //TODO ...\n};\nwindow.foo.requiresIContext = true;\n<\/pre>\n\n<b>Composite Binding Examples:<\/b> Suppose you have the same formatter function and\nit is used in a composite binding like <code>&lt;Text text=\"{path: 'Label',\nformatter: 'foo'}: {path: 'Value', formatter: 'foo'}\"/><\/code>.\nIn this case <code>oInterface.getPath()<\/code> refers to \".../Label\" in the 1st call\nand \".../Value\" in the 2nd call. This means each formatter call knows which part of\nthe composite binding it belongs to and behaves just as if it was an ordinary\nbinding.\n\nSuppose your formatter is not used within a part of the composite binding, but at\nthe root of the composite binding in order to aggregate all parts like <code>\n&lt;Text text=\"{parts: [{path: 'Label'}, {path: 'Value'}], formatter: 'foo'}\"/>\n<\/code>. In this case <code>oInterface.getPath(0)<\/code> refers to \".../Label\" and\n<code>oInterface.getPath(1)<\/code> refers to \".../Value\". This means, the root\nformatter can access the ith part of the composite binding at will (since 1.31.0);\nsee also {@link #.getInterface getInterface}.\nThe function <code>foo<\/code> is called with arguments such that <code>\noInterface.getModel(i).getObject(oInterface.getPath(i)) === arguments[i + 1]<\/code>\nholds.\n\nTo distinguish those two use cases, just check whether\n<code>oInterface.getModel() === undefined<\/code>, in which case the formatter is\ncalled on root level of a composite binding. To find out the number of parts, probe\nfor the smallest non-negative integer where\n<code>oInterface.getModel(i) === undefined<\/code>.\nThis additional functionality is, of course, not available from\n{@link sap.ui.model.Context}, i.e. such formatters MUST be called with an instance\nof this context interface.","!category":"static class"},"sap.ui.model.odata.type.ODataType":{"!description":"This class is an abstract base class for all OData primitive types (see <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\nEdm Types<\/a>). All sub-types implement the interface of\n{@link sap.ui.model.SimpleType}. That means they implement next to the constructor:\n<ul>\n<li>{@link sap.ui.model.SimpleType#getName getName}<\/li>\n<li>{@link sap.ui.model.SimpleType#formatValue formatValue}<\/li>\n<li>{@link sap.ui.model.SimpleType#parseValue parseValue}<\/li>\n<li>{@link sap.ui.model.SimpleType#validateValue validateValue}<\/li>\n<\/ul>\n\nAll ODataTypes are immutable. All format options and constraints are given to the\nconstructor, they cannot be modified later.\n\nAll ODataTypes use a locale-specific message when throwing an error caused by invalid\nuser input (e.g. if {@link sap.ui.model.odata.type.Double#parseValue Double.parseValue}\ncannot parse the given value to a number, or if any type's {@link #validateValue\nvalidateValue} gets a <code>null<\/code>, but the constraint <code>nullable<\/code> is\n<code>false<\/code>).","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.ODataType.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.SimpleType"},"sap.ui.model.analytics.odata4analytics.DimensionAttribute":{"getTextProperty":{"!description":"Get text property related to this dimension attribute","!type":"fn() -> Object","!category":"function"},"!description":"Representation of a dimension attribute.","getName":{"!description":"Get the name of the dimension attribute","!type":"fn() -> String","!category":"function"},"!category":"class","getLabelText":{"!description":"Get label","!type":"fn() -> String","!category":"function"},"getDimension":{"!description":"Get dimension","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Dimension","!category":"function"},"getKeyProperty":{"!description":"Get the key property","!type":"fn() -> Object","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.ComponentMetadata_obj":{"!type":"fn(sClassName: String, oStaticInfo: Object)","prototype":"sap.ui.core.ComponentMetadata"},"sap.ui.base.Event_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.base.Event with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, oSource: sap.ui.base.EventProvider, mParameters: Object)","prototype":"sap.ui.base.Event"},"sap.ui.model.TreeBinding":{"detachFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event.<br>Detach event-handler <code>fnFunction<\/code> from the '_filter' event of this <code>sap.ui.model.TreeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"attachFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event. It now contains a parameter (reason : \"filter\") when a filter event is fired.<br>Attach event-handler <code>fnFunction<\/code> to the '_filter' event of this <code>sap.ui.model.TreeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"hasChildren":{"!description":"Returns if the node has child nodes","!type":"fn(oContext: Object) -> Boolean","!category":"function"},"sort":{"!description":"Sorts the tree according to the sorter definitions.","!type":"function sort() { [native code for Array.sort, arity=1] }\n, aSorters: [sap.ui.model.Sorter])","!category":"function"},"getChildCount":{"!description":"Returns the number of child nodes of a specific context","!type":"fn(oContext: Object) -> integer","!category":"function"},"!description":"The TreeBinding is a specific binding for trees in the model, which can be used\nto populate Trees.","getRootContexts":{"!description":"Returns the current value of the bound target","!type":"fn(iStartIndex: integer, iLength: integer) -> Array","!category":"function"},"getNodeContexts":{"!description":"Returns the current value of the bound target","!type":"fn(oContext: Object, iStartIndex: integer, iLength: integer) -> Array","!category":"function"},"!category":"class","filter":{"!description":"Filters the tree according to the filter definitions.","!type":"function filter() { [native code for Array.filter, arity=1] }\n, aFilters: [sap.ui.model.Filter], sFilterType: sap.ui.model.FilterType)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.TreeBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.theming":{"Parameters":"sap.ui.core.theming.Parameters","!category":"namespace"},"sap.ui.model.Sorter":{"!description":"Sorter for the list binding\nThis object defines the sort order for the list binding.","!category":"class","getGroup":{"!description":"Returns a group object, at least containing a key property for group detection.\nMay contain additional properties as provided by a custom group function.","!type":"fn(oContext: sap.ui.model.Context) -> Object","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Sorter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.Core_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Core with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.Core"},"sap.ui.model.type.Float_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Float with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Float"},"sap.ui.model.DataState":{"getOriginalValue":{"!description":"Returns the formatted original value of the data. \nThe original value is the last confirmed value.","!type":"fn() -> Object","!category":"function"},"getValue":{"!description":"Returns the formatted value of the data state.","!type":"fn() -> Object","!category":"function"},"isDirty":{"!description":"Returns whether the data state is dirty.\nA data state is dirty if the value was changed \nbut is not yet confirmed by a server or the entered value did not yet pass the type validation.","!type":"fn() -> Boolean","!category":"function"},"getInvalidValue":{"!description":"Returns the dirty value of a binding that was rejected by a type validation.\nThis value was of an incorrect type and could not be applied to the model. If the\nvalue was not rejected it will return null. In this case the current\nmodel value can be accessed using the <code>getValue<\/code> method.","!type":"fn() -> Object","!category":"function"},"getControlMessages":{"!description":"Returns the array of state messages of the control or undefined.","!type":"fn() -> [sap.ui.core.Message]","!category":"function"},"setValue":{"!description":"Sets the formatted value of the data state,","!type":"fn(vValue: Object) -> sap.ui.model.DataState","!category":"function"},"setOriginalValue":{"!description":"Sets the formatted original value of the data.","!type":"fn(vOriginalValue: Boolean) -> sap.ui.model.DataState","!category":"function"},"getChanges":{"!description":"Returns the changes of the data state in a map that the control can use in the \n<code>refreshDataState<\/code> method.\nThe changed property's name is the key in the map. Each element in the map contains an object of below structure.\n<pre>\n   { \n       oldValue : The old value of the property,\n       value    : The new value of the property\n   }\n<\/pre>\nThe map only contains the changed properties.","!type":"fn() -> map","!category":"function"},"getMessages":{"!description":"Returns the array of all state messages or null.\nThis combines the model and control messages.","!type":"fn() -> [sap.ui.core.Message]","!category":"function"},"changed":{"!description":"Returns or sets whether the data state is changed.\nAs long as changed was not set to false the data state is dirty \nand the corresponding binding will fire data state change events.","!type":"fn(bNewState?: Boolean) -> Boolean","!category":"function"},"isLaundering":{"!description":"Returns whether the data state is in laundering.\nIf data is send to the server the data state becomes laundering until the \ndata was accepted or rejected.","!type":"fn() -> Boolean","!category":"function"},"!description":"Provides and update the status data of a binding. \nDepending on the models state and controls state changes, the data state is used to propagated changes to a control.\nThe control can react on these changes by implementing the <code>refreshDataState<\/code> method for the control. \nHere the the data state object is passed as a parameter.\n\nUsing the {@link #getChanges getChanges} method the control can determine the changed properties and their old and new value.\n<pre>\n    //sample implementation to handle message changes\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var aMessages = oDataState.getChanges().messages;\n       if (aMessages) {\n           for (var i=0;i<aMessages.length;i++) {\n               console.log(aMessages.message);\n           }\n       }\n       \n    }\n    \n    //sample implementation to handle laundering state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var bLaundering = oDataState.getChanges().laundering || false;\n       this.setBusy(bLaundering);\n    }\n    \n    //sample implementation to handle dirty state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       if (oDataState.isDirty()) console.log(\"Control \" + this.getId() + \" is now dirty\");\n    }\n<\/pre>\n\nUsing the {@link #getProperty getProperty} method the control can read the properties of the data state. The properties are\n<ul>\n    <li><code>value<\/code> The value formatted by the formatter of the binding\n    <li><code>originalValue<\/code> The original value of the model formatted by the formatter of the binding\n    <li><code>invalidValue<\/code> The control value that was tried to be applied to the model but was rejected by a type validation\n    <li><code>modelMessages<\/code> The messages that were applied to the binding by the <code>sap.ui.model.MessageModel<\/code>\n    <li><code>controlMessages<\/code> The messages that were applied due to type validation errors\n    <li><code>messages<\/code> All messages of the data state\n     <li><code>dirty<\/code> true if the value was not yet confirmed by the server\n<\/ul>","setInternalValue":{"!description":"Sets the internal value.","!type":"fn(vInternalValue: Object) -> sap.ui.model.DataState","!category":"function"},"setOriginalInternalValue":{"!description":"Returns the original internal value of the data state. \nThe original internal value is the last confirmed data.","!type":"fn(vOriginalInternalValue: Boolean) -> sap.ui.model.DataState","!category":"function"},"isControlDirty":{"!description":"Returns whether the data state is dirty in the UI control. \nA data state is dirty in the UI control if the entered value did not yet pass the type validation.","!type":"fn() -> Boolean","!category":"function"},"setControlMessages":{"!description":"Sets an array of control state messages.","!type":"fn(the: [sap.ui.core.Message]) -> sap.ui.model.DataState","!category":"function"},"!category":"class","setInvalidValue":{"!description":"Sets the dirty value that was rejected by the type validation.","!type":"fn(vInvalidValue: Object) -> sap.ui.model.DataState","!category":"function"},"getModelMessages":{"!description":"Returns the array of state messages of the model or undefined","!type":"fn() -> [sap.ui.core.Message]","!category":"function"},"setLaundering":{"!description":"Sets the laundering state of the data state.","!type":"fn(bLaundering: Boolean) -> sap.ui.model.DataState","!category":"function"},"setModelMessages":{"!description":"Sets an array of model state messages.","!type":"fn(the: Array) -> sap.ui.model.DataState","!category":"function"},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.DataState.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.type.FileSize":{"!description":"This class represents file size simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.FileSize.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.SimpleType"},"sap.ui.model.analytics.v2":{"!category":"namespace","BatchResponseCollector":"sap.ui.model.analytics.v2.BatchResponseCollector_obj"},"sap.ui.model.BindingMode":{"Default":{"!description":"BindingMode default means that the binding mode of the model is used","!type":"String","!category":"enum"},"!description":"Binding type definitions.","OneTime":{"!description":"BindingMode one time means value is only read from the model once","!type":"String","!category":"enum"},"!category":"namespace","OneWay":{"!description":"BindingMode one way means from model to view","!type":"String","!category":"enum"},"TwoWay":{"!description":"BindingMode two way means from model to view and vice versa","!type":"String","!category":"enum"}},"jQuery.sap.util.UriParameters":{"!description":"Encapsulates all URI parameters of the current windows location (URL).\n\nUse {@link jQuery.sap.getUriParameters} to create an instance of jQuery.sap.util.UriParameters.","!category":"static class"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround":{"!description":"Representation of an OData model with analytical annotations defined\n       by OData4SAP.","!category":"class","!proto":"sap.ui.base.Object"},"jQuery.sap.Version":{"!description":"Represents a version consisting of major, minor, patch version and suffix, e.g. '1.2.7-SNAPSHOT'.","getPatch":{"!description":"Returns the patch (or micro) version part of this version.","!type":"fn() -> Number","!category":"function"},"getSuffix":{"!description":"Returns the version suffix of this version.","!type":"fn() -> String","!category":"function"},"!category":"class","toString":{"!description":"Returns a string representation of this version.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function"},"inRange":{"!description":"Checks whether this version is in the range of the given versions (start included, end excluded).\n\nThe boundaries against which this version should be checked can be given as\n<code>jQuery.sap.Version<\/code> instances (e.g. <code>v.inRange(v1, v2)<\/code>), as strings (e.g. <code>v.inRange(\"1.4\", \"2.7\")<\/code>)\nor as arrays (e.g. <code>v.inRange([1,4], [2,7])<\/code>).","!type":"fn(vMin: [String | Object], vMax: [String | Object]) -> Boolean","!category":"function"},"getMajor":{"!description":"Returns the major version part of this version.","!type":"fn() -> Number","!category":"function"},"compareTo":{"!description":"Compares this version with a given one.\n\nThe version with which this version should be compared can be given as\n<code>jQuery.sap.Version<\/code> instance, as a string (e.g. <code>v.compareto(\"1.4.5\")<\/code>)\nor major, minor, patch and suffix cab be given as separate parameters (e.g. <code>v.compareTo(1, 4, 5)<\/code>)\nor in an array (e.g. <code>v.compareTo([1, 4, 5])<\/code>).","!type":"fn() -> Number","!category":"function"},"getMinor":{"!description":"Returns the minor version part of this version.","!type":"fn() -> Number","!category":"function"},"!proto":"Object"},"sap.ui.model.odata.type.Byte_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Byte with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Byte"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel":{"!description":"Handle to an already instantiated SAP UI5 OData model.","!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.core.mvc.JSONView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.JSONView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.JSONView"},"sap.ui.model.odata.ODataMessageParser_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMessageParser with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageParser.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.model.odata.ODataMessageParser"},"sap.ui.core.Popup.Dock":{"EndBottom":{"!description":"EndBottom : String","!type":"String","!category":"enum"},"RightBottom":{"!description":"RightBottom : String","!type":"String","!category":"enum"},"BeginTop":{"!description":"BeginTop : String","!type":"String","!category":"enum"},"CenterBottom":{"!description":"CenterBottom : String","!type":"String","!category":"enum"},"CenterTop":{"!description":"CenterTop : String","!type":"String","!category":"enum"},"RightTop":{"!description":"RightTop : String","!type":"String","!category":"enum"},"LeftBottom":{"!description":"LeftBottom : String","!type":"String","!category":"enum"},"RightCenter":{"!description":"RightCenter : String","!type":"String","!category":"enum"},"LeftCenter":{"!description":"LeftCenter : String","!type":"String","!category":"enum"},"CenterCenter":{"!description":"CenterCenter : String","!type":"String","!category":"enum"},"BeginBottom":{"!description":"BeginBottom : String","!type":"String","!category":"enum"},"!description":"Enumeration providing options for docking of some element to another.\n\"Right\" and \"Left\" will stay the same in RTL mode, but \"Begin\" and \"End\" will flip to the other side (\"Begin\" is \"Right\" in RTL).","!category":"namespace","LeftTop":{"!description":"LeftTop : String","!type":"String","!category":"enum"},"EndTop":{"!description":"EndTop : String","!type":"String","!category":"enum"},"EndCenter":{"!description":"EndCenter : String","!type":"String","!category":"enum"},"BeginCenter":{"!description":"BeginCenter : String","!type":"String","!category":"enum"}},"sap.ui.core.ComponentMetadata":{"getManifest":{"!description":"Returns the manifest defined in the metadata of the component.\nIf not specified, the return value is null.","!type":"fn() -> Object","!category":"function"},"getManifestEntry":{"!description":"Returns the manifest configuration entry with the specified key (Must be a JSON object).\nIf no key is specified, the return value is null.\n\nExample:\n<code>\n  sap.ui.core.Component.extend(\"sample.Component\", {\n      metadata: {\n          manifest: {\n              \"my.custom.config\" : {\n                  \"property1\" : true,\n                  \"property2\" : \"Something else\"\n              }\n          }\n      }\n  });\n<\/code>\n\nThe configuration above can be accessed via <code>sample.Component.getMetadata().getManifestEntry(\"my.custom.config\")<\/code>.","!type":"fn(sKey: String, bMerged?: Boolean) -> Object","!category":"function"},"getComponents":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use the sap.ui.core.ComponentMetadata#getManifest<br>Returns array of components specified in the metadata of the Component. If not specified or the array is empty, the return value is null.","!type":"fn() -> [String]","!category":"function"},"getMetadataVersion":{"!description":"Returns the version of the metadata which could be 1 or 2. 1 is for legacy\nmetadata whereas 2 is for the manifest.","!type":"fn() -> Number","!category":"function"},"getComponentName":{"!description":"Returns the name of the Component (which is the namespace only with the module name)","!type":"fn() -> String","!category":"function"},"getIncludes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use the sap.ui.core.ComponentMetadata#getManifest<br>Returns the array of the included files that the Component requires such as css and js. If not specified or the array is empty, the return value is null.","!type":"fn() -> [String]","!category":"function"},"getVersion":{"!description":"Returns the version of the component. If not specified, the return value is null.","!type":"fn() -> String","!category":"function"},"getUI5Version":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use the sap.ui.core.ComponentMetadata#getManifest<br>Returns the required version of SAP UI5 defined in the metadata of the Component. If returned value is null, then no special UI5 version is required.","!type":"fn() -> String","!category":"function"},"getConfig":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use the sap.ui.core.ComponentMetadata#getManifest<br>Returns a copy of the configuration property to disallow modifications. If no\nkey is specified it returns the complete configuration property.","!type":"fn(sKey?: String, bDoNotMerge?: Boolean) -> Object","!category":"function"},"getLibs":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use the sap.ui.core.ComponentMetadata#getManifest<br>Returns array of libraries specified in metadata of the Component, that are automatically loaded when an instance of the component is created.\nIf not specified or the array is empty, the return value is null.","!type":"fn() -> [String]","!category":"function"},"getCustomEntry":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use the sap.ui.core.ComponentMetadata#getManifestEntry<br>Returns the custom Component configuration entry with the specified key (Must be a JSON object).\nIf no key is specified, the return value is null.\n\nExample:\n<code>\n  sap.ui.core.Component.extend(\"sample.Component\", {\n      metadata: {\n          \"my.custom.config\" : {\n              \"property1\" : true,\n              \"property2\" : \"Something else\"\n          }\n      }\n  });\n<\/code>\n\nThe configuration above can be accessed via <code>sample.Component.getMetadata().getCustomEntry(\"my.custom.config\")<\/code>.","!type":"fn(sKey: String, bMerged: Boolean) -> Object","!category":"function"},"getRawManifest":{"!description":"Returns the raw manifest defined in the metadata of the component.\nIf not specified, the return value is null.","!type":"fn() -> Object","!category":"function"},"!category":"class","getDependencies":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use the sap.ui.core.ComponentMetadata#getManifest<br>Returns the dependencies defined in the metadata of the component. If not specified, the return value is null.","!type":"fn() -> Object","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.tmpl.DOMAttribute_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.DOMAttribute with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.DOMAttribute"},"sap.ui.app.MockServer_obj":{"!type":"fn(sId: String, mSettings: Object, oScope?: Object)","prototype":"sap.ui.app.MockServer"},"sap.ui.core.ComponentContainer":{"setPropagateModel":{"!description":"Sets a new value for property <code>propagateModel<\/code>.\n\nDefines whether binding information is propagated to the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPropagateModel: Boolean) -> sap.ui.core.ComponentContainer","!category":"function"},"setSettings":{"!description":"Sets a new value for property <code>settings<\/code>.\n\nThe settings object passed to the component when created. The property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oSettings: Object) -> sap.ui.core.ComponentContainer","!category":"function"},"getHandleValidation":{"!description":"Gets current value of property <code>handleValidation<\/code>.\n\nEnable/disable validation handling by MessageManager for this component.\nThe resulting Messages will be propagated to the controls.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nContainer height in CSS size","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"!description":"Component Container","getUrl":{"!description":"Gets current value of property <code>url<\/code>.\n\nThe URL of the component. The property can only be applied initially.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"setUrl":{"!description":"Sets a new value for property <code>url<\/code>.\n\nThe URL of the component. The property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUrl: sap.ui.core.URI) -> sap.ui.core.ComponentContainer","!category":"function"},"getComponent":{"!description":"ID of the element which is the current target of the <code>component<\/code> association, or <code>null<\/code>.\n\nThe component displayed in this ComponentContainer.","!type":"fn() -> sap.ui.core.UIComponent","!category":"function"},"getSettings":{"!description":"Gets current value of property <code>settings<\/code>.\n\nThe settings object passed to the component when created. The property can only be applied initially.","!type":"fn() -> Object","!category":"function"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nContainer height in CSS size\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.ComponentContainer","!category":"function"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nComponent name, the package where the component is contained. The property can only be applied initially.","!type":"fn() -> String","!category":"function"},"!category":"class","getPropagateModel":{"!description":"Gets current value of property <code>propagateModel<\/code>.\n\nDefines whether binding information is propagated to the component.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nContainer width in CSS size","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nComponent name, the package where the component is contained. The property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.core.ComponentContainer","!category":"function"},"setHandleValidation":{"!description":"Sets a new value for property <code>handleValidation<\/code>.\n\nEnable/disable validation handling by MessageManager for this component.\nThe resulting Messages will be propagated to the controls.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bHandleValidation: Boolean) -> sap.ui.core.ComponentContainer","!category":"function"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nContainer width in CSS size\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.ComponentContainer","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ComponentContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"setComponent":{"!description":"Sets the associated <code>component<\/code>.","!type":"fn(oComponent: sap.ui.core.UIComponent) -> sap.ui.core.ComponentContainer","!category":"function"}},"sap.ui.core.support.Support.EventType":{"!description":"Enumeration providing the predefined support event ids.","!category":"namespace"},"sap.ui.base.Metadata":{"getClass":{"!description":"Returns the (constructor of the) described class","!type":"fn() -> fn()","!category":"function"},"isDeprecated":{"!description":"Whether the described class is deprecated and should not be used any more","!type":"fn() -> Boolean","!category":"function"},"isAbstract":{"!description":"Returns whether the described class is abstract","!type":"fn() -> Boolean","!category":"function"},"getAllPublicMethods":{"!description":"Returns an array with the names of all public methods declared by the described class\nand its ancestors.","!type":"fn() -> [String]","!category":"function"},"!description":"Metadata for a class.","getParent":{"!description":"Returns the metadata object of the base class of the described class\nor null if the class has no (documented) base class.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getPublicMethods":{"!description":"Returns an array with the names of the public methods declared by the described class.","!type":"fn() -> [String]","!category":"function"},"isInstanceOf":{"!description":"Checks whether the described class or one of its ancestor classes implements the given interface.","!type":"fn(sInterface: String) -> Boolean","!category":"function"},"getName":{"!description":"Returns the fully qualified name of the described class","!type":"fn() -> String","!category":"function"},"!category":"class","isFinal":{"!description":"Returns whether the described class is final","!type":"fn() -> Boolean","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.odata4analytics.Measure_obj":{"!type":"fn(oQueryResult: sap.ui.model.analytics.odata4analytics.QueryResult, oProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.Measure"},"sap.ui.core.format.FileSizeFormat_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.format.FileSizeFormat with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.format.FileSizeFormat"},"sap.ui.model.odata.type.Single":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Single<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>number<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ndefined constraints.","!type":"fn(fValue: Number)","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(vValue: String | Number, sTargetType: String) -> Number | String","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to an Edm.Single in\n<code>number<\/code> representation.","!type":"fn(vValue: String | Number, sSourceType: String) -> Number","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Single.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.core.ListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.ListItem"},"sap.ui.core.util.ExportType":{"generate":{"!description":"Generates the file content.<br>\nShould be implemented by the individual types!","!type":"fn() -> String","!category":"function"},"setFileExtension":{"!description":"Sets a new value for property <code>fileExtension<\/code>.\n\nFile extension.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFileExtension: String) -> sap.ui.core.util.ExportType","!category":"function"},"getCharset":{"!description":"Gets current value of property <code>charset<\/code>.\n\nCharset.","!type":"fn() -> String","!category":"function"},"getFileExtension":{"!description":"Gets current value of property <code>fileExtension<\/code>.\n\nFile extension.","!type":"fn() -> String","!category":"function"},"_generate":{"!description":"Handles the generation process of the file.<br>","!type":"fn(oExport: sap.ui.core.util.Export) -> String","!category":"function"},"columnGenerator":{"!description":"Creates a column \"generator\" (inspired by ES6 Generators)","!type":"fn() -> Generator","!category":"function"},"getColumnCount":{"!description":"Returns the number of columns.","!type":"fn() -> Number","!category":"function"},"!description":"Base export type. Subclasses can be used for {@link sap.ui.core.util.Export Export}.","setMimeType":{"!description":"Sets a new value for property <code>mimeType<\/code>.\n\nMIME type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMimeType: String) -> sap.ui.core.util.ExportType","!category":"function"},"rowGenerator":{"!description":"Creates a row \"generator\" (inspired by ES6 Generators)","!type":"fn() -> Generator","!category":"function"},"cellGenerator":{"!description":"Creates a cell \"generator\" (inspired by ES6 Generators)","!type":"fn() -> Generator","!category":"function"},"!category":"class","setCharset":{"!description":"Sets a new value for property <code>charset<\/code>.\n\nCharset.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sCharset: String) -> sap.ui.core.util.ExportType","!category":"function"},"getRowCount":{"!description":"Returns the number of rows.","!type":"fn() -> Number","!category":"function"},"!proto":"sap.ui.base.ManagedObject","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportType.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getMimeType":{"!description":"Gets current value of property <code>mimeType<\/code>.\n\nMIME type.","!type":"fn() -> String","!category":"function"}},"sap.ui.model.analytics.odata4analytics.Parameter":{"getTextProperty":{"!description":"Get text property related to this parameter","!type":"fn() -> Object","!category":"function"},"isLowerIntervalBoundary":{"!description":"Get indicator if the parameter represents the lower boundary of an\ninterval","!type":"fn() -> Boolean","!category":"function"},"getContainingParameterization":{"!description":"Get parameterization containing this parameter","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Parameterization","!category":"function"},"getURIToValueEntitySet":{"!description":"Get the URI to locate the entity set holding the value set, if it is\navailable.","!type":"fn(sServiceRootURI: String)","!category":"function"},"isValueSetAvailable":{"!description":"Get indicator if a set of values is available for this parameter.\nTypically, this is true for parameters with a finite set of known values\nsuch as products, business partners in different roles, organization\nunits, and false for integer or date parameters","!type":"fn() -> Boolean","!category":"function"},"getLabelText":{"!description":"Get label","!type":"fn() -> String","!category":"function"},"isIntervalBoundary":{"!description":"Get indicator if the parameter represents an interval boundary","!type":"fn() -> Boolean","!category":"function"},"isOptional":{"!description":"Get indicator whether or not the parameter is optional","!type":"fn() -> Boolean","!category":"function"},"getPeerIntervalBoundaryParameter":{"!description":"Get property for the parameter representing the peer boundary of the same\ninterval","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Parameter","!category":"function"},"!description":"Representation of a property annotated with sap:parameter.","getName":{"!description":"Get the name of the parameter","!type":"fn() -> String","!category":"function"},"getProperty":{"!description":"Get property","!type":"fn() -> Object","!category":"function"},"!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.odata4analytics.EntityType_obj":{"!type":"fn(oModel: Object, oSchema: Object, oEntityType: Object)","prototype":"sap.ui.model.analytics.odata4analytics.EntityType"},"sap.ui.core.Control":{"onAfterRendering":{"!description":"Function is called when the rendering of the control is completed.\n\nApplications must not call this hook method directly, it is called by the framework.\n\nSubclasses of Control should override this hook to implement any necessary actions after the rendering.","!type":"fn()","!category":"function"},"onBeforeRendering":{"!description":"Function is called before the rendering of the control is started.\n\nApplications must not call this hook method directly, it is called by the framework.\n\nSubclasses of Control should override this hook to implement any necessary actions before the rendering.","!type":"fn()","!category":"function"},"attachBrowserEvent":{"!description":"Allows binding handlers for any native browser event to the root HTML element of this Control. This internally handles\nDOM element replacements caused by re-rendering.\n\nIMPORTANT:\nThis should be only used as FALLBACK when the Control events do not cover a specific use-case! Always try using\nSAPUI5 control events, as e.g. accessibility-related functionality is then provided automatically.\nE.g. when working with a sap.ui.commons.Button, always use the Button's \"press\" event, not the native \"click\" event, because\n\"press\" is also guaranteed to be fired when certain keyboard activity is supposed to trigger the Button.\n\nIn the event handler, \"this\" refers to the Control - not to the root DOM element like in jQuery. While the DOM element can\nbe used and modified, the general caveats for working with SAPUI5 control DOM elements apply. In particular the DOM element\nmay be destroyed and replaced by a new one at any time, so modifications that are required to have permanent effect may not\nbe done. E.g. use Control.addStyleClass() instead if the modification is of visual nature.\n\nUse detachBrowserEvent() to remove the event handler(s) again.","!type":"fn(sEventType?: String, fnHandler?: fn(), oListener?: Object) -> sap.ui.core.Control","!category":"function"},"isBusy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use getBusy instead<br>Check if the control is currently in busy state","!type":"fn()","!category":"function"},"allowTextSelection":{"!description":"Defines whether the user can select text inside this control.\nDefaults to <code>true<\/code> as long as this method has not been called.\n\n<b>Note:<\/b>This only works in IE and Safari; for Firefox the element's style must\nbe set to:\n<pre>\n  -moz-user-select: none;\n<\/pre>\nin order to prevent text selection.","!type":"fn(bAllow: Boolean) -> sap.ui.core.Control","!category":"function"},"toggleStyleClass":{"!description":"The string given as \"sStyleClass\" will be be either added to or removed from the \"class\" attribute of this control's root HTML element,\ndepending on the value of \"bAdd\": if bAdd is true, sStyleClass will be added.\nIf bAdd is not given, sStyleClass will be removed if it is currently present and will be added if not present.\nIf sStyleClass is null, the call is ignored.\n\nSee addStyleClass and removeStyleClass for further documentation.","!type":"fn(sStyleClass: String, bAdd: Boolean) -> sap.ui.core.Control","!category":"function"},"detachValidateFieldGroup":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'validateFieldGroup' event of this <code>sap.ui.core.Control<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Control","!category":"function"},"setFieldGroupIds":{"!description":"Sets a new value for property <code>fieldGroupIds<\/code>.\n\nThe IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!type":"fn(sFieldGroupIds: [String]) -> sap.ui.core.Control","!category":"function"},"hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this control has this style class set\nvia a previous call to addStyleClass().","!type":"fn(sStyleClass: String) -> Boolean","!category":"function"},"getBusyIndicatorDelay":{"!description":"Gets current value of property <code>busyIndicatorDelay<\/code>.\n\nThe delay in milliseconds, after which the busy indicator will show up for this control.\n\nDefault value is <code>1000<\/code>.","!type":"fn() -> Number","!category":"function"},"!category":"class","triggerValidateFieldGroup":{"!description":"Triggers the validateFieldGroup event for this control.\nCalled by sap.ui.core.UIArea if a field group should be validated after is loses the focus or a validation key combibation was pressed.\nThe validation key is defined in the UI area <code>UIArea._oFieldGroupValidationKey<\/code>","!type":"fn()","!category":"function"},"getControlsByFieldGroupId":{"!description":"Returns a list of all child controls with a field group ID.\nSee {@link #checkFieldGroupIds checkFieldGroupIds} for a description of the\n<code>vFieldGroupIds<\/code> parameter.\nAssociated controls are not taken into account.","!type":"fn(vFieldGroupIds?: [String | String]) -> [sap.ui.core.Control]","!category":"function"},"clone":{"!description":"Overrides {@link sap.ui.core.Element#clone Element.clone} to clone additional\ninternal state.\n\nThe additionally cloned information contains:\n<ul>\n<li>browser event handlers attached with {@link #attachBrowserEvent}\n<li>text selection behavior\n<li>style classes added with {@link #addStyleClass}\n<\/ul>","!type":"fn(sIdSuffix?: String, aLocalIds?: [String]) -> sap.ui.core.Element","!category":"function"},"getFieldGroupIds":{"!description":"Returns a copy of the field group IDs array. Modification of the field group IDs\nneed to call {@link #setFieldGroupIds setFieldGroupIds} to apply the changes.","!type":"fn() -> [String]","!category":"function"},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.","!type":"fn(sStyleClass: String) -> sap.ui.core.Control","!category":"function"},"detachBrowserEvent":{"!description":"Removes event handlers which have been previously attached using {@link #attachBrowserEvent}.\n\nNote: listeners are only removed, if the same combination of event type, callback function\nand context object is given as in the call to <code>attachBrowserEvent<\/code>.","!type":"fn(sEventType?: String, fnHandler?: fn(), oListener?: Object)","!category":"function"},"getBusy":{"!description":"Gets current value of property <code>busy<\/code>.\n\nWhether the control is currently in busy state.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireValidateFieldGroup":{"!description":"Fires event validateFieldGroup to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'fieldGroupIds' of type <code>string[]<\/code>field group IDs of the logical field groups to validate<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Control","!category":"function"},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nWhether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.core.Control","!category":"function"},"setBusyIndicatorDelay":{"!description":"Define the delay, after which the busy indicator will show up","!type":"fn(iDelay: Number) -> sap.ui.core.Control","!category":"function"},"rerender":{"!description":"Tries to replace its DOM reference by re-rendering.","!type":"fn()","!category":"function"},"invalidate":{"!description":"Triggers rerendering of this element and its children.\n\nAs <code>sap.ui.core.Element<\/code> \"bubbles up\" the invalidate, changes to children\npotentially result in rerendering of the whole sub tree.","!type":"fn(oOrigin: Object)","!category":"function"},"checkFieldGroupIds":{"!description":"Returns whether the control has a given field group.\nIf <code>vFieldGroupIds<\/code> is not given it checks whether at least one field group ID is given for this control.\nIf <code>vFieldGroupIds<\/code> is an empty array or empty string, true is returned if there is no field group ID set for this control.\nIf <code>vFieldGroupIds<\/code> is a string array or a string all expected field group IDs are checked and true is returned if all are contained for given for this control.\nThe comma delimiter can be used to seperate multiple field group IDs in one string.","!type":"fn(vFieldGroupIds?: [String | String]) -> Boolean","!category":"function"},"getRenderer":{"!description":"Returns a renderer for this control instance.\n\nIt is retrieved using the RenderManager as done during rendering.","!type":"fn() -> Object","!category":"function"},"placeAt":{"!description":"Puts <code>this<\/code> control into the specified container (<code>oRef<\/code>) at the given\nposition (<code>oPosition<\/code>).\n\nFirst it is checked whether <code>oRef<\/code> is a container element / control (has a\nmultiple aggregation with type <code>sap.ui.core.Control<\/code> and name 'content') or is an Id String\nof such an container.\nIf this is not the case <code>oRef<\/code> can either be a Dom Reference or Id String of the UIArea\n(if it does not yet exist implicitly a new UIArea is created),\n\nThe <code>oPosition<\/code> can be one of the following:\n\n<ul>\n <li>\"first\": The control is added as the first element to the container.<\/li>\n <li>\"last\": The control is added as the last element to the container (default).<\/li>\n <li>\"only\": All existing children of the container are removed (not destroyed!) and the control is added as new child.<\/li>\n <li><i>index<\/i>: The control is added at the specified <i>index<\/i> to the container.<\/li>\n<\/ul>","!type":"fn(oRef: String | Element | sap.ui.core.Control, oPosition: String | Number) -> sap.ui.core.Control","!category":"function"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nWhether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"Base Class for Controls.","addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this control's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\n   myButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n   .myRedTextButton {\n      color: red;\n   }\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.","!type":"fn(sStyleClass: String) -> sap.ui.core.Control","!category":"function"},"setBusy":{"!description":"Set the controls busy state.","!type":"fn(bBusy: Boolean) -> sap.ui.core.Control","!category":"function"},"attachValidateFieldGroup":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'validateFieldGroup' event of this <code>sap.ui.core.Control<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.Control<\/code> itself.\n\nEvent is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or the user explicitly pressed a validation key combination.\nUse this event to validate data of the controls belonging to a field group.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Control","!category":"function"},"getIdForLabel":{"!description":"Returns the DOMNode Id to be used for the \"labelFor\" attribute of the label.\n\nBy default, this is the Id of the control itself.","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Control.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.search.OpenSearchProvider":{"getSuggestUrl":{"!description":"Gets current value of property <code>suggestUrl<\/code>.\n\nThe URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!description":"A SearchProvider which uses the OpenSearch protocol (either JSON or XML).","!category":"class","setSuggestUrl":{"!description":"Sets a new value for property <code>suggestUrl<\/code>.\n\nThe URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSuggestUrl: sap.ui.core.URI) -> sap.ui.core.search.OpenSearchProvider","!category":"function"},"getSuggestType":{"!description":"Gets current value of property <code>suggestType<\/code>.\n\nThe type of data which is provided by the given suggestUrl: either 'json' or 'xml'.\n\nDefault value is <code>json<\/code>.","!type":"fn() -> String","!category":"function"},"suggest":{"!description":"Call this function to get suggest values from the search provider.\nThe given callback function is called with the suggest value (type 'string', 1st parameter)\nand an array of the suggestions (type '[string]', 2nd parameter).","!type":"fn(sValue: String, fCallback: fn())","!category":"function"},"setSuggestType":{"!description":"Sets a new value for property <code>suggestType<\/code>.\n\nThe type of data which is provided by the given suggestUrl: either 'json' or 'xml'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>json<\/code>.","!type":"fn(sSuggestType: String) -> sap.ui.core.search.OpenSearchProvider","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.search.OpenSearchProvider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.search.SearchProvider"},"sap.ui.core.PopupInterface":{"!description":"Marker interface for controls that are not rendered \"embedded\" into other controls but need to be opened/closed.\n\nSuch controls are handled differently during rendering.","!category":"static class"},"sap.ui.Device.media.RANGESETS":{"!description":"Enumeration containing the names and settings of predefined screen width media query range sets.","SAP_6STEPS":{"!description":"A 6-step range set (XS-XXL).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"XS\"<\/code>: For screens smaller than 241 pixels.<\/li>\n<li><code>\"S\"<\/code>: For screens greater than or equal to 241 pixels and smaller than 400 pixels.<\/li>\n<li><code>\"M\"<\/code>: For screens greater than or equal to 400 pixels and smaller than 541 pixels.<\/li>\n<li><code>\"L\"<\/code>: For screens greater than or equal to 541 pixels and smaller than 768 pixels.<\/li>\n<li><code>\"XL\"<\/code>: For screens greater than or equal to 768 pixels and smaller than 960 pixels.<\/li>\n<li><code>\"XXL\"<\/code>: For screens greater than or equal to 960 pixels.<\/li>\n<\/ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.html#initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html<\/code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-6Step-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.","!type":"String","!category":"enum"},"SAP_4STEPS":{"!description":"A 4-step range set (S-XL).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"S\"<\/code>: For screens smaller than 520 pixels.<\/li>\n<li><code>\"M\"<\/code>: For screens greater than or equal to 520 pixels and smaller than 760 pixels.<\/li>\n<li><code>\"L\"<\/code>: For screens greater than or equal to 760 pixels and smaller than 960 pixels.<\/li>\n<li><code>\"XL\"<\/code>: For screens greater than or equal to 960 pixels.<\/li>\n<\/ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.html#initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html<\/code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-4Step-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.","!type":"String","!category":"enum"},"SAP_3STEPS":{"!description":"A 3-step range set (S-L).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"S\"<\/code>: For screens smaller than 520 pixels.<\/li>\n<li><code>\"M\"<\/code>: For screens greater than or equal to 520 pixels and smaller than 960 pixels.<\/li>\n<li><code>\"L\"<\/code>: For screens greater than or equal to 960 pixels.<\/li>\n<\/ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.html#initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html<\/code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-3Step-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.","!type":"String","!category":"enum"},"!category":"namespace","SAP_STANDARD":{"!description":"A 3-step range set (Phone, Tablet, Desktop).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"Phone\"<\/code>: For screens smaller than 600 pixels.<\/li>\n<li><code>\"Tablet\"<\/code>: For screens greater than or equal to 600 pixels and smaller than 1024 pixels.<\/li>\n<li><code>\"Desktop\"<\/code>: For screens greater than or equal to 1024 pixels.<\/li>\n<\/ul>\n\nThis range set is initialized by default. An initialization via {@link sap.ui.Device.media.html#initRangeSet} is not needed.\n\nA CSS class is added to the page root (<code>html<\/code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-Std-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.\nFurthermore there are 5 additional CSS classes to hide elements based on the width of the screen:\n<ul>\n<li><code>sapUiHideOnPhone<\/code>: Will be hidden if the screen has 600px or more<\/li>\n<li><code>sapUiHideOnTablet<\/code>: Will be hidden if the screen has less than 600px or more than 1023px<\/li>\n<li><code>sapUiHideOnDesktop<\/code>: Will be hidden if the screen is smaller than 1024px<\/li>\n<li><code>sapUiVisibleOnlyOnPhone<\/code>: Will be visible if the screen has less than 600px<\/li>\n<li><code>sapUiVisibleOnlyOnTablet<\/code>: Will be visible if the screen has 600px or more but less than 1024px<\/li>\n<li><code>sapUiVisibleOnlyOnDesktop<\/code>: Will be visible if the screen has 1024px or more<\/li>\n<\/ul>","!type":"String","!category":"enum"},"SAP_STANDARD_EXTENDED":{"!description":"A 4-step range set (Phone, Tablet, Desktop, LargeDesktop).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"Phone\"<\/code>: For screens smaller than 600 pixels.<\/li>\n<li><code>\"Tablet\"<\/code>: For screens greater than or equal to 600 pixels and smaller than 1024 pixels.<\/li>\n<li><code>\"Desktop\"<\/code>: For screens greater than or equal to 1024 pixels and smaller than 1440 pixels.<\/li>\n<li><code>\"LargeDesktop\"<\/code>: For screens greater than or equal to 1440 pixels.<\/li>\n<\/ul>\n\nThis range set is initialized by default. An initialization via {@link sap.ui.Device.media.html#initRangeSet} is not needed.\n\nA CSS class is added to the page root (<code>html<\/code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-StdExt-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.","!type":"String","!category":"enum"}},"sap.ui.model.json.JSONModel":{"!description":"Model implementation for JSON format","getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function"},"!category":"class","setJSON":{"!description":"Sets the JSON encoded string data to the model.","!type":"fn(sJSONText: String, bMerge?: Boolean)","!category":"function"},"setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model.\nIf the model value changed all interested parties are informed.","!type":"fn(sPath: String, oValue: Object, oContext?: Object, bAsyncUpdate?: Boolean) -> Boolean","!category":"function"},"setData":{"!description":"Sets the JSON encoded data to the model.","!type":"fn(oData: Object, bMerge?: Boolean)","!category":"function"},"loadData":{"!description":"Load JSON-encoded data from the server using a GET HTTP request and store the resulting JSON data in the model.\nNote: Due to browser security restrictions, most \"Ajax\" requests are subject to the same origin policy,\nthe request can not successfully retrieve data from a different domain, subdomain, or protocol.","!type":"fn(sURL: String, oParameters?: Object | String, bAsync?: Boolean, sType?: String, bMerge?: Boolean, bCache?: String, mHeaders?: Object)","!category":"function"},"getJSON":{"!description":"Serializes the current JSON data of the model into a string.\nNote: May not work in Internet Explorer 8 because of lacking JSON support (works only if IE 8 mode is enabled)","!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.json.JSONModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.ClientModel"},"sap.ui.model.TreeBindingAdapter_obj":{"!type":"fn()","prototype":"sap.ui.model.TreeBindingAdapter"},"sap.ui.core.Message":{"setReadOnly":{"!description":"Sets a new value for property <code>readOnly<\/code>.\n\nDetermines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bReadOnly: Boolean) -> sap.ui.core.Message","!category":"function"},"setLevel":{"!description":"Sets a new value for property <code>level<\/code>.\n\nSetting the message's level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sLevel: sap.ui.core.MessageType) -> sap.ui.core.Message","!category":"function"},"setTimestamp":{"!description":"Sets a new value for property <code>timestamp<\/code>.\n\nMessage's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTimestamp: String) -> sap.ui.core.Message","!category":"function"},"getDefaultIcon":{"!description":"Returns the icon's default URI depending on given size. \n\nThere are default icons for messages available that can be used this way. If no \nparameter is given, the size will be 16x16 per default. If larger icons are needed, \nthe parameter \"32x32\" might be given.","!type":"fn(sSize: String) -> sap.ui.core.URI","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nMessage text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.core.Message","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nA possible icon URI of the message","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nMessage text","!type":"fn() -> String","!category":"function"},"getTimestamp":{"!description":"Gets current value of property <code>timestamp<\/code>.\n\nMessage's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs.","!type":"fn() -> String","!category":"function"},"!description":"This element used to provide messages. Rendering must be done within the control that uses this kind of element.\n\nIts default level is none.","compareByType":{"!description":"Compares two given messages with each other. \n\nThe types of {@link sap.ui.core.MessageType} are ordered from \"Error\" > \"Warning\" > \"Success\" >\n\"Information\" > \"None\".","!type":"fn(oOther: sap.ui.core.Message, oMessage1: sap.ui.core.Message, oMessage2: sap.ui.core.Message) -> Number","!category":"function"},"!category":"class","getReadOnly":{"!description":"Gets current value of property <code>readOnly<\/code>.\n\nDetermines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nA possible icon URI of the message\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.core.Message","!category":"function"},"getLevel":{"!description":"Gets current value of property <code>level<\/code>.\n\nSetting the message's level.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.MessageType","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Message.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.routing.HashChanger":{"destroy":{"!description":"Cleans the event registration","!type":"fn()","!category":"function"},"getHash":{"!description":"Gets the current hash","!type":"fn() -> String","!category":"function"},"fireHashChanged":{"!description":"Fires the hashchanged event, may be extended to modify the hash before fireing the event","!type":"fn(newHash: String, oldHash: String)","!category":"function"},"!description":"Class for manipulating and receiving changes of the browserhash with the hasher framework.\nFires a \"hashChanged\" event if the browser hash changes.","replaceHashChanger":{"!description":"Sets the hashChanger to a new instance, destroys the old one and copies all its event listeners to the new one","!type":"fn(oHashChanger: sap.ui.core.routing.HashChanger)","!category":"function"},"setHash":{"!description":"Sets the hash to a certain value. When using the set function a browser history  entry is written.\nIf you do not want to have an entry in the browser history, please use set replaceHash function.","!type":"fn(sHash: String)","!category":"function"},"!category":"class","init":{"!description":"Will start listening to hashChanges with the parseHash function.\nThis will also fire a hashchanged event with the initial hash.","!type":"fn()","!category":"function"},"getInstance":{"!description":"Gets a global singleton of the HashChanger. The singleton will get created when this function is invoked for the first time.","!type":"fn()","!category":"function"},"replaceHash":{"!description":"Replaces the hash to a certain value. When using the replace function no browser history is written.\nIf you want to have an entry in the browser history, please use set setHash function.","!type":"fn(sHash: String)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.HashChanger.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.model.odata.ODataListBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataListBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, aSorters?: Array, aFilters?: Array, mParameters?: Object)","prototype":"sap.ui.model.odata.ODataListBinding"},"jQuery.sap.storage.Type":{"!description":"Enumeration of the storage types supported by {@link jQuery.sap.storage.Storage}","session":{"!description":"Indicates usage of the browser's sessionStorage feature","!type":"String","!category":"enum"},"global":{"!description":"Indicates usage of the browser's globalStorage feature","!type":"String","!category":"enum"},"!category":"namespace","local":{"!description":"Indicates usage of the browser's localStorage feature","!type":"String","!category":"enum"}},"sap.ui.core.mvc.JSONView":{"!description":"A View defined using JSON.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.JSONView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.mvc.View"},"sap.ui.model.type.Float":{"!description":"This class represents float simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Float.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.SimpleType"},"sap.ui.test.matchers.Matcher_obj":{"!type":"fn()","prototype":"sap.ui.test.matchers.Matcher"},"sap.ui.core.message.Message_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.Message with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(mParameters?: Object)","prototype":"sap.ui.core.message.Message"},"sap.ui.model.type.FileSize_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.FileSize with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.FileSize"},"sap.ui.core.ValueState":{"!description":"Marker for the correctness of the current value.","!category":"static class","Warning":{"!description":"State is valid but with a warning.","!type":"String","!category":"enum"},"None":{"!description":"State is not specified.","!type":"String","!category":"enum"},"Success":{"!description":"State is valid.","!type":"String","!category":"enum"},"Error":{"!description":"State is not valid.","!type":"String","!category":"enum"}},"sap.ui.model.message.MessageModel":{"!description":"Model implementation for Messages \n\t *","getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function"},"!category":"class","setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model.\nIf the model value changed all interested parties are informed.","!type":"fn(sPath: String, oValue: Object, oContext?: Object)","!category":"function"},"setData":{"!description":"Sets the message data to the model.","!type":"fn(oData: Object)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.message.MessageModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.Model"},"sap.ui.core.Component":{"onError":{"!description":"The window error hook. Override this method in your Component class implementation\nto listen to unhandled errors.","!type":"fn(sMessage: String, sFile: String, iLine: Number)","!category":"function"},"init":{"!description":"Initializes the Component instance after creation.\n\nApplications must not call this hook method directly, it is called by the\nframework while the constructor of an Component is executed.\n\nSubclasses of Component should override this hook to implement any necessary\ninitialization.","!type":"fn()","!category":"function"},"getComponentData":{"!description":"Returns user specific data object","!type":"fn() -> Object","!category":"function"},"onWindowBeforeUnload":{"!description":"The window before unload hook. Override this method in your Component class\nimplementation, to handle cleanup before the real unload or to prompt a question\nto the user, if the component should be exited.","!type":"fn() -> String","!category":"function"},"exit":{"!description":"Cleans up the component instance before destruction.\n\nApplications must not call this hook method directly, it is called by the\nframework when the element is {@link #destroy destroyed}.\n\nSubclasses of Component should override this hook to implement any necessary\ncleanup.","!type":"fn()","!category":"function"},"onConfigChange":{"!description":"The hook which gets called when the static configuration of the component\nhas been changed by some configuration extension.","!type":"fn(sConfigKey: String)","!category":"function"},"onWindowUnload":{"!description":"The window unload hook. Override this method in your Component class\nimplementation, to handle cleanup of the component once the window\nwill be unloaded (e.g. closed).","!type":"fn()","!category":"function"},"!description":"Base Class for Component.","runAsOwner":{"!description":"Calls the function <code>fn<\/code> once and marks all ManagedObjects\ncreated during that call as \"owned\" by this Component.\n\nNested calls of this method are supported (e.g. inside a newly created,\nnested component). The currently active owner Component will be remembered\nbefore executing <code>fn<\/code> and restored afterwards.","!type":"fn(fn: fn()) -> Object","!category":"function"},"getEventBus":{"!description":"Returns the event bus of this component.","!type":"fn() -> sap.ui.core.EventBus","!category":"function"},"getOwnerIdFor":{"!description":"Returns the Id of the object in whose \"context\" the given ManagedObject has been created.\n\nFor objects that are not ManagedObjects or for which the owner is unknown,\n<code>undefined<\/code> will be returned as owner Id.\n\n<strong>Note<\/strong>: Ownership for objects is only checked by the framework at the time\nwhen they are created. It is not checked or updated afterwards. And it can only be detected\nwhile the {@link sap.ui.core.Component.runAsOwner Component.runAsOwner} function is executing.\nWithout further action, this is only the case while the content of an UIComponent is\n{@link sap.ui.core.UIComponent.createContent constructed} or when a\n{@link sap.ui.core.routing.Router Router} creates a new View and its content.\n\n<strong>Note<\/string>: This method does not guarantee that the returned owner Id belongs\nto a Component. Currently, it always does. But future versions of UI5 might introduce a\nmore fine grained ownership concept, e.g. taking Views into account. Callers that\nwant to deal only with components as owners, should use the following method:\n{@link sap.ui.core.Component.getOwnerComponentFor Component.getOwnerComponentFor}.\nIt guarantees that the returned object (if any) will be a Component.\n\n<strong>Further note<\/strong> that only the Id of the owner is recorded. In rare cases,\nwhen the lifecycle of a ManagedObject is not bound to the lifecycle of its owner,\n(e.g. by the means of aggregations), then the owner might have been destroyed already\nwhereas the ManagedObject is still alive. So even the existence of an owner Id is\nnot a guarantee for the existence of the corresponding owner.","!type":"fn(oObject: sap.ui.base.ManagedObject) -> String","!category":"function"},"!category":"class","getInterface":{"!type":"fn()","!category":"function"},"getOwnerComponentFor":{"!description":"Returns the Component instance in whose \"context\" the given ManagedObject has been created\nor <code>undefined<\/code>.\n\nThis is a convenience wrapper around {@link sap.ui.core.Component.getOwnerIdFor Component.getOwnerIdFor}.\nIf the owner Id cannot be determined for the reasons document with <code>getOwnerForId<\/code>\nor when the Component for the determined Id no longer exists, <code>undefined<\/code>\nwill be returned.","!type":"fn(oObject: sap.ui.base.ManagedObject) -> sap.ui.core.Component","!category":"function"},"!proto":"sap.ui.base.ManagedObject","getMetadata":{"!description":"Returns the metadata for the Component class.","!type":"fn() -> sap.ui.core.ComponentMetadata","!category":"function"}},"sap.ui.core.Title":{"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the title text","!type":"fn() -> String","!category":"function"},"setLevel":{"!description":"Sets a new value for property <code>level<\/code>.\n\nDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sLevel: sap.ui.core.TitleLevel) -> sap.ui.core.Title","!category":"function"},"!description":"Represents a title element that can be used for aggregation with other controls","setEmphasized":{"!description":"Sets a new value for property <code>emphasized<\/code>.\n\nIf set the title is displayed emphasized.\nThis feature is nor supported by all controls using the Title.control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEmphasized: Boolean) -> sap.ui.core.Title","!category":"function"},"!category":"class","setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDefines the URL for icon display\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.core.Title","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the title text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.core.Title","!category":"function"},"getLevel":{"!description":"Gets current value of property <code>level<\/code>.\n\nDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.ui.core.TitleLevel","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDefines the URL for icon display","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getEmphasized":{"!description":"Gets current value of property <code>emphasized<\/code>.\n\nIf set the title is displayed emphasized.\nThis feature is nor supported by all controls using the Title.control.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Title.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.model.odata.type.Double_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Double with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Double"},"sap.ui.model.type.Currency":{"!description":"This class represents float simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Currency.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.CompositeType"},"sap.ui.core.Design":{"Standard":{"!description":"Standard font","!type":"String","!category":"enum"},"!description":"Font design for texts","Monospace":{"!description":"Mono space font","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.core.message.ControlMessageProcessor":{"setMessages":{"!description":"Set Messages to check","!type":"fn(vMessages: map)","!category":"function"},"!description":"The ControlMessageProcessor implementation.\nThis MessageProcessor is able to handle Messages with the following target syntax:\n\t\t'ControlID/PropertyName'","!category":"class","checkMessages":{"!description":"Check Messages and update controls with messages","!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.ControlMessageProcessor.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.test.TestUtils":{"!description":"A collection of functions that support QUnit testing.","!category":"namespace","withNormalizedMessages":{"!description":"If a test is wrapped by this function, you can test that locale-dependent texts are\ncreated as expected, but avoid checking against the real message text. The function\nensures that every message retrieved using\n<code>sap.ui.getCore().getLibraryResourceBundle().getText()<\/code> consists of the key\nfollowed by all parameters referenced in the bundle's text in order of their numbers.\n\nThe function uses <a href=\"http://sinonjs.org/docs/\">SSinon.js<\/a> and expects that it\nhas been loaded. It creates a <a href=\"http://sinonjs.org/docs/#sandbox\">Sinon\nsandbox<\/a> which is available as <code>this<\/code> in the code under test.\n\n<b>Example<\/b>:\n\nIn the message bundle a message looks like this:\n<pre>\nEnterNumber=Enter a number with scale {1} and precision {0}.\n<\/pre>\nThis leads to the following results:\n<table>\n<tr><th>Call<\/th><th>Result<\/th><\/tr>\n<tr><td><code>getText(\"EnterNumber\", [10])<\/code><\/td>\n  <td>EnterNumber 10 {1}<\/td><\/tr>\n<tr><td><code>getText(\"EnterNumber\", [10, 3])<\/code><\/td>\n  <td>EnterNumber 10 3<\/td><\/tr>\n<tr><td><code>getText(\"EnterNumber\", [10, 3, \"foo\"])<\/code><\/td>\n  <td>EnterNumber 10 3<\/td><\/tr>\n<\/table>\n\n<b>Usage<\/b>:\n<pre>\ntest(\"parse error\", function () {\n    sap.ui.test.TestUtils.withNormalizedMessages(function () {\n        var oType = new sap.ui.model.odata.type.Decimal({},\n                       {constraints: {precision: 10, scale: 3});\n\n        throws(function () {\n            oType.parseValue(\"-123.4567\", \"string\");\n        }, /EnterNumber 10 3/);\n    });\n});\n<\/pre>","!type":"fn(fnCodeUnderTest: fn())","!category":"function"}},"sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest":{"setSortExpression":{"!description":"Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the sort object maintained by this request.","!type":"fn(oSorter: sap.ui.model.analytics.odata4analytics.SortExpression)","!category":"function"},"getURIQueryOptionValue":{"!description":"Get the value of an query option for the OData request URI corresponding\nto this request.","!type":"fn(sQueryOptionName: String) -> String","!category":"function"},"setParameterizationRequest":{"!description":"Set the parameterization request required for retrieving dimension\nmembers directly from the query result, if it is parameterized.","!type":"fn(oParameterizationRequest: undefined)","!category":"function"},"getResultPageBoundaries":{"!description":"Returns the current page boundaries as object with properties\n<code>start<\/code> and <code>end<\/code>. If the end of the page is\nunbounded, <code>end<\/code> is null.","!type":"fn() -> Object","!category":"function"},"!description":"Creation of URIs for fetching a query dimension value set.","getSortExpression":{"!description":"Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.SortExpression","!category":"function"},"getURIToDimensionMemberEntries":{"!description":"Get the unescaped URI to fetch the dimension members, optionally\naugmented by text and attributes.","!type":"fn(sServiceRootURI: String) -> String","!category":"function"},"setResultPageBoundaries":{"!description":"Specify that only a page of the query result shall be returned. A page is\ndescribed by its boundaries, that are row numbers for the first and last\nrows in the query result to be returned.","!type":"fn(start: Number, end: Number)","!category":"function"},"setFilterExpression":{"!description":"Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the filter object maintained by this request.","!type":"fn(oFilter: sap.ui.model.analytics.odata4analytics.FilterExpression)","!category":"function"},"!category":"class","getFilterExpression":{"!description":"Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function"},"getURIToDimensionMemberEntitySet":{"!description":"Get the URI to locate the entity set for the dimension memebers.","!type":"fn(sServiceRootURI: String) -> String","!category":"function"},"setRequestOptions":{"!description":"Set further options to be applied for the OData request","!type":"fn(bIncludeCount: Boolean)","!category":"function"},"!proto":"sap.ui.base.Object"},"jQuery.sap.storage.Storage":{"!description":"A Storage API for JavaScript.\n\nProvides methods to store data on the client using Web Storage API support by the browser. The data\nreceived by this API must be already serialized, in string format. Similarly, the API returns the retrieved\ndata in serialized string format, so it is the responsibility of the caller to de-serialize it, if applicable.\n\nAttention: The Web Storage API stores the data on the client. Therefore do not use this API for confidential information. \n\nOne can get access to the 'default' storage by using {@link jQuery.sap.storage} directly\nor alternatively via factory functionality available as <code>jQuery.sap.storage(jQuery.sap.storage.Type.session)<\/code>\nreturning an object implementing this interface.\n\nA typical intended usage of this API is the storage of a string representing the state of a control.\nIn such usage, the data is stored in the browser session, and\nthe methods to be used are {@link #put} and {@link #get}.\nThe method {@link #remove} can be used to delete the previously saved state.\n\nIn sake of completeness, the method {@link #clear} is available.\nHowever, it should be called only in very particular situations,\nwhen a global erasing of data is required. If only keys with certain prefix\nshould be deleted the method {@link #removeAll} should be used.","!category":"static class"},"jQuery.sap.act":{"isActive":{"!description":"Checks whether recently an activity was detected.\n\nNot supported for Internet Explorer 8.","!type":"fn()","!category":"function"},"detachActivate":{"!description":"Deregisters a previously registered handler from the activity event.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"!category":"namespace","attachActivate":{"!description":"Registers the given handler to the activity event, which is fired when an activity was detected after a certain period of inactivity.\n\nThe Event is not fired for Internet Explorer 8.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"refresh":{"!description":"Reports an activity.","!type":"fn()","!category":"function"}},"sap.ui.model.odata.ODataAnnotations":{"fireFailed":{"!description":"Fire event failed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function"},"setXML":{"!description":"Sets an XML document","!type":"fn(oXMLDocument: Object, sXMLContent: String, mOptions?: map) -> Boolean","!category":"function"},"attachFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'failed' event of this <code>sap.ui.model.odata.ODataAnnotations<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function"},"addUrl":{"!description":"Adds (a) new URL(s) to the be parsed for OData annotations, which are then merged into the annotations object\nwhich can be retrieved by calling the getAnnotations()-method.","!type":"fn(vUrl: [String | sting]) -> Promise","!category":"function"},"attachLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'loaded' event of this <code>sap.ui.model.odata.ODataAnnotations<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function"},"fireLoaded":{"!description":"Fire event loaded to attached listeners.","!type":"fn(mArguments?: map) -> sap.ui.model.odata.ODataAnnotations","!category":"function"},"!description":"Implementation to access oData Annotations","getAnnotationsData":{"!description":"returns the raw annotation data","!type":"fn() -> Object","!category":"function"},"isFailed":{"!description":"Checks whether annotations loading of at least one of the given URLs has already failed.\nNote: For asynchronous annotations {@link #attachFailed} has to be used.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","detachLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'loaded' event of this <code>sap.ui.model.odata.ODataAnnotations<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function"},"isLoaded":{"!description":"Checks whether annotations from at least one source are available","!type":"fn() -> Boolean","!category":"function"},"!proto":"sap.ui.base.Object","detachFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'failed' event of this <code>sap.ui.model.odata.ODataAnnotations<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataAnnotations.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.odata.type.Byte":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Byte<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>number<\/code>.","getRange":{"!description":"Returns the type's supported range as object with properties <code>minimum<\/code> and\n<code>maximum<\/code>.","!type":"fn() -> Object","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Byte.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.Int"},"sap.ui.test.matchers.Ancestor_obj":{"!type":"fn(oAncestorControl: Object, bDirect?: Boolean)","prototype":"sap.ui.test.matchers.Ancestor"},"sap.ui.app.Application_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.app.Application with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.app.Application"},"sap.ui.model.analytics.odata4analytics.SortExpression_obj":{"!type":"fn(oModel: Object, oSchema: Object, oEntityType: sap.ui.model.analytics.odata4analytics.EntityType)","prototype":"sap.ui.model.analytics.odata4analytics.SortExpression"},"sap.ui.model.SelectionModel":{"attachSelectionChanged":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.SelectionModel","!category":"function"},"getLeadSelectedIndex":{"!description":"Return the second index argument from the most recent call to\nsetSelectionInterval(), addSelectionInterval() or removeSelectionInterval().","!type":"fn() -> Number","!category":"function"},"setSelectionInterval":{"!description":"Changes the selection to be equal to the range <code>iFromIndex<\/code> and <code>iToIndex<\/code>\ninclusive. If <code>iFromIndex<\/code> is smaller than <code>iToIndex<\/code>, both parameters are swapped.\n\nIn <code>SINGLE_SELECTION<\/code> selection mode, only <code>iToindex<\/iToIndex> is used.\n\nIf this call results in a change to the current selection, then a\n<code>SelectionChanged<\/code> event is fired.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function"},"clearSelection":{"!description":"Change the selection to the empty set and clears the lead selection.\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged<\/code> event is fired.","!type":"fn() -> sap.ui.model.SelectionModel","!category":"function"},"getSelectedIndices":{"!description":"Returns the selected indices as array.","!type":"fn() -> [Number]","!category":"function"},"fireSelectionChanged":{"!description":"Fire event 'selectionChanged' to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'leadIndex' of type <code>int<\/code> Lead selection index.<\/li>\n<li>'rowIndices' of type <code>int[]<\/code> Other selected indices (if available)<\/li>\n<\/ul>","!type":"fn(mArguments: Object) -> sap.ui.model.SelectionModel","!category":"function"},"setSelectionMode":{"!description":"Sets the selection mode. The following list describes the accepted\nselection modes:\n<ul>\n<li><code>sap.ui.model.SelectionModel.SINGLE_SELECTION<\/code> -\n  Only one list index can be selected at a time. In this mode,\n  <code>setSelectionInterval<\/code> and <code>addSelectionInterval<\/code> are\n  equivalent, both replacing the current selection with the index\n  represented by the second argument (the \"lead\").\n<li><code>sap.ui.model.SelectionModel.MULTI_SELECTION<\/code> -\n  In this mode, there's no restriction on what can be selected.\n<\/ul>","!type":"fn(iSelectionMode: Number)","!category":"function"},"getSelectionMode":{"!description":"Returns the current selection mode.","!type":"fn() -> Number","!category":"function"},"!category":"class","detachSelectionChanged":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.SelectionModel","!category":"function"},"sliceSelectionInterval":{"!description":"Slices a the indices between the two indices from the selection.\nIf <code>iFromIndex<\/code> is smaller than <code>iToIndex<\/code>, both parameters are swapped.\n\nIf the range of removed selection indices includes the current lead selection,\nthen the lead selection will be unset (set to -1).\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged<\/code> event is fired.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function"},"isSelectedIndex":{"!description":"Returns true if the specified index is selected.","!type":"fn(iIndex: Number) -> Boolean","!category":"function"},"addSelectionInterval":{"!description":"Changes the selection to be the union of the current selection\nand the range between <code>iFromIndex<\/code> and <code>iToIndex<\/code> inclusive.\nIf <code>iFromIndex<\/code> is smaller than <code>iToIndex<\/code>, both parameters are swapped.\n\nIn <code>SINGLE_SELECTION<\/code> selection mode, this is equivalent\nto calling <code>setSelectionInterval<\/code>, and only the second index\nis used.\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged<\/code> event is fired.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function"},"removeSelectionInterval":{"!description":"Changes the selection to be the set difference of the current selection\nand the indices between <code>iFromIndex<\/code> and <code>iToIndex<\/code> inclusive.\nIf <code>iFromIndex<\/code> is smaller than <code>iToIndex<\/code>, both parameters are swapped.\n\nIf the range of removed selection indices includes the current lead selection,\nthen the lead selection will be unset (set to -1).\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged<\/code> event is fired.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function"},"moveSelectionInterval":{"!description":"Moves all selected indices starting at the position <code>iStartIndex<\/code> <code>iMove<\/code>\nitems.\n\nThis can be used if new items are inserted to the item set and you want to keep the selection.\nTo handle a deletion of items use <code>sliceSelectionInterval<\/code>.\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged<\/code> event is fired.","!type":"fn(iStartIndex: Number, iMove: Number) -> sap.ui.model.SelectionModel","!category":"function"},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.SelectionModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.SelectionModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.SelectionModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(iSelectionMode: Number)","prototype":"sap.ui.model.SelectionModel"},"sap.ui.core.message.Message":{"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.Message.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.search.SearchProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.search.SearchProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.search.SearchProvider"},"sap.ui.core.ws":{"SUPPORTED_PROTOCOLS":"sap.ui.core.ws.SapPcpWebSocket.SUPPORTED_PROTOCOLS","!category":"namespace","WebSocket":"sap.ui.core.ws.WebSocket_obj","SapPcpWebSocket":"sap.ui.core.ws.SapPcpWebSocket_obj","ReadyState":"sap.ui.core.ws.ReadyState"},"sap.ui.core.TextAlign":{"Right":{"!description":"Hard option for right alignment.","!type":"String","!category":"enum"},"End":{"!description":"Locale-specific positioning at the end of the line.","!type":"String","!category":"enum"},"!description":"Configuration options for text alignments.","!category":"static class","Center":{"!description":"Centered text alignment.","!type":"String","!category":"enum"},"Initial":{"!description":"Sets no text align, so the browser default is used.","!type":"String","!category":"enum"},"Begin":{"!description":"Locale-specific positioning at the beginning of the line.","!type":"String","!category":"enum"},"Left":{"!description":"Hard option for left alignment.","!type":"String","!category":"enum"}},"sap.ui.core.Element":{"removeDependent":{"!description":"Removes a dependent from the aggregation named <code>dependents<\/code>.","!type":"fn(vDependent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"destroyDependents":{"!description":"Destroys all the dependents in the aggregation\nnamed <code>dependents<\/code>.","!type":"fn() -> sap.ui.core.Element","!category":"function"},"unbindElement":{"!description":"Removes the defined binding context of this object, all bindings will now resolve\nrelative to the parent context again.","!type":"fn(sModelName: String) -> sap.ui.base.ManagedObject","!category":"function"},"indexOfDependent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>dependents<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oDependent: sap.ui.core.Control) -> Number","!category":"function"},"bindElement":{"!description":"Bind the object to the referenced entity in the model, which is used as the binding context\nto resolve bound properties or aggregations of the object itself and all of its children\nrelatively to the given path.\nIf a relative binding path is used, this will be applied whenever the parent context changes.","!type":"fn(vPath: String | Object, mParameters?: Object) -> sap.ui.base.ManagedObject","!category":"function"},"getCustomData":{"!description":"Gets content of aggregation <code>customData<\/code>.\n\nCustom Data, a data structure like a map containing arbitrary key value pairs.","!type":"fn() -> [sap.ui.core.CustomData]","!category":"function"},"getFocusInfo":{"!description":"Returns an object representing the serialized focus information\nTo be overwritten by the specific control method","!type":"fn() -> Object","!category":"function"},"insertDependent":{"!description":"Inserts a dependent into the aggregation named <code>dependents<\/code>.","!type":"fn(oDependent: sap.ui.core.Control, iIndex: Number) -> sap.ui.core.Element","!category":"function"},"addEventDelegate":{"!description":"Adds a delegate that listens to the events that are fired on this element (as opposed to events which are fired BY this element).\n\nWhen this element is cloned, the same delegate will be added to all clones. This behavior is well-suited for applications which want to add delegates\nthat also work with templates in aggregation bindings.\nFor control development the internal \"addDelegate\" method which does not clone delegates by default may be more suitable, as typically each control instance takes care of its own delegates.\n\nTo avoid double registrations, all registrations of the given delegate are first\nremoved and then the delegate is added.\n\n<strong>Important:<\/strong> If event delegates were added the delegate will still be called even if\nthe event was processed and/or cancelled via <code>preventDefault<\/code> by the Element or another event delegate.\n<code>preventDefault<\/code> only prevents the event from bubbling.\nIt should be checked e.g. in the event delegate's listener whether an Element is still enabled via <code>getEnabled<\/code>.\nAdditionally there might be other things that delegates need to check depending on the event\n(e.g. not adding a key twice to an output string etc.).","!type":"fn(oDelegate: Object, oThis?: Object) -> sap.ui.core.Element","!category":"function"},"setTooltip":{"!description":"Sets a new tooltip for this object. The tooltip can either be a simple string\n(which in most cases will be rendered as the <code>title<\/code> attribute of this\nElement) or an instance of {@link sap.ui.core.TooltipBase}.\n\nIf a new tooltip is set, any previously set tooltip is deactivated.","!type":"fn(vTooltip: String | sap.ui.core.TooltipBase)","!category":"function"},"focus":{"!description":"Sets the focus to the stored focus DOM reference","!type":"fn()","!category":"function"},"getLayoutData":{"!description":"Gets content of aggregation <code>layoutData<\/code>.\n\nDefines the layout constraints for this control when it is used inside a Layout.\nLayoutData classes are typed classes and must match the embedding Layout.\nSee VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","!type":"fn() -> sap.ui.core.LayoutData","!category":"function"},"insertCustomData":{"!description":"Inserts a customData into the aggregation named <code>customData<\/code>.","!type":"fn(oCustomData: sap.ui.core.CustomData, iIndex: Number) -> sap.ui.core.Element","!category":"function"},"clone":{"!description":"Clone delegates","!type":"fn(sIdSuffix?: String, aLocalIds?: [String]) -> sap.ui.base.ManagedObject","!category":"function"},"defineClass":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.1 Use the static <code>extend<\/code> method of the desired base class (e.g. {@link sap.ui.core.Element.extend})<br>Creates metadata for an UI Element by extending the Object Metadata.\n\nIn addition to the entries defined by {@link sap.ui.base.Object.defineClass}, the following\nentries can be specified in the static info object:\n\n<ul>\n<li>library: {string} name of the library that contains the element/control\n<li>properties: a map of property info objects, mapped by the property name\n    Info object should contain the following information\n    <ul>\n    <li>name {string} name of the property (redundant to map key)\n    <li>type {string} type of the property\n    <li>[defaultValue] {any} default value of the property. Can be omitted\n    <\/ul>\n<li>aggregations: a map of aggregation info objects, mapped by the aggregation name\n    Info object should contain the following information\n    <ul>\n    <li>name {string} name of the aggregation, singular for 0..1, plural for 0..n\n    <li>type {string} type of the aggregated controls/elements\n    <li>multiple {boolean}\n    <li>singularName {string} singular name for 0..n aggregations\n    <\/ul>\n<li>associations: a map of association info objects, mapped by the association name\n    Info object should contain the following information\n    <ul>\n    <li>name {string} name of the association, singular for 0..1, plural for 0..n\n    <li>type {string} type of the associated controls/elements\n    <li>multiple {boolean}\n    <li>singularName {string} singular name for 0..n associations\n    <\/ul>\n<li>events: map from event names to event names\n<\/ul>","!type":"fn(sClassName: String, oStaticInfo: Object, fnMetaImpl?: fn()) -> Object","!category":"function"},"destroyTooltip":{"!description":"Destroys the tooltip in the aggregation\nnamed <code>tooltip<\/code>.","!type":"fn() -> sap.ui.core.Element","!category":"function"},"$":{"!description":"Returns the best suitable DOM node that represents this Element wrapped as jQuery object.\nI.e. the element returned by {@link sap.ui.core.Element#getDomRef} is wrapped and returned.\n\nIf an ID suffix is given, the ID of this Element is concatenated with the suffix\n(separated by a single dash) and the DOM node with that compound ID will be wrapped by jQuery.\nThis matches the UI5 naming convention for named inner DOM nodes of a control.","!type":"fn(sSuffix?: String) -> jQuery","!category":"function"},"init":{"!description":"Initializes the element instance after creation.\n\nApplications must not call this hook method directly, it is called by the framework\nwhile the constructor of an element is executed.\n\nSubclasses of Element should override this hook to implement any necessary initialization.","!type":"fn()","!category":"function"},"rerender":{"!description":"This triggers immediate rerendering of its parent and thus of itself and its children.<br/> As <code>sap.ui.core.Element<\/code> \"bubbles up\" the\nrerender, changes to child-<code>Elements<\/code> will also result in immediate rerendering of the whole sub tree.","!type":"fn()","!category":"function"},"fireEvent":{"!description":"Fires the given event and notifies all listeners. Listeners must not change\nthe content of the event.","!type":"fn(sEventId: String, mParameters: Object) -> sap.ui.core.Element","!category":"function"},"create":{"!description":"Creates a new Element from the given data.\n\nIf vData is an Element already, that element is returned.\nIf vData is an object (literal), then a new element is created with vData as settings.\nThe type of the element is either determined by a \"Type\" entry in the vData or\nby a type information in the oKeyInfo object","!type":"fn(vData: sap.ui.core.Element | Object, oKeyInfo?: Object)","!category":"function"},"exit":{"!description":"Cleans up the element instance before destruction.\n\nApplications must not call this hook method directly, it is called by the framework\nwhen the element is {@link #destroy destroyed}.\n\nSubclasses of Element should override this hook to implement any necessary cleanup.","!type":"fn()","!category":"function"},"getFocusDomRef":{"!description":"Returns the DOM Element that should get the focus.\n\nTo be overwritten by the specific control method.","!type":"fn() -> Element","!category":"function"},"toString":{"!description":"Returns a simple string representation of this element.\n\nMainly useful for tracing purposes.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function"},"destroyLayoutData":{"!description":"Destroys the layoutData in the aggregation\nnamed <code>layoutData<\/code>.","!type":"fn() -> sap.ui.core.Element","!category":"function"},"!proto":"sap.ui.base.ManagedObject","indexOfCustomData":{"!description":"Checks for the provided <code>sap.ui.core.CustomData<\/code> in the aggregation named <code>customData<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oCustomData: sap.ui.core.CustomData) -> Number","!category":"function"},"addDependent":{"!description":"Adds some dependent into the aggregation named <code>dependents<\/code>.","!type":"fn(oDependent: sap.ui.core.Control) -> sap.ui.core.Element","!category":"function"},"data":{"!description":"Attaches custom data to an Element or retrieves attached data.\n\nUsage:\n   data(\"myKey\", myData)\nattaches myData (which can be any JS data type, e.g. a number, a string, an object, or a function) to this element, under the given key \"myKey\". If the key already exists,the value will be updated.\n\n   data(\"myKey\", myData, writeToDom)\nattaches myData to this element, under the given key \"myKey\" and (if writeToDom is true) writes key and value to the HTML. If the key already exists,the value will be updated. While oValue can be any JS data type to be attached, it must be a string to be also written to DOM. The key must also be a valid HTML attribute name (it must conform to sap.ui.core.ID and may contain no colon) and may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\n\n   data(\"myKey\")\nretrieves whatever data has been attached to this Element (using the key \"myKey\") before\n\n   data(\"myKey\", null)\nremoves whatever data has been attached to this Element (using the key \"myKey\") before\n\n   data(null)\nremoves all data\n\n   data()\nreturns all data, as a map","!type":"fn()","!category":"function"},"setLayoutData":{"!description":"Sets the {@link sap.ui.core.LayoutData} defining the layout constraints\nfor this control when it is used inside a layout.","!type":"fn(oLayoutData: sap.ui.core.LayoutData)","!category":"function"},"enhanceAccessibilityState":{"!description":"Allows the parent of a control to enhance the aria information during rendering\n\nThis function is called by the RenderManager's writeAccessibilityState method\nfor the parent of the currently rendered control - if the parent implements it.","!type":"fn(oElement: sap.ui.core.Element, mAriaProps: Object) -> Object","!category":"function"},"destroy":{"!description":"Cleans up the resources associated with this element and all its children.\n\nAfter an element has been destroyed, it can no longer be used in the UI!\n\nApplications should call this method if they don't need the element any longer.","!type":"fn(bSuppressInvalidate?: Boolean)","!category":"function"},"removeCustomData":{"!description":"Removes a customData from the aggregation named <code>customData<\/code>.","!type":"fn(vCustomData: Number | String | sap.ui.core.CustomData) -> sap.ui.core.CustomData","!category":"function"},"!category":"class","addCustomData":{"!description":"Adds some customData into the aggregation named <code>customData<\/code>.","!type":"fn(oCustomData: sap.ui.core.CustomData) -> sap.ui.core.Element","!category":"function"},"getDomRef":{"!description":"Returns the best suitable DOM Element that represents this UI5 Element.\nBy default the DOM Element with the same ID as this Element is returned.\nSubclasses should override this method if the lookup via id is not sufficient.\n\nNote that such a DOM Element does not necessarily exist in all cases.\nSome elements or controls might not have a DOM representation at all (e.g.\na naive FlowLayout) while others might not have one due to their current\nstate (e.g. an initial, not yet rendered control).\n\nIf an ID suffix is given, the ID of this Element is concatenated with the suffix\n(separated by a single dash) and the DOM node with that compound ID will be returned.\nThis matches the UI5 naming convention for named inner DOM nodes of a control.","!type":"fn(sSuffix?: String) -> Element","!category":"function"},"removeAllDependents":{"!description":"Removes all the controls in the aggregation named <code>dependents<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeEventDelegate":{"!description":"Removes the given delegate from this element.\n\nThis method will remove all registrations of the given delegate, not only one.","!type":"fn(oDelegate: Object) -> sap.ui.core.Element","!category":"function"},"prop":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 The contract of this method is not fully defined and its write capabilities overlap with applySettings<br>This function either calls set[sPropertyName] or get[sPropertyName] with the specified property name\ndepending if an <code>oValue<\/code> is provided or not.","!type":"fn(sPropertyName: String, oValue?: Object) -> Object | sap.ui.core.Element","!category":"function"},"getTooltip":{"!description":"Returns the tooltip for this element if any or an undefined value.\nThe tooltip can either be a simple string or a subclass of\n{@link sap.ui.core.TooltipBase}.\n\nCallers that are only interested in tooltips of type string (e.g. to render\nthem as a <code>title<\/code> attribute), should call the convenience method\n{@link #getTooltip_AsString} instead. If they want to get a tooltip text no\nmatter where it comes from (be it a string tooltip or the text from a TooltipBase\ninstance) then they could call {@link #getTooltip_Text} instead.","!type":"fn() -> String | sap.ui.core.TooltipBase","!category":"function"},"removeAllCustomData":{"!description":"Removes all the controls in the aggregation named <code>customData<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.CustomData]","!category":"function"},"!description":"Base Class for Elements.","getTooltip_AsString":{"!description":"Returns the tooltip for this element but only if it is a simple string.\nOtherwise an undefined value is returned.","!type":"fn() -> String","!category":"function"},"getTooltip_Text":{"!description":"Returns the main text for the current tooltip or undefined if there is no such text.\nIf the tooltip is an object derived from sap.ui.core.Tooltip, then the text property\nof that object is returned. Otherwise the object itself is returned (either a string\nor undefined or null).","!type":"fn() -> String","!category":"function"},"destroyCustomData":{"!description":"Destroys all the customData in the aggregation\nnamed <code>customData<\/code>.","!type":"fn() -> sap.ui.core.Element","!category":"function"},"applyFocusInfo":{"!description":"Applies the focus info.\n\nTo be overwritten by the specific control method.","!type":"fn(oFocusInfo: Object)","!category":"function"},"findElements":{"!description":"Searches and returns an array of child elements and controls which are\nreferenced within an aggregation or aggregations of child elements/controls.\nThis can be either done recursive or not.\n<br>\n<b>Take care: this operation might be expensive.<\/b>","!type":"fn(bRecursive: Boolean) -> [sap.ui.core.Element]","!category":"function"},"getElementBinding":{"!description":"Get the element binding object for a specific model","!type":"fn(sModelName: String) -> sap.ui.model.Binding","!category":"function"},"getDependents":{"!description":"Gets content of aggregation <code>dependents<\/code>.\n\nDependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getInterface":{"!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Element.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.IconColor":{"Default":{"!description":"Default color (brand color)","!type":"String","!category":"enum"},"!description":"Semantic Colors of an icon.","Neutral":{"!description":"Neutral color.","!type":"String","!category":"enum"},"!category":"static class","Critical":{"!description":"Critical color","!type":"String","!category":"enum"},"Positive":{"!description":"Positive color","!type":"String","!category":"enum"},"Negative":{"!description":"Negative color","!type":"String","!category":"enum"}},"jQuery":{"rectContains":{"!description":"Returns whether a point described by X and Y is inside this Rectangle's boundaries","!type":"fn(iPosX: Number, iPosY: Number) -> Boolean","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes the given ID reference from the aria-labelledby attribute.","!type":"fn(sID: String) -> jQuery","!category":"function"},"root":{"!type":"fn(oRootControl: Object)","!category":"function"},"lastFocusableDomRef":{"!description":"Returns the last focusable domRef in a given container","!type":"fn() -> Element","!category":"function"},"outerHTML":{"!description":"Returns the outer HTML of the given HTML element","!type":"fn() -> String","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes the given ID reference from the aria-describedby attribute.","!type":"fn(sID: String) -> jQuery","!category":"function"},"selectText":{"!description":"Sets the text selection in the first element of the collection.\nnote: This feature is only supported for input element\u2019s type of text, search, url, tel and password.","!type":"fn(iStart: Number, iEnd: Number) -> jQuery","!category":"function"},"addAriaDescribedBy":{"!description":"Adds the given ID reference to the aria-describedby attribute.","!type":"fn(sID: String) -> jQuery","!category":"function"},"!category":"namespace","disableSelection":{"!description":"Disable HTML elements selection.","!type":"fn() -> jQuery","!category":"function"},"scrollRightRTL":{"!description":"Returns the MIRRORED scrollLeft value of the first element in the given jQuery collection in right-to-left mode.\nPrecondition: The element is rendered in RTL mode.\n\nReason for this method is that the major browsers return three different values for the same scroll position when in RTL mode.\nThis method hides those differences and returns the value that would be returned in LTR mode if the UI would be mirrored horizontally:\nThe distance in px how far the given container is scrolled away from the rightmost scroll position.\n\nReturns \"undefined\" if no element is given.","!type":"fn() -> Number","!category":"function"},"enableSelection":{"!description":"Enable HTML elements to get selected.","!type":"fn() -> jQuery","!category":"function"},"control":{"!description":"Extension function to the jQuery.fn which identifies SAPUI5 controls in the given jQuery context.","!type":"fn(idx?: Number) -> [sap.ui.core.Control]","!category":"function"},"os":"jQuery.os","support":"jQuery.support","getSelectedText":{"!description":"Retrieve the selected text in the first element of the collection.\nnote: This feature is only supported for input element\u2019s type of text, search, url, tel and password.","!type":"fn() -> String","!category":"function"},"cursorPos":{"!description":"Sets or gets the position of the cursor in an element that supports cursor positioning","!type":"fn(iPos: Number) -> Number | jQuery","!category":"function"},"Event":"jQuery.Event_obj","rect":{"!description":"Returns a rectangle describing the current visual positioning of the first DOM object in the collection\n(or null if no element was given)","!type":"fn() -> Object","!category":"function"},"hasTabIndex":{"!description":"Returns true if the first element has a set tabindex","!type":"fn() -> Boolean","!category":"function"},"sap":"jQuery.sap","scrollLeftRTL":{"!description":"Sets or returns the scrollLeft value of the first element in the given jQuery collection in right-to-left mode.\nPrecondition: The element is rendered in RTL mode.\n\nReason for this method is that the major browsers use three different values for the same scroll position when in RTL mode.\nThis method hides those differences and returns/applies the same value that would be returned in LTR mode: The distance in px\nhow far the given container is scrolled away from the leftmost scroll position.\n\nReturns \"undefined\" if no element and no iPos is given.","!type":"fn(iPos: Number) -> jQuery | Number","!category":"function"},"addAriaLabelledBy":{"!description":"Adds the given ID reference to the the aria-labelledby attribute.","!type":"fn(sID: String) -> jQuery","!category":"function"},"!description":"Provides base functionality of the SAP jQuery plugin as extension of the jQuery framework.<br/>\nSee also <a href=\"http://api.jquery.com/jQuery/\">jQuery<\/a> for details.<br/>\nAlthough these functions appear as static ones, they are meant to be used on jQuery instances.<br/>\nIf not stated differently, the functions follow the fluent interface paradigm and return the jQuery instance for chaining of statements.\n\nExample for usage of an instance method:\n<pre>\n  var oRect = jQuery(\"#myDiv\").rect();\n  alert(\"Top Position: \" + oRect.top);\n<\/pre>","device":"jQuery.device","parentByAttribute":{"!description":"Gets the next parent DOM element with a given attribute and attribute value starting above the first given element","!type":"fn(sAttribute: String, sValue: String) -> Element","!category":"function"},"jQuery":"jQuery","uiarea":{"!type":"fn(iIdx: Number)","!category":"function"},"firstFocusableDomRef":{"!description":"Returns the first focusable domRef in a given container (the first element of the collection)","!type":"fn() -> Element","!category":"function"}},"sap.ui.model.odata.type.Int16_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int16 with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Int16"},"jQuery.sap.storage":{"Storage":"jQuery.sap.storage.Storage","clear":{"!description":"Deletes all the entries saved in the session (Independent of the current Storage instance!).\n\nCAUTION: This method should be called only in very particular situations,\nwhen a global erasing of data is required. Given that the method deletes\nthe data saved under any ID, it should not be called when managing data\nfor specific controls.","!type":"fn() -> Boolean","!category":"function"},"isSupported":{"!description":"Returns whether the given storage is suppported.","!type":"fn() -> Boolean","!category":"function"},"getType":{"!description":"Returns the type of the storage.","!type":"fn() -> jQuery.sap.storage.Type | String","!category":"function"},"put":{"!description":"Stores the passed state string in the session, under the key\nsStorageKeyPrefix + sId.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)","!type":"fn(sId: String, sStateToStore: String) -> Boolean","!category":"function"},"!description":"Returns a {@link jQuery.sap.storage.Storage Storage} object for a given HTML5 storage (type) and,\nas a convenience, provides static functions to access the default (session) storage.\n\nWhen called as a function, it returns an instance of {@link jQuery.sap.storage.Storage}, providing access \nto the storage of the given {@link jQuery.sap.storage.Type} or to the given HTML5 Storage object.\n\nThe default session storage can be easily accessed with methods {@link jQuery.sap.storage.get}, \n{@link jQuery.sap.storage.put}, {@link jQuery.sap.storage.remove}, {@link jQuery.sap.storage.clear},\n{@link jQuery.sap.storage.getType} and {@link jQuery.sap.storage.removeAll}","remove":{"!description":"Deletes the state string stored in the session under the key\nsStorageKeyPrefix + sId.s\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)","!type":"fn(sId: String, sId: String) -> Boolean","!category":"function"},"get":{"!description":"Retrieves the state string stored in the session under the key\nsStorageKeyPrefix + sId.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)","!type":"fn(sId: String) -> String","!category":"function"},"Type":"jQuery.sap.storage.Type","!category":"namespace","removeAll":{"!description":"Deletes all state strings stored in the session under the key prefix \nsStorageKeyPrefix + sIdPrefix.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)","!type":"fn(sIdPrefix: String) -> Boolean","!category":"function"}},"sap.ui.model.analytics.odata4analytics.ParameterizationRequest_obj":{"!type":"fn(oParameterization: sap.ui.model.analytics.odata4analytics.Parameterization)","prototype":"sap.ui.model.analytics.odata4analytics.ParameterizationRequest"},"sap.ui.core.mvc":{"ViewType":"sap.ui.core.mvc.ViewType","asyncSupport":{"!description":"Flag for feature detection of asynchronous loading/rendering","!type":"String","!category":"enum"},"displayBlock":{"!description":"Whether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).","!type":"Boolean","!category":"enum"},"JSONView":"sap.ui.core.mvc.JSONView_obj","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!type":"Boolean","!category":"enum"},"TemplateView":"sap.ui.core.mvc.TemplateView_obj","width":{"!description":"The width","!type":"sap.ui.core.CSSSize","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"JSView":"sap.ui.core.mvc.JSView_obj","HTMLView":"sap.ui.core.mvc.HTMLView_obj","XMLView":"sap.ui.core.mvc.XMLView_obj","View":"sap.ui.core.mvc.View_obj","viewName":{"!description":"Name of the View","!type":"String","!category":"enum"},"height":{"!description":"The height","!type":"sap.ui.core.CSSSize","!category":"enum"},"Controller":"sap.ui.core.mvc.Controller_obj","Preprocessor":"sap.ui.core.mvc.View.Preprocessor","!category":"namespace","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!type":"[String]","!category":"enum"}},"sap.ui.core.Popup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Popup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oContent: sap.ui.core.Control | sap.ui.core.Element | DOMNode, bModal?: Boolean, bShadow?: Boolean, bAutoClose?: Boolean)","prototype":"sap.ui.core.Popup"},"sap.ui.model.odata.ODataAnnotations_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataAnnotations with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(aAnnotationURI: [String | String], oMetadata: sap.ui.model.odata.ODataMetadata, mParams: Object)","prototype":"sap.ui.model.odata.ODataAnnotations"},"sap.ui.core.IntervalTrigger":{"destroy":{"!description":"Destructor method for objects.","!type":"fn()","!category":"function"},"!description":"Provides a trigger that triggers in a set interval and calls all\n       registered listeners. If the interval is <= 0 the trigger is\n       switched off and won't trigger at all.","!category":"class","removeListener":{"!description":"Removes corresponding listener from list.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"addListener":{"!description":"Adds a listener to the list that should be triggered.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"getInterface":{"!type":"fn()","!category":"function"},"setInterval":{"!description":"Sets the trigger interval. If the value is >0 triggering will start if\nthere are any registered listeners. If the interval is set to <=0\ntriggering will stop.","!type":"fn(iInterval: Number)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.IntervalTrigger.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.AnalyticalTreeBindingAdapter_obj":{"!type":"fn()","prototype":"sap.ui.model.analytics.AnalyticalTreeBindingAdapter"},"sap.ui.model.Model_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Model with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageProcessor.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.model.Model"},"sap.ui.model.odata.ODataPropertyBinding":{"getValue":{"!description":"Returns the current value of the bound target","!type":"fn() -> Object","!category":"function"},"!description":"Property binding implementation for oData format","!category":"class","initialize":{"!description":"Initialize the binding. The message should be called when creating a binding.\nIf metadata is not yet available, do nothing, method will be called again when\nmetadata is loaded.","!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataPropertyBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.PropertyBinding"},"sap.ui.core.Message_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Message with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Message"},"sap.ui.test.matchers.Ancestor":{"!description":"Ancestor - checks if a control has a defined ancestor","!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.core.ScrollBarAction":{"Step":{"!description":"Single step scrolling caused by clicking an arrow button or arrow key.","!type":"String","!category":"enum"},"MouseWheel":{"!description":"Scrolling done by mouse wheel","!type":"String","!category":"enum"},"!description":"Actions are: Click on track, button, drag of thumb, or mouse wheel click","Page":{"!description":"Range scrolling caused by clicking track area or using page up or page down key.","!type":"String","!category":"enum"},"!category":"static class","Drag":{"!description":"Scrolling done by dragging the scroll bar's paint thumb","!type":"String","!category":"enum"}},"sap.ui.app.Application":{"onError":{"!description":"On error hook. Override this method in your Application class implementation to listen to unhandled errors.","!type":"fn(sMessage: String, sFile: String, iLine: Number)","!category":"function"},"setRoot":{"!description":"Sets a new value for property <code>root<\/code>.\n\n\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sRoot: String) -> sap.ui.app.Application","!category":"function"},"setRootComponent":{"!description":"Sets the aggregated <code>rootComponent<\/code>.","!type":"fn(oRootComponent: sap.ui.core.UIComponent) -> sap.ui.app.Application","!category":"function"},"setConfig":{"!description":"Sets the configuration model.","!type":"fn(vConfig: String | Object | sap.ui.model.Model)","!category":"function"},"getView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>Returns the application root component.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"destroyRootComponent":{"!description":"Destroys the rootComponent in the aggregation\nnamed <code>rootComponent<\/code>.","!type":"fn() -> sap.ui.app.Application","!category":"function"},"main":{"!description":"The main method is called when the DOM and UI5 is completely loaded. Override this method in your Application class implementation to execute code which relies on a loaded DOM / UI5.","!type":"fn()","!category":"function"},"destroy":{"!type":"fn()","!category":"function"},"getConfig":{"!description":"Gets current value of property <code>config<\/code>.","!type":"fn() -> Object","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The Component class is enhanced to take care about the Application code.<br>Base class for application classes","onExit":{"!description":"On exit application hook. Override this method in your Application class implementation, to handle cleanup of the application.","!type":"fn()","!category":"function"},"!category":"class","getRoot":{"!description":"Gets current value of property <code>root<\/code>.","!type":"fn() -> String","!category":"function"},"getRootComponent":{"!description":"Gets content of aggregation <code>rootComponent<\/code>.","!type":"fn() -> sap.ui.core.UIComponent","!category":"function"},"createRootComponent":{"!description":"Creates and returns the root component. Override this method in your application implementation, if you want to override the default creation by metadata.","!type":"fn() -> sap.ui.core.UIComponent","!category":"function"},"onBeforeExit":{"!description":"On before exit application hook. Override this method in your Application class implementation, to handle cleanup before the real exit or to prompt a question to the user,\nif the application should be exited.","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.core.Component","getMetadata":{"!description":"Returns a metadata object for class sap.ui.app.Application.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.tmpl.TemplateControl_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.TemplateControl with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.TemplateControl"},"sap.ui.core.util.ExportRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportRow"},"sap.ui.core.util.serializer.delegate":{"HTML":"sap.ui.core.util.serializer.delegate.HTML_obj","Delegate":"sap.ui.core.util.serializer.delegate.Delegate_obj","!category":"namespace","XML":"sap.ui.core.util.serializer.delegate.XML_obj"},"sap.ui.base.Event":{"getParameters":{"!description":"Returns all parameter values of the event keyed by their names.","!type":"fn() -> map","!category":"function"},"!description":"An Event object consisting of an id, a source and a map of parameters","getParameter":{"!description":"Returns the value of the parameter with the given sName.","!type":"fn(sName: String) -> Object","!category":"function"},"cancelBubble":{"!description":"Cancel bubbling of the event.\n\n<b>Note:<\/b> This function only has an effect if the bubbling of the event is supported by the event source.","!type":"fn()","!category":"function"},"!category":"class","preventDefault":{"!description":"Prevent the default action of this event.\n\n<b>Note:<\/b> This function only has an effect if preventing the default action of the event is supported by the event source.","!type":"fn()","!category":"function"},"getSource":{"!description":"Returns the event provider on which the event was fired.","!type":"fn() -> sap.ui.base.EventProvider","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.base.Event.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getId":{"!description":"Returns the id of the event.","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.base.Object"},"jQuery.sap":{"uid":{"!description":"Creates and returns a pseudo-unique id.\n\nNo means for detection of overlap with already present or future UIDs.","!type":"fn() -> String","!category":"function"},"includeScript":{"!description":"Includes the script (via &lt;script&gt;-tag) into the head for the\nspecified <code>sUrl<\/code> and optional <code>sId<\/code>.\n<br>\n<i>In case of IE8 only the load callback will work ignoring in case of success and error.<\/i>","!type":"fn(sUrl: String, sId: String, fnLoadCallback?: fn(), fnErrorCallback?: fn())","!category":"function"},"resources":{"!description":"Creates and returns a new instance of {@link jQuery.sap.util.ResourceBundle}\nusing the given URL and locale to determine what to load.","!type":"fn(mParams?: Object) -> jQuery.sap.util.ResourceBundle | Promise","!category":"function"},"bindAnyEvent":{"!description":"Binds all events for listening with the given callback function.","!type":"fn(fnCallback: fn())","!category":"function"},"denormalizeScrollLeftRTL":{"!description":"For the given scrollLeft value this method returns the scrollLeft value as understood by the current browser in RTL mode.\nThis value is specific to the given DOM element, as the computation may involve its dimensions.\n\nSo when oDomRef should be scrolled 2px from the leftmost position, the number \"2\" must be given as iNormalizedScrollLeft\nand the result of this method (which may be a large or even negative number, depending on the browser) can then be set as\noDomRef.scrollLeft to achieve the desired (cross-browser-consistent) scrolling position.\n\nThis method does no scrolling on its own, it only calculates the value to set (so it can also be used for animations).","!type":"fn(iNormalizedScrollLeft: Number, oDomRef: Element) -> Number","!category":"function"},"ControlEvents":{"!description":"List of DOM events that a UIArea automatically takes care of.\n\nA control/element doesn't have to bind listeners for these events.\nIt instead can implement an <code>on<i>event<\/i>(oEvent)<\/code> method\nfor any of the following events that it wants to be notified about:\n\nclick, dblclick, contextmenu, focusin, focusout, keydown, keypress, keyup, mousedown, mouseout, mouseover, \nmouseup, select, selectstart, dragstart, dragenter, dragover, dragleave, dragend, drop, paste, cut, input\n\nIn case touch events are natively supported the following events are available in addition:\ntouchstart, touchend, touchmove, touchcancel","!type":"String","!category":"enum"},"getter":{"!description":"Returns a new function that returns the given <code>oValue<\/code> (using its closure).\n\nAvoids the need for a dedicated member for the value.\n\nAs closures don't come for free, this function should only be used when polluting\nthe enclosing object is an absolute \"must-not\" (as it is the case in public base classes).","!type":"fn(oValue: Object)","!category":"function"},"encodeHTML":{"!description":"Encode the string for inclusion into HTML content/attribute","!type":"fn(sString: String) -> String","!category":"function"},"getUriParameters":{"!description":"Creates and returns a new instance of {@link jQuery.sap.util.UriParameters}.\n\nExample for reading a single URI parameter (or the value of the first\noccurrence of the URI parameter):\n<pre>\n\tvar sValue = jQuery.sap.getUriParameters().get(\"myUriParam\");\n<\/pre>\n\nExample for reading the values of the first of the URI parameter\n(with multiple occurrences):\n<pre>\n\tvar aValues = jQuery.sap.getUriParameters().get(\"myUriParam\", true);\n\tfor(i in aValues){\n\tvar sValue = aValues[i];\n\t}\n<\/pre>","!type":"fn(sUri: String) -> jQuery.sap.util.UriParameters","!category":"function"},"encodeURL":{"!description":"Encode the string for inclusion into an URL parameter","!type":"fn(sString: String) -> String","!category":"function"},"getResourcePath":{"!description":"Determines the URL for a resource given its unified resource name.\n\nSearches the longest prefix of the given resource name for which a registration\nexists (see {@link jQuery.sap.registerResourcePath}) and replaces that prefix\nby the registered URL prefix.\n\nThe remainder of the resource name is appended to the URL.\n\n<b>Unified Resource Names<\/b>\nSeveral UI5 APIs use <i>Unified Resource Names (URNs)<\/i> as naming scheme for resources that\nthey deal with (e.h. Javascript, CSS, JSON, XML, ...). URNs are similar to the path\ncomponent of an URL:\n<ul>\n<li>they consist of a non-empty sequence of name segments<\/li>\n<li>segments are separated by a forward slash '/'<\/li>\n<li>name segments consist of URL path segment characters only. It is recommened to use only ASCII\nletters (upper or lower case), digits and the special characters '$', '_', '-', '.')<\/li>\n<li>the empty name segment is not supported<\/li>\n<li>names consisting of dots only, are reserved and must not be used for resources<\/li>\n<li>names are case sensitive although the underlying server might be case-insensitive<\/li>\n<li>the behavior with regard to URL encoded characters is not specified, %ddd notation should be avoided<\/li>\n<li>the meaning of a leading slash is undefined, but might be defined in future. It therefore should be avoided<\/li>\n<\/ul>\n\nUI5 APIs that only deal with Javascript resources, use a slight variation of this scheme,\nwhere the extension '.js' is always omitted (see {@link sap.ui.define}, {@link sap.ui.require}).\n\n\n<b>Relationship to old Module Name Syntax<\/b>\n\nOlder UI5 APIs that deal with resources (like {@link jQuery.sap.registerModulePath},\n{@link jQuery.sap.require} and {@link jQuery.sap.declare}) used a dot-separated naming scheme\n(called 'module names') which was motivated by object names in the global namespace in\nJavascript.\n\nThe new URN scheme better matches the names of the corresponding resources (files) as stored\nin a server and the dot ('.') is no longer a forbidden character in a resource name. This finally\nallows to handle resources with different types (extensions) with the same API, not only JS files.\n\nLast but not least does the URN scheme better match the naming conventions used by AMD loaders\n(like <code>requireJS<\/code>).","!type":"fn(sResourceName: String) -> String","!category":"function"},"syncGetJSON":{"!description":"Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method GET and the data type 'json'.\nIf a fallback value is given, the function simply returns the response as an object or - if some error occurred -\nthe fallback value. This is useful for applications that don't require detailed error diagnostics.\n\nIf applications need to know about occurring errors, they can either call <code>sjax()<\/code> directly\nor they can omit the fallback value (providing only two parameters to syncGetJSON()).\nThey then receive the same complex result object as for the sjax() call.\n\nNote that providing \"undefined\" or \"null\" as a fallback is different from omitting the fallback (complex result).","!type":"fn(sUrl: String, data: String | Object, fallback?: Object)","!category":"function"},"ownerWindow":{"!description":"Returns the window reference for a DomRef","!type":"fn(oDomRef: Element) -> Window","!category":"function"},"syncGetText":{"!description":"Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method GET and the data type 'text'.\nIf a fallback value is given, the function simply returns the response as a text or - if some error occurred -\nthe fallback value. This is useful for applications that don't require detailed error diagnostics.\n\nIf applications need to know about occurring errors, they can either call <code>sjax()<\/code> directly\nor they can omit the fallback value (providing only two parameters to syncGetText()).\nThey then receive the same complex result object as for the sjax() call.","!type":"fn(sUrl: String, data: String | Object, fallback?: String)","!category":"function"},"byId":{"!description":"Shortcut for jQuery(\"#\" + id) with additionally the id being escaped properly.\nI.e.: returns the jQuery object for the DOM element with the given id\n\nUse this method instead of jQuery(...) if you know the argument is exactly one id and\nthe id is not known in advance because it is in a variable (as opposed to a string\nconstant with known content).","!type":"fn(sId: String, oContext: Element) -> Object","!category":"function"},"encodeURLParameters":{"!description":"Encode a map of parameters into a combined URL parameter string","!type":"fn(mParams: Object) -> String","!category":"function"},"unbindAnyEvent":{"!description":"Unbinds all events for listening with the given callback function.","!type":"fn(fnCallback: fn())","!category":"function"},"startsWithIgnoreCase":{"!description":"Checks whether a given sString starts with sStartString\nignoring the case of the strings.","!type":"fn(sString: String, sStartString: String) -> Boolean","!category":"function"},"syncPost":{"!description":"Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method POST and defaults the\ndata type of the result to 'text'.","!type":"fn(sUrl: String, data: String | Object, sDataType?: String)","!category":"function"},"removeUrlWhitelist":{"!description":"Removes a whitelist entry for URL valiadtion","!type":"fn(iIndex: Number)","!category":"function"},"focus":{"!description":"Calls focus() on the given DOM element, but catches and ignores any errors that occur when doing so.\n(i.e. IE8 throws an error when the DOM element is invisible or disabled)","!type":"fn(oDomRef: Element) -> Boolean","!category":"function"},"Version":"jQuery.sap.Version_obj","getObject":{"!description":"Returns a JavaScript object which is identified by a sequence of names.\n\nA call to <code>getObject(\"a.b.C\")<\/code> has essentially the same effect\nas accessing <code>window.a.b.C<\/code> but with the difference that missing\nintermediate objects (a or b in the example above) don't lead to an exception.\n\nWhen the addressed object exists, it is simply returned. If it doesn't exists,\nthe behavior depends on the value of the second, optional parameter\n<code>iNoCreates<\/code> (assuming 'n' to be the number of names in the name sequence):\n<ul>\n<li>NaN: if iNoCreates is not a number and the addressed object doesn't exist,\n         then <code>getObject()<\/code> returns <code>undefined<\/code>.\n<li>0 &lt; iNoCreates &lt; n: any non-existing intermediate object is created, except\n         the <i>last<\/i> <code>iNoCreates<\/code> ones.\n<\/ul>\n\nExample:\n<pre>\n  getObject()            -- returns the context object (either param or window)\n  getObject(\"a.b.C\")     -- will only try to get a.b.C and return undefined if not found.\n  getObject(\"a.b.C\", 0)  -- will create a, b, and C in that order if they don't exists\n  getObject(\"a.b.c\", 1)  -- will create a and b, but not C.\n<\/pre>\n\nWhen a <code>oContext<\/code> is given, the search starts in that object.\nOtherwise it starts in the <code>window<\/code> object that this plugin\nhas been created in.\n\nNote: Although this method internally uses <code>object[\"key\"]<\/code> to address object\n      properties, it does not support all possible characters in a name.\n      Especially the dot ('.') is not supported in the individual name segments,\n      as it is always interpreted as a name separator.","!type":"fn(sName: String, iNoCreates?: Number, oContext?: Object)","!category":"function"},"parseXML":{"!description":"Parses the specified XML formatted string text using native parsing\nfunction of the browser and returns a valid XML document. If an error\noccurred during parsing a parse error object is returned as property (parseError) of the\nreturned XML document object. The parse error object has the following error\ninformation parameters: errorCode, url, reason, srcText, line, linepos, filepos","!type":"fn(sXMLText: String) -> Object","!category":"function"},"syncStyleClass":{"!description":"Search ancestors of the given source DOM element for the specified CSS class name.\nIf the class name is found, set it to the root DOM element of the target control.\nIf the class name is not found, it is also removed from the target DOM element.","!type":"fn(sStyleClass: String, vSource: jQuery | Control | String, vDestination: jQuery | Control) -> jQuery | Element","!category":"function"},"clearUrlWhitelist":{"!description":"clears the whitelist for URL valiadtion","!type":"fn()","!category":"function"},"endsWithIgnoreCase":{"!description":"Checks whether a given sString ends with sEndString\nignoring the case of the strings.","!type":"fn(sString: String, sEndString: String) -> Boolean","!category":"function"},"properties":{"!description":"Creates and returns a new instance of {@link jQuery.sap.util.Properties}.\n\nIf option 'url' is passed, immediately a load request for the given target is triggered.\nA property file that is loaded can contain comments with a leading ! or #.\nThe loaded property list does not contain any comments.\n\n<b>Example for loading a property file:<\/b>\n<pre>\n jQuery.sap.properties({url : \"../myProperty.properties\"});\n<\/pre>\n\n<b>Example for creating an empty properties instance:<\/b>\n<pre>\n jQuery.sap.properties();\n<\/pre>\n\n<b>Examples for getting and setting properties:<\/b>\n<pre>\n\tvar oProperties = jQuery.sap.properties();\n\toProperties.setProperty(\"KEY_1\",\"Test Key\");\n\tvar sValue1 = oProperties.getProperty(\"KEY_1\");\n\tvar sValue2 = oProperties.getProperty(\"KEY_2\",\"Default\");\n<\/pre>","!type":"fn(mParams?: Object) -> jQuery.sap.util.Properties | Promise","!category":"function"},"log":"jQuery.sap.log","declare":{"!description":"Declares a module as existing.\n\nBy default, this function assumes that the module will create a JavaScript object\nwith the same name as the module. As a convenience it ensures that the parent\nnamespace for that object exists (by calling jQuery.sap.getObject).\nIf such an object creation is not desired, <code>bCreateNamespace<\/code> must be set to false.","!type":"fn(sModuleName: String | Object, bCreateNamespace?: Boolean)","!category":"function"},"validateUrl":{"!description":"Validates an URL. Check if it's not a script or other security issue.","!type":"fn(sUrl: String)","!category":"function"},"now":{"!description":"Returns a high resolution timestamp for measurements.\nThe timestamp is based on 01/01/1970 00:00:00 as float with microsecond precision or\nwith millisecond precision, if high resolution timestamps are not available.\nThe fractional part of the timestamp represents microseconds.\nConverting to a <code>Date<\/code> is possible using <code>new Date(jQuery.sap.now())<\/code>","!type":"String","!category":"enum"},"containsOrEquals":{"!description":"Returns whether oDomRefChild is oDomRefContainer or is contained in oDomRefContainer.\n\nThis is a browser-independent version of the .contains method of Internet Explorer.\nFor compatibility reasons it returns true if oDomRefContainer and oDomRefChild are equal.\n\nThis method intentionally does not operate on the jQuery object, as the original jQuery.contains()\nmethod also does not do so.","!type":"fn(oDomRefContainer: Element, oDomRefChild: Element) -> Boolean","!category":"function"},"charToUpperCase":{"!description":"Converts a character of the string to upper case.<br/>\nIf no pos is defined as second parameter or pos is negative or greater than sString the first character will be\nconverted into upper case. the first char position is 0.","!type":"fn(sString: String, iPos: Number) -> String","!category":"function"},"require":{"!description":"Ensures that the given module is loaded and executed before execution of the\ncurrent script continues.\n\nBy issuing a call to this method, the caller declares a dependency to the listed modules.\n\nAny required and not yet loaded script will be loaded and execute synchronously.\nAlready loaded modules will be skipped.","!type":"fn(vModuleName: String | Object)","!category":"function"},"factory":{"!description":"Returns a new constructor function that creates objects with\nthe given prototype.","!type":"fn(oPrototype: Object) -> fn()","!category":"function"},"delayedCall":{"!description":"Calls a method after a given delay and returns an id for this timer","!type":"fn(iDelay: Number, oObject: Object, method: String | Object, aParameters?: Array) -> String","!category":"function"},"util":"jQuery.sap.util","encodeXML":{"!description":"Encode the string for inclusion into XML content/attribute","!type":"fn(sString: String) -> String","!category":"function"},"includeStyleSheet":{"!description":"Includes the specified stylesheet via a &lt;link&gt;-tag in the head of the current document. If there is call to\n<code>includeStylesheet<\/code> providing the sId of an already included stylesheet, the existing element will be\nreplaced.","!type":"fn(sUrl: String, sId: String, fnLoadCallback?: fn(), fnErrorCallback?: fn())","!category":"function"},"hyphen":{"!description":"Transforms a camel case string into a hyphen separated string.","!type":"fn(sString: String) -> String","!category":"function"},"unique":{"!description":"Sorts the given array in-place and removes any duplicates (identified by \"===\").\n\nUse <code>jQuery.unique()<\/code> for arrays of DOMElements.","!type":"fn(a: Array) -> Array","!category":"function"},"NavType":"jQuery.sap.history.NavType","measure":"jQuery.sap.measure","isDeclared":{"!description":"Check whether a given module has been loaded / declared already.\n\nReturns true as soon as a module has been required the first time, even when\nloading/executing it has not finished yet. So the main assertion of a\nreturn value of <code>true<\/code> is that the necessary actions have been taken\nto make the module available in the near future. It does not mean, that\nthe content of the module is already available!\n\nThis fuzzy behavior is necessary to avoid multiple requests for the same module.\nAs a consequence of the assertion above, a <i>preloaded<\/i> module does not\ncount as <i>declared<\/i>. For preloaded modules, an explicit call to\n<code>jQuery.sap.require<\/code> is necessary to make them available.\n\nIf a caller wants to know whether a module needs to be loaded from the server,\nit can set <code>bIncludePreloaded<\/code> to true. Then, preloaded modules will\nbe reported as 'declared' as well by this method.","!type":"fn(sModuleName: String, bIncludePreloaded?: Boolean) -> Boolean","!category":"function"},"checkMouseEnterOrLeave":{"!description":"Checks a given mouseover or mouseout event whether it is\nequivalent to a mouseenter or mousleave event regarding the given DOM reference.","!type":"fn(oEvent: jQuery.Event, oDomRef: element)","!category":"function"},"encodeCSS":{"!description":"Encode the string for inclusion into CSS string literals or identifiers","!type":"fn(sString: String) -> String","!category":"function"},"camelCase":{"!description":"Transforms a hyphen separated string to an camel case string.","!type":"fn(sString: String) -> String","!category":"function"},"escapeHTML":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Has been renamed, use {@link jQuery.sap.encodeHTML} instead.<br>Encode the string for inclusion into HTML content/attribute.\nOld name \"escapeHTML\" kept for backward compatibility","!type":"fn(sString: String) -> String","!category":"function"},"setMobileWebAppCapable":{"!description":"Sets the \"apple-mobile-web-app-capable\" and \"mobile-web-app-capable\" meta information which defines whether the application is loaded\nin full screen mode (browser address bar and toolbar are hidden) after the user does \"add to home screen\" on mobile devices. Currently\nthis meta tag is only supported by iOS Safari and mobile Chrome from version 31.\n\nIf the application opens new tabs because of attachments, url and so on, setting this to false will let the user be able to go from the\nnew tab back to the application tab after the application is added to home screen.\n\nNote: this function only has effect when the application runs on iOS Safari and mobile Chrome from version 31.","!type":"fn(bValue: Boolean)","!category":"function"},"padRight":{"!description":"Pads a string on the right side until is has the given length.<br/>","!type":"fn(sString: String, sPadChar: String, iLength: Number) -> String","!category":"function"},"setIcons":{"!description":"Sets the bookmark icon for desktop browsers and the icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\n\nOnly call this method once and call it early when the page is loading: browsers behave differently when the favicon is modified while the page is alive.\nSome update the displayed icon inside the browser but use an old icon for bookmarks.\nWhen a favicon is given, any other existing favicon in the document will be removed.\nWhen at least one home icon is given, all existing home icons will be removed and new home icon tags for all four resolutions will be created.\n\nThe home icons must be in PNG format and given in different sizes for iPad/iPhone with and without retina display.\nThe favicon is used in the browser and for desktop shortcuts and should optimally be in ICO format:\nPNG does not seem to be supported by Internet Explorer and ICO files can contain different image sizes for different usage locations. E.g. a 16x16px version\nis used inside browsers.\n\nAll icons are given in an an object holding icon URLs and other settings. The properties of this object are:\n<ul>\n<li>phone: a 57x57 pixel version for non-retina iPhones<\/li>\n<li>tablet: a 72x72 pixel version for non-retina iPads<\/li>\n<li>phone@2: a 114x114 pixel version for retina iPhones<\/li>\n<li>tablet@2: a 144x144 pixel version for retina iPads<\/li>\n<li>precomposed: whether the home icons already have some glare effect (otherwise iOS will add it) (default: false)<\/li>\n<li>favicon: the ICO file to be used inside the browser and for desktop shortcuts<\/li>\n<\/ul>\n\nOne example is:\n<pre>\n{\n   'phone':'phone-icon_57x57.png',\n   'phone@2':'phone-retina_117x117.png',\n   'tablet':'tablet-icon_72x72.png',\n   'tablet@2':'tablet-retina_144x144.png',\n   'precomposed':true,\n   'favicon':'desktop.ico'\n}\n<\/pre>\nIf one of the sizes is not given, the largest available alternative image will be used instead for this size.\nOn Android these icons may or may not be used by the device. Apparently chances can be improved by using icons with glare effect, so the \"precomposed\" property can be set to \"true\". Some Android devices may also use the favicon for bookmarks instead of the home icons.<\/li>","!type":"fn(oIcons: Object)","!category":"function"},"newObject":{"!description":"Returns a new object which has the given oPrototype as its prototype.\n\nIf several objects with the same prototype are to be created,\n{@link jQuery.sap.factory} should be used instead.","!type":"fn(oPrototype: Object) -> Object","!category":"function"},"domById":{"!description":"Shortcut for document.getElementById(), including a bug fix for older IE versions.","!type":"fn(sId: String, oWindow?: Window) -> Element","!category":"function"},"clearIntervalCall":{"!description":"Stops the interval call.\n\nThe function given when calling intervalCall is not called anymore.","!type":"fn(sIntervalCallId: String)","!category":"function"},"disableTouchToMouseHandling":{"!description":"Disable touch to mouse handling","!type":"fn()","!category":"function"},"setObject":{"!description":"Sets an object property to a given value, where the property is\nidentified by a sequence of names (path).\n\nWhen a <code>oContext<\/code> is given, the path starts in that object.\nOtherwise it starts in the <code>window<\/code> object that this plugin\nhas been created for.\n\nNote: Although this method internally uses <code>object[\"key\"]<\/code> to address object\n      properties, it does not support all possible characters in a name.\n      Especially the dot ('.') is not supported in the individual name segments,\n      as it is always interpreted as a name separator.","!type":"fn(sName: String, vValue: Object, oContext?: Object)","!category":"function"},"!category":"namespace","formatMessage":{"!description":"Creates a string from a pattern by replacing placeholders with concrete values.\n\nThe syntax of the pattern is inspired by (but not fully equivalent to) the \njava.util.MessageFormat.\n\nPlaceholders have the form <code>{ integer }<\/code>, where any occurrence of \n<code>{0}<\/code> is replaced by the value with index 0 in <code>aValues<\/code>,\n<code>{1}<\/code> y the value with index 1 in <code>aValues<\/code> etc.\n\nTo avoid interpretation of curly braces as placeholders, any non-placeholder fragment \nof the pattern can be enclosed in single quotes. The surrounding single quotes will be \nomitted from the result. Single quotes that are not meant to escape a fragment and \nthat should appear in the result, need to be doubled. In the result, only a single \nsingle quote will occur.\n\nExample Pattern Strings:\n<pre>\n  jQuery.sap.formatMessage(\"Say {0}\", [\"Hello\"]) -> \"Say Hello\"  // normal use case\n  jQuery.sap.formatMessage(\"Say '{0}'\", [\"Hello\"]) -> \"Say {0}\"  // escaped placeholder\n  jQuery.sap.formatMessage(\"Say ''{0}''\", [\"Hello\"]) -> \"Say 'Hello'\" // doubled single quote \n  jQuery.sap.formatMessage(\"Say '{0}'''\", [\"Hello\"]) -> \"Say {0}'\" // doubled single quote in quoted fragment\n<\/pre>\n\nIn contrast to java.util.MessageFormat, format types or format styles are not supported. \nEverything after the argument index and up to the first closing curly brace is ignored.\nNested placeholders (as supported by java.lang.MessageFormat for the format type choice)\nare not ignored but reported as a parse error. \n\nThis method throws an Error when the pattern syntax is not fulfilled (e.g. unbalanced curly \nbraces, nested placeholders or a non-numerical argument index).\n\nThis method can also be used as a formatter within a binding. The first part of a composite binding \nwill be used as pattern, the following parts as aValues. If there is only one value and this\nvalue is an array it will be handled like the default described above.","!type":"fn(sPattern: String, aValues?: [Object]) -> String","!category":"function"},"getModulePath":{"!description":"Constructs an URL to load the module with the given name and file type (suffix).\n\nSearches the longest prefix of the given module name for which a registration\nexists (see {@link jQuery.sap.registerModulePath}) and replaces that prefix\nby the registered URL prefix.\n\nThe remainder of the module name is appended to the URL, replacing any dot with a slash.\n\nFinally, the given suffix (typically a file name extension) is added (unconverted).\n\nThe returned name (without the suffix) doesn't end with a slash.","!type":"fn(sModuleName: String, sSuffix: String) -> String","!category":"function"},"initMobile":{"!description":"Does some basic modifications to the HTML page that make it more suitable for mobile apps.\nOnly the first call to this method is executed, subsequent calls are ignored. Note that this method is also called by the constructor of toplevel controls like sap.m.App, sap.m.SplitApp and sap.m.Shell.\nException: if no homeIcon was set, subsequent calls have the chance to set it.\n\nThe \"options\" parameter configures what exactly should be done.\n\nIt can have the following properties:\n<ul>\n<li>viewport: whether to set the viewport in a way that disables zooming (default: true)<\/li>\n<li>statusBar: the iOS status bar color, \"default\", \"black\" or \"black-translucent\" (default: \"default\")<\/li>\n<li>hideBrowser: whether the browser UI should be hidden as far as possible to make the app feel more native (default: true)<\/li>\n<li>preventScroll: whether native scrolling should be disabled in order to prevent the \"rubber-band\" effect where the whole window is moved (default: true)<\/li>\n<li>preventPhoneNumberDetection: whether Safari Mobile should be prevented from transforming any numbers that look like phone numbers into clickable links; this should be left as \"true\", otherwise it might break controls because Safari actually changes the DOM. This only affects all page content which is created after initMobile is called.<\/li>\n<li>rootId: the ID of the root element that should be made fullscreen; only used when hideBrowser is set (default: the document.body)<\/li>\n<li>useFullScreenHeight: a boolean that defines whether the height of the html root element should be set to 100%, which is required for other elements to cover the full height (default: true)<\/li>\n<li>homeIcon: deprecated since 1.12, use jQuery.sap.setIcons instead.\n<\/ul>","!type":"fn(options?: Object)","!category":"function"},"denormalizeScrollBeginRTL":{"!description":"For the given scroll position measured from the \"beginning\" of a container (the right edge in RTL mode)\nthis method returns the scrollLeft value as understood by the current browser in RTL mode.\nThis value is specific to the given DOM element, as the computation may involve its dimensions.\n\nSo when oDomRef should be scrolled 2px from the beginning, the number \"2\" must be given as iNormalizedScrollBegin\nand the result of this method (which may be a large or even negative number, depending on the browser) can then be set as\noDomRef.scrollLeft to achieve the desired (cross-browser-consistent) scrolling position.\nLow values make the right part of the content visible, high values the left part.\n\nThis method does no scrolling on its own, it only calculates the value to set (so it can also be used for animations).\n\nOnly use this method in RTL mode, as the behavior in LTR mode is undefined and may change!","!type":"fn(iNormalizedScrollBegin: Number, oDomRef: Element) -> Number","!category":"function"},"escapeJS":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.0 Has been renamed, use {@link jQuery.sap.encodeJS} instead.<br>Encode the string for inclusion into a JS string literal.\nOld name \"escapeJS\" kept for backward compatibility","!type":"fn(sString: String) -> String","!category":"function"},"arrayDiff":{"!description":"Calculate delta of old list and new list\nThis implements the algorithm described in \"A Technique for Isolating Differences Between Files\"\n(Commun. ACM, April 1978, Volume 21, Number 4, Pages 264-268)","!type":"fn(aOld: Array, aNew: Array, fnCompare?: fn(), bUniqueEntries?: Boolean) -> Array","!category":"function"},"globalEval":{"!description":"Executes an 'eval' for its arguments in the global context (without closure variables).\n\nThis is a synchronous replacement for <code>jQuery.globalEval<\/code> which in some\nbrowsers (e.g. FireFox) behaves asynchronously.","!type":"fn()","!category":"function"},"startsWith":{"!description":"Checks whether a given sString starts with sStartString\nrespecting the case of the strings.","!type":"fn(sString: String, sStartString: String) -> Boolean","!category":"function"},"syncGet":{"!description":"Convenience wrapper for {@link jQuery.sap.sjax} that enforeces the Http method GET and defaults the\ndata type of the result to 'text'.","!type":"fn(sUrl: String, data: String | Object, sDataType?: String)","!category":"function"},"registerModulePath":{"!description":"Registers an URL prefix for a module name prefix.\n\nBefore a module is loaded, the longest registered prefix of its module name\nis searched for and the associated URL prefix is used as a prefix for the request URL.\nThe remainder of the module name is attached to the request URL by replacing\ndots ('.') with slashes ('/').\n\nThe registration and search operates on full name segments only. So when a prefix\n\n   'sap.com'  ->  'http://www.sap.com/ui5/resources/'\n\nis registered, then it will match the name\n\n   'sap.com.Button'\n\nbut not\n\n   'sap.commons.Button'\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for\nany search.\n\nThe prefix can either be given as string or as object which contains the url and a 'final' property.\nIf 'final' is set to true, overwriting a module prefix is not possible anymore.","!type":"fn(sModuleName: String, vUrlPrefix: String | Object)","!category":"function"},"getUrlWhitelist":{"!description":"Gets the whitelist for URL valiadtion","!type":"fn() -> [String]","!category":"function"},"KeyCodes":"jQuery.sap.KeyCodes","padLeft":{"!description":"Pads a string on the left side until is has the given length.<br/>","!type":"fn(sString: String, sPadChar: String, iLength: Number) -> String","!category":"function"},"PseudoEvents":"jQuery.sap.PseudoEvents","equal":{"!description":"Compares the two given values for equality, especially takes care not to compare\narrays and objects by reference, but compares their content.\nNote: function does not work with comparing XML objects","!type":"fn(a: Object, b: Object, maxDepth?: Number, contains?: Boolean) -> Boolean","!category":"function"},"sjax":{"!description":"Convenience wrapper around <code>jQuery.ajax()<\/code> that avoids the need for callback functions when\nsynchronous calls are made. If the setting <code>complexResult<\/code> is true (default), then the return value\nis an object with the following properties\n<ul>\n<li><code>success<\/code> boolean whether the call succeeded or not\n<li><code>data<\/code> any the data returned by the call. For dataType 'text' this is a string,\n                      for JSON it is an object, for XML it is a document. When the call failed, then data is not defined\n<li><code>status<\/code> string a textual status ('success,', 'error', 'timeout',...)\n<li><code>statusCode<\/code> string the HTTP status code of the request\n<li><code>error<\/code> Error an error object (exception) in case an error occurred\n<li><code>errorText<\/code> string an error message in case an error occurred\n<\/ul>\n\nWhen <code>complexResult<\/code> is false, then in the case of success, only 'data' is returned, in case of an error the\n'fallback' setting is returned (defaults to undefined).\n\nNote that async=false is always enforced by this method.","!type":"fn(oOrigSettings: String)","!category":"function"},"history":"jQuery.sap.history_obj","addUrlWhitelist":{"!description":"Adds a whitelist entry for URL valiadtion","!type":"fn(protocol: String, host: String, port: String, path: String)","!category":"function"},"clearDelayedCall":{"!description":"Stops the delayed call.\n\nThe function given when calling delayedCall is not called anymore.","!type":"fn(sDelayedCallId: String)","!category":"function"},"!description":"Root Namespace for the jQuery plug-in provided by SAP SE.","getAllDeclaredModules":{"!description":"Returns the names of all declared modules.","!type":"fn() -> [String]","!category":"function"},"encodeJS":{"!description":"Encode the string for inclusion into a JS string literal","!type":"fn(sString: String) -> String","!category":"function"},"scrollbarSize":{"!description":"Returns the size (width of the vertical / height of the horizontal) native browser scrollbars.\n\nThis function must only be used when the DOM is ready.","!type":"fn(sClasses?: String, bForce?: Boolean) -> Object","!category":"function"},"intervalCall":{"!description":"Calls a method after a given interval and returns an id for this interval.","!type":"fn(iInterval: Number, oObject: Object, method: String | Object, aParameters?: Array) -> String","!category":"function"},"assert":{"!description":"A simple assertion mechanism that logs a message when a given condition is not met.\n\n<b>Note:<\/b> Calls to this method might be removed when the JavaScript code\n             is optimized during build. Therefore, callers should not rely on any side effects\n             of this method.","!type":"fn(bResult: Boolean, vMessage: String | fn())","!category":"function"},"escapeRegExp":{"!description":"This function escapes the reserved letters in Regular Expression","!type":"fn(sString: String) -> String","!category":"function"},"serializeXML":{"!description":"Serializes the specified XML document into a string representation.","!type":"fn(oXMLDocument: String) -> Object","!category":"function"},"registerResourcePath":{"!description":"Registers an URL prefix for a resource name prefix.\n\nBefore a resource is loaded, the longest registered prefix of its unified resource name\nis searched for and the associated URL prefix is used as a prefix for the request URL.\nThe remainder of the resource name is attached to the request URL 1:1.\n\nThe registration and search operates on full name segments only. So when a prefix\n\n   'sap/com'  ->  'http://www.sap.com/ui5/resources/'\n\nis registered, then it will match the name\n\n   'sap/com/Button'\n\nbut not\n\n   'sap/commons/Button'\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for\nany search.\n\nThe url prefix can either be given as string or as object which contains the url and a final flag.\nIf final is set to true, overwriting a resource name prefix is not possible anymore.","!type":"fn(sResourceNamePrefix: String, vUrlPrefix: String | Object)","!category":"function"},"act":"jQuery.sap.act","endsWith":{"!description":"Checks whether a given sString ends with sEndString\nrespecting the case of the strings.","!type":"fn(sString: String, sEndString: String) -> Boolean","!category":"function"},"storage":"jQuery.sap.storage"},"sap.ui.core.ws.SapPcpWebSocket.SUPPORTED_PROTOCOLS":{"!description":"Protocol versions.<br>\nOne (or more) of these have to be selected to create a SapPcpWebSocket connection\n(or no protocol at all).","!category":"namespace","v10":{"!description":"Protocol v10.pcp.sap.com","!type":"String","!category":"enum"}},"sap.ui.core.mvc.Controller_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.Controller with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sName: [String | Object])","prototype":"sap.ui.core.mvc.Controller"},"sap.ui.core.IconPool_obj":{"!type":"fn()","prototype":"sap.ui.core.IconPool"},"sap.ui.core.Icon_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Icon with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Icon"},"sap.ui.core.Core":{"createUIArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use <code>setRoot()<\/code> instead!<br>Creates a new sap.ui.core.UIArea.","!type":"fn(oDomRef: String | Element) -> sap.ui.core.UIArea","!category":"function"},"attachValidationSuccess":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'validationSuccess' event of <code>sap.ui.core.Core<\/code>.<br/>\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Core","!category":"function"},"attachLocalizationChanged":{"!description":"Register a listener for the <code>localizationChanged<\/code> event.","!type":"fn(fnFunction: fn(), oListener: Object)","!category":"function"},"getApplication":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The Component class is enhanced to take care about the Application code.<br>Returns the instance of the application (if exists).","!type":"fn() -> sap.ui.app.Application","!category":"function"},"detachIntervalTimer":{"!description":"Unregisters a listener for the central interval timer.\n\nA listener will only be unregistered if the same function/context combination\nis given as in the attachIntervalTimer call.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"getUIArea":{"!description":"Returns a UIArea if the given ID/Element belongs to one.","!type":"fn(o: String | Element) -> sap.ui.core.UIArea","!category":"function"},"setModel":{"!description":"Sets or unsets a model for the given model name.\n\nThe <code>sName<\/code> must either be <code>undefined<\/code> (or omitted) or a non-empty string.\nWhen the name is omitted, the default model is set/unset.\n\nWhen <code>oModel<\/code> is <code>null<\/code> or <code>undefined<\/code>, a previously set model\nwith that name is removed from the Core.\n\nAny change (new model, removed model) is propagated to all existing UIAreas and their descendants\nas long as a descendant doesn't have its own model set for the given name.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null<\/code>,\nthe empty string <code>\"\"<\/code> or the string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code> as model name.","!type":"fn(oModel: sap.ui.model.Model, sName?: String) -> sap.ui.core.Core","!category":"function"},"byId":{"!description":"Returns the registered element for the given id, if any.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function"},"getEventBus":{"!description":"Returns the event bus.","!type":"fn() -> sap.ui.core.EventBus","!category":"function"},"detachLocalizationChanged":{"!description":"Unregister a listener from the <code>localizationChanged<\/code> event.\n\nThe listener will only be unregistered if the same function/context combination\nis given as in the call to <code>attachLocalizationListener<\/code>.","!type":"fn(fnFunction: fn(), oListener: Object)","!category":"function"},"includeLibraryTheme":{"!description":"Includes a library theme into the current page (if a variant is specified it\nwill include the variant library theme)","!type":"fn(sLibName: String, sVariant?: String, sQuery?: String)","!category":"function"},"hasModel":{"!description":"Check if a Model is set to the core","!type":"fn() -> Boolean","!category":"function"},"isThemeApplied":{"!description":"Returns true, if the styles of the current theme are already applied, false otherwise.\n\nThis function must not be used before the init event of the Core.\nIf the styles are not yet applied an theme changed event will follow when the styles will be applied.","!type":"fn() -> Boolean","!category":"function"},"getElementById":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use <code>sap.ui.core.Core.byId<\/code> instead!<br>Returns the registered element for the given ID, if any.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function"},"unlock":{"!description":"Unlocks the Core.\n\nBrowser events are dispatched to the controls again after this method is called.","!type":"fn()","!category":"function"},"detachControlEvent":{"!description":"Unregisters a listener for control events.\n\nA listener will only be unregistered if the same function/context combination\nis given as in the attachControlEvent call.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"attachFormatError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'formatError' event of <code>sap.ui.core.Core<\/code>.<br/>\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.core.Core","!category":"function"},"isStaticAreaRef":{"!description":"Used to find out whether a certain DOM element is the static area","!type":"fn(oDomRef: Object) -> Boolean","!category":"function"},"detachFormatError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'formatError' event of <code>sap.ui.core.Core<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Core","!category":"function"},"attachInitEvent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.2 Register to the more convenient {@link sap.ui.core.Core#attachInit init event} instead<br>Attaches a given function to the <code>initEvent<\/code> event of the core.\n\nThis event will only be fired once; you can check if it has been fired already\nby calling {@link #isInitialized}.","!type":"fn(fnFunction: fn())","!category":"function"},"attachValidationError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'validationError' event of <code>sap.ui.core.Core<\/code>.<br/>\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Core","!category":"function"},"fireValidationError":{"!description":"Fire event validationError to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.core.Element<\/code> <\/li>\n<li>'property' of type <code>string<\/code> <\/li>\n<li>'type' of type <code>string<\/code> <\/li>\n<li>'newValue' of type <code>object<\/code> <\/li>\n<li>'oldValue' of type <code>object<\/code> <\/li>\n<li>'exception' of type <code>object<\/code> <\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Core","!category":"function"},"applyTheme":{"!description":"Applies the theme with the given name (by loading the respective style sheets, which does not disrupt the application).\n\nBy default, the theme files are expected to be located at path relative to the respective control library ([libraryLocation]/themes/[themeName]).\nDifferent locations can be configured by using the method setThemePath() or by using the second parameter \"sThemeBaseUrl\" of applyTheme().\nUsage of this second parameter is a shorthand for setThemePath and internally calls setThemePath, so the theme location is then known.\n\nsThemeBaseUrl is a single URL to specify the default location of all theme files. This URL is the base folder below which the control library folders\nare located. E.g. if the CSS files are not located relative to the root location of UI5, but instead they are at locations like\n   http://my.server/myapp/resources/sap/ui/core/themes/my_theme/library.css\nthen the URL that needs to be given is:\n   http://my.server/myapp/resources\nAll theme resources are then loaded from below this folder - except if for a certain library a different location has been registered.\n\nIf the theme resources are not all either below this base location or  with their respective libraries, then setThemePath must be\nused to configure individual locations.","!type":"fn(sThemeName: String, sThemeBaseUrl?: String)","!category":"function"},"registerPlugin":{"!description":"Registers a Plugin to the <code>sap.ui.core.Core<\/code>, which lifecycle\nwill be managed (start and stop).\n<br/>\nPlugin object need to implement two methods:\n<ul>\n  <li><code>startPlugin(oCore)<\/code>: will be invoked, when the Plugin\n      should start (as parameter the reference to the Core will be provided<\/li>\n  <li><code>stopPlugin()<\/code>: will be invoked, when the Plugin should stop<\/li>\n<\/ul>","!type":"fn(oPlugin: Object)","!category":"function"},"getRenderManager":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.15.0 Replaced by <code>createRenderManager()<\/code><br>undefined","!type":"fn()","!category":"function"},"getMessageManager":{"!description":"Returns the active <code>MessageManager<\/code> instance.","!type":"fn() -> sap.ui.core.message.MessageManager","!category":"function"},"getConfiguration":{"!description":"Returns the Configuration of the Core.","!type":"fn() -> sap.ui.core.Configuration","!category":"function"},"detachValidationSuccess":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'validationSuccess' event of <code>sap.ui.core.Core<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Core","!category":"function"},"isMobile":{"!description":"Check if the script is running on mobile","!type":"fn() -> Boolean","!category":"function"},"!proto":"sap.ui.base.Object","getModel":{"!description":"Get the model with the given model name.\n\nThe name can be omitted to reference the default model or it must be a non-empty string.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null<\/code>,\nthe empty string <code>\"\"<\/code> or the string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code> as model name.","!type":"fn(sName?: String | undefined) -> sap.ui.model.Model","!category":"function"},"getStaticAreaRef":{"!description":"Returns the static, hidden area DOM element belonging to this core instance.\n\nIt can be used e.g. for hiding elements like Popups, Shadow, Blocklayer etc.\n\nIf it is not yet available, a DIV is created and appended to the body.","!type":"fn() -> Element","!category":"function"},"getUIDirty":{"!description":"Returns <code>true<\/code> if there are any pending rendering tasks or when\nsuch rendering tasks are currently being executed.","!type":"fn() -> Boolean","!category":"function"},"createComponent":{"!description":"Creates a component with the provided id and settings.\n\nWhen the optional parameter <code>sUrl<\/code> is given, then all request for resources of the\nlibrary will be redirected to the given Url. This is convenience for a call to\n<pre>\n  jQuery.sap.registerModulePath(sName, sUrl);\n<\/pre>","!type":"fn(vComponent: String | Object, sUrl?: String, sId: String, mSettings: Object)","!category":"function"},"byFieldGroupId":{"!description":"Returns a list of all controls with a field group ID.\nSee {@link sap.ui.core.Control#checkFieldGroupIds Control.prototype.checkFieldGroupIds} for a description of the\n<code>vFieldGroupIds<\/code> parameter.","!type":"fn(vFieldGroupIds?: [String | String]) -> [sap.ui.core.Control]","!category":"function"},"applyChanges":{"!description":"Enforces an immediate update of the visible UI (aka \"rendering\").\n\nIn general, applications should avoid calling this method and\ninstead let the framework manage any necessary rendering.","!type":"fn()","!category":"function"},"getLoadedLibraries":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn() -> map","!category":"function"},"!category":"class","detachParseError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'parseError' event of <code>sap.ui.core.Core<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Core","!category":"function"},"isInitialized":{"!description":"Returns true if the Core has already been initialized. This means that instances\nof RenderManager etc. do already exist and the init event has already been fired\n(and will not be fired again).","!type":"fn() -> Boolean","!category":"function"},"getTemplate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29.1 Require 'sap/ui/core/tmpl/Template' and use {@link sap.ui.core.tmpl.Template.byId Template.byId} instead.<br>Returns the registered template for the given id, if any.","!type":"fn(sId: String) -> sap.ui.core.Component","!category":"function"},"setRoot":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use function <code>oControl.placeAt(oDomRef, \"only\")<\/code> of <code>sap.ui.core.Control<\/code> instead.<br>Implicitly creates a new <code>UIArea<\/code> (or reuses an exiting one) for the given DOM reference and\nadds the given control reference to the UIAreas content (existing content will be removed).","!type":"fn(oDomRef: String | Element, oControl: sap.ui.base.Interface | sap.ui.core.Control)","!category":"function"},"unregisterPlugin":{"!description":"Unregisters a Plugin out of the <code>sap.ui.core.Core<\/code>","!type":"fn(oPlugin: Object)","!category":"function"},"lock":{"!description":"Locks the Core. No browser events are dispatched to the controls.\n\nLock should be called before and after the dom is modified for rendering, roundtrips...\nExceptions might be the case for asynchronous UI behavior","!type":"fn()","!category":"function"},"getCurrentFocusedControlId":{"!description":"Returns the Id of the control/element currently in focus.","!type":"fn() -> String","!category":"function"},"loadLibrary":{"!description":"Synchronously loads the given library and makes it available to the application.\n\nLoads the *.library module, which contains all preload modules (enums, types, content of a shared.js\nif it exists). The library module will call initLibrary with additional metadata for the library.\n\nAs a result, consuming applications can instantiate any control or element from that library\nwithout having to write import statements for the controls or for the enums.\n\nWhen the optional parameter <code>sUrl<\/code> is given, then all request for resources of the\nlibrary will be redirected to the given Url. This is convenience for a call to\n<pre>\n  jQuery.sap.registerModulePath(sLibrary, sUrl);\n<\/pre>\n\nWhen the given library has been loaded already, no further action will be taken.\nEspecially, a given Url will not be honored!\n\nNote: this method does not participate in the supported preload of libraries.","!type":"fn(sLibrary: String, sUrl?: String)","!category":"function"},"detachValidationError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'validationError' event of <code>sap.ui.core.Core<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Core","!category":"function"},"fireFormatError":{"!description":"Fire event formatError to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.core.Element<\/code> <\/li>\n<li>'property' of type <code>string<\/code> <\/li>\n<li>'type' of type <code>string<\/code> <\/li>\n<li>'newValue' of type <code>object<\/code> <\/li>\n<li>'oldValue' of type <code>object<\/code> <\/li>\n<li>'exception' of type <code>object<\/code> <\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Core","!category":"function"},"initLibrary":{"!description":"Initializes a library for an already loaded library module.\n\nThis method is intended to be called only from a library.js (e.g. generated code).\nIt includes the library specific stylesheet into the current page, and creates\nlazy import stubs for all controls and elements in the library.\n\nAs a result, consuming applications don't have to write import statements for the controls or for the enums.\n\nSynchronously loads any libraries that the given library depends on.","!type":"fn(vLibInfo: String | Object)","!category":"function"},"isLocked":{"!description":"Returns the locked state of the <code>sap.ui.core.Core<\/code>","!type":"fn() -> Boolean","!category":"function"},"attachIntervalTimer":{"!description":"Registers a listener to the central interval timer.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"fireParseError":{"!description":"Fire event parseError to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.core.Element<\/code> <\/li>\n<li>'property' of type <code>string<\/code> <\/li>\n<li>'type' of type <code>string<\/code> <\/li>\n<li>'newValue' of type <code>object<\/code> <\/li>\n<li>'oldValue' of type <code>object<\/code> <\/li>\n<li>'exception' of type <code>object<\/code> <\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Core","!category":"function"},"!description":"Core Class of the SAP UI Library.\n\nThis class boots the Core framework and makes it available for the Application\nvia the method <code>sap.ui.getCore()<\/code>.\n\nExample:<br/>\n<pre>   var oCore = sap.ui.getCore();<\/pre><br/>\n\nIt provides events where the Application can attach to.<br/>\nExample:<br/>\n<pre>\noCore.attachInit(function () {\n  //do the needful, do it lean\n});\n<\/pre><br/>\n\nIt registers the Browser Eventing.","fireValidationSuccess":{"!description":"Fire event validationSuccess to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.core.Element<\/code> <\/li>\n<li>'property' of type <code>string<\/code> <\/li>\n<li>'type' of type <code>string<\/code> <\/li>\n<li>'newValue' of type <code>object<\/code> <\/li>\n<li>'oldValue' of type <code>object<\/code> <\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Core","!category":"function"},"attachControlEvent":{"!description":"Registers a listener for control events.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"getComponent":{"!description":"Returns the registered component for the given id, if any.","!type":"fn(sId: String) -> sap.ui.core.Component","!category":"function"},"attachParseError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'parseError' event of <code>sap.ui.core.Core<\/code>.<br/>\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Core","!category":"function"},"getControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use <code>sap.ui.core.Core.byId<\/code> instead!<br>Returns the registered element for the given ID, if any.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function"},"getRootComponent":{"!description":"Returns the instance of the root component (if exists).","!type":"fn() -> sap.ui.core.Component","!category":"function"},"setThemeRoot":{"!description":"Defines the root directory from below which UI5 should load the theme with the given name.\nOptionally allows restricting the setting to parts of a theme covering specific control libraries.\n\nExample:\n<code>\n  core.setThemeRoot(\"my_theme\", \"http://mythemeserver.com/allThemes\");\n  core.applyTheme(\"my_theme\");\n<\/code>\nwill cause the following file to be loaded:\n<code>http://mythemeserver.com/allThemes/sap/ui/core/themes/my_theme/library.css<\/code>\n(and the respective files for all used control libraries, like <code>http://mythemeserver.com/allThemes/sap/ui/commons/themes/my_theme/library.css<\/code>\nif the sap.ui.commons library is used)\n\nIf parts of the theme are at different locations (e.g. because you provide a standard theme like \"sap_goldreflection\" for a custom control library and\nthis self-made part of the standard theme is at a different location than the UI5 resources), you can also specify for which control libraries the setting\nshould be used, by giving an array with the names of the respective control libraries as second parameter:\n<code>core.setThemeRoot(\"sap_goldreflection\", [\"my.own.library\"], \"http://mythemeserver.com/allThemes\");<\/code>\nThis will cause the Gold Reflection theme to be loaded normally from the UI5 location, but the part for styling the \"my.own.library\" controls will be loaded from:\n<code>http://mythemeserver.com/allThemes/my/own/library/themes/sap_goldreflection/library.css<\/code>\n\nIf the custom theme should be loaded initially (via bootstrap attribute), the \"themeRoots\" property of the window[\"sap-ui-config\"] object must be used instead\nof Core.setThemeRoot(...) in order to configure the theme location early enough.","!type":"fn(sThemeName: String, aLibraryNames?: [String], sThemeBaseUrl: String) -> sap.ui.core.Core","!category":"function"},"createRenderManager":{"!description":"Returns a new instance of the RenderManager interface.","!type":"fn() -> sap.ui.core.RenderManager","!category":"function"},"attachInit":{"!description":"Attaches a given function to the <code>initEvent<\/code> event of the core.\n\nThe given callback function will either be called once the Core has been initialized\nor, if it has been initialized already, it will be called immediately.","!type":"fn(fnFunction: fn())","!category":"function"},"getLibraryResourceBundle":{"!description":"Retrieves a resource bundle for the given library and locale.\n\nIf only one argument is given, it is assumed to be the libraryName. The locale\nthen falls back to the current {@link sap.ui.core.Configuration.prototype.getLanguage session locale}.\nIf no argument is given, the library also falls back to a default: \"sap.ui.core\".","!type":"fn(sLibraryName?: String, sLocale?: String) -> jQuery.sap.util.ResourceBundle","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Core.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"jQuery.sap.log.Logger":{"setLevel":{"!description":"Defines the maximum jQuery.sap.log.Level of log entries that will be recorded.\nLog entries with a higher (less important) log level will be omitted from the log.\nWhen a component name is given, the log level will be configured for that component\nonly, otherwise the log level for the default component of this logger is set.\nFor the global logger, the global default level is set.\n\n<b>Note<\/b>: Setting a global default log level has no impact on already defined\ncomponent log levels. They always override the global default log level.","!type":"fn(iLogLevel: jQuery.sap.log.Level, sComponent?: String) -> jQuery.sap.log","!category":"function"},"!description":"A Logger class","error":{"!description":"Creates a new error-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"trace":{"!description":"Creates a new trace-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"fatal":{"!description":"Creates a new fatal-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"!category":"class","debug":{"!description":"Creates a new debug-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"getLevel":{"!description":"Returns the log level currently effective for the given component.\nIf no component is given or when no level has been configured for a\ngiven component, the log level for the default component of this logger is returned.","!type":"fn(sComponent?: String) -> Number","!category":"function"},"isLoggable":{"!description":"Checks whether logging is enabled for the given log level,\ndepending on the currently effective log level for the given component.\n\nIf no component is given, the default component of this logger will be taken into account.","!type":"fn(iLevel?: Number, sComponent?: String) -> Boolean","!category":"function"},"warning":{"!description":"Creates a new warning-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"info":{"!description":"Creates a new info-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"!proto":"Object"},"sap.ui.core.AccessibleRole":{"SpinButton":{"!description":"Allows users to select a value from a list of given entries where exactly one value is displayed at runtime, and\nthe other ones can be displayed by scrolling using the arrow up and arrow down key.","!type":"String","!category":"enum"},"Search":{"!description":"A search section of a web document. In many cases, this is a form used to submit search requests about the site,\nor a more general Internet wide search service.","!type":"String","!category":"enum"},"Option":{"!description":"A selectable item in a list represented by a select.","!type":"String","!category":"enum"},"ListItem":{"!description":"A single item in a list.","!type":"String","!category":"enum"},"Checkbox":{"!description":"A control that has three possible values: true, false, mixed.","!type":"String","!category":"enum"},"Group":{"!description":"A section of user interface objects.","!type":"String","!category":"enum"},"Menu":{"!description":"Offers a list of choices to the user.","!type":"String","!category":"enum"},"Button":{"!description":"Allows user-triggered actions.","!type":"String","!category":"enum"},"ContentInfo":{"!description":"Information about the content on the page. Examples are footnotes, copyrights, or links to privacy statements.","!type":"String","!category":"enum"},"RadioGroup":{"!description":"A group of radio controls.","!type":"String","!category":"enum"},"ColumnHeader":{"!description":"A table cell containing header information for a column.","!type":"String","!category":"enum"},"Tab":{"!description":"A header for a tab panel.","!type":"String","!category":"enum"},"Separator":{"!description":"A line or bar that separates sections of content.","!type":"String","!category":"enum"},"Marquee":{"!description":"Is used to scroll text across the page.","!type":"String","!category":"enum"},"Tablist":{"!description":"A list of tabs which are references to tab panels.","!type":"String","!category":"enum"},"Textbox":{"!description":"Inputs that allow free-form text as their value.","!type":"String","!category":"enum"},"Tabpanel":{"!description":"A container for the resources associated with a tab.","!type":"String","!category":"enum"},"MenuItemRadio":{"!description":"A menu item which is part of a group of menuitemradio roles.","!type":"String","!category":"enum"},"Navigation":{"!description":"A collection of links suitable for use when navigating the document or related documents.","!type":"String","!category":"enum"},"TreeGrid":{"!description":"A grid whose rows are expandable and collapsable in the same manner as the ones of trees.","!type":"String","!category":"enum"},"Toolbar":{"!description":"A collection of commonly used functions represented in compact visual form.","!type":"String","!category":"enum"},"Application":{"!description":"A software unit executing a set of tasks for the user.","!type":"String","!category":"enum"},"Row":{"!description":"A row of table cells.","!type":"String","!category":"enum"},"Menubar":{"!description":"A container for menu items where each item may activate a submenu.","!type":"String","!category":"enum"},"ProgressBar":{"!description":"Shows the execution progress in applications providing functions that take a long time.","!type":"String","!category":"enum"},"Combobox":{"!description":"Allows selecting an item from a list, or to enter data directly in the input field.","!type":"String","!category":"enum"},"Heading":{"!description":"A heading for a section of the page.","!type":"String","!category":"enum"},"TreeItem":{"!description":"A tree node","!type":"String","!category":"enum"},"Slider":{"!description":"A user input where the user selects an input in a given range. This form of range expects an analogous keyboard\ninterface.","!type":"String","!category":"enum"},"Secondary":{"!description":"A unique section of the document. In the case of a portal, this may include time display, weather forecast,\nor stock price.","!type":"String","!category":"enum"},"Tooltip":{"!description":"A popup that displays a description for an element when the user passes over or rests on that element.\nSupplement to the normal tooltip processing of the user agent.","!type":"String","!category":"enum"},"Main":{"!description":"Defines the main content of a document.","!type":"String","!category":"enum"},"Log":{"!description":"An area where new information is added, or old information disappears.\nInformation types are chat logs, messaging, or error logs, for example.\nThe log contains a sequence: New information is always added to the end of the log.","!type":"String","!category":"enum"},"Region":{"!description":"A large section on the web page.","!type":"String","!category":"enum"},"Tree":{"!description":"A form of a list (tree) having groups (subtrees) inside groups (subtrees), where the sub trees can be collapsed and expanded.","!type":"String","!category":"enum"},"SeeAlso":{"!description":"Indicates that the element contains content that is related to the main content of the page.","!type":"String","!category":"enum"},"Grid":{"!description":"Contains cells of tabular data arranged in rows and columns, for example in a table.","!type":"String","!category":"enum"},"AlertDialog":{"!description":"A separate window with an alert or error information.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"No explicit role is applicable. An AccessibleName should be specified for the control.","!type":"String","!category":"enum"},"Radio":{"!description":"An option in single-select list. Only one radio control in a radiogroup can be selected at the same time.","!type":"String","!category":"enum"},"RowHeader":{"!description":"A table cell containing header information for a row.","!type":"String","!category":"enum"},"List":{"!description":"A container for non-interactive list items which are the children of the list.","!type":"String","!category":"enum"},"GridCell":{"!description":"A table cell in a grid where the cells can be active, editable, and selectable.\nCells may have functional relationships to controls, for example.","!type":"String","!category":"enum"},"Document":{"!description":"Content that contains related information, such as a book.","!type":"String","!category":"enum"},"Description":{"!description":"Descriptive content for a page element.","!type":"String","!category":"enum"},"Timer":{"!description":"A numerical counter which indicates an amount of elapsed time from a start point,\nor of the time remaining until a certain end point.","!type":"String","!category":"enum"},"Dialog":{"!description":"A small window that is designed to interrupt the current application processing\nin order to inform the user and to get some response.","!type":"String","!category":"enum"},"Note":{"!description":"The content is parenthetic or ancillary to the main content of the resource.","!type":"String","!category":"enum"},"Status":{"!description":"A container for processing advisory information.","!type":"String","!category":"enum"},"Link":{"!description":"An interactive reference to a resource.","!type":"String","!category":"enum"},"!description":"Defines the accessible roles for ARIA support. This enumeration is used with the AccessibleRole control property.\nFor more information, goto \"Roles for Accessible Rich Internet Applications (WAI-ARIA Roles)\" at the www.w3.org homepage.","MenuItem":{"!description":"A child in a menu.","!type":"String","!category":"enum"},"Alert":{"!description":"A message with an alert or error information.","!type":"String","!category":"enum"},"Img":{"!description":"A container for a collection of elements that form an image.","!type":"String","!category":"enum"},"Presentation":{"!description":"An element whose role is presentational does not need to be mapped to the accessibility API.","!type":"String","!category":"enum"},"Listbox":{"!description":"A widget that allows the user to select one or more items from a list.\nThe items within the list are static and can contain images.","!type":"String","!category":"enum"},"Banner":{"!description":"Usually defined as the advertisement at the top of a web page.\nThe banner content typically contains the site or company logo, or other key advertisements.","!type":"String","!category":"enum"},"Directory":{"!description":"A list of references to members of a single group.","!type":"String","!category":"enum"},"MenuItemCheckbox":{"!description":"A checkable menu item (tri-state).","!type":"String","!category":"enum"},"Definition":{"!description":"The content of the associated element represents a definition.\nIf there is a definition element within the content, this one represents the term being defined.","!type":"String","!category":"enum"}},"sap.ui.app":{"root":{"!description":"root : String","!type":"String","!category":"enum"},"Application":"sap.ui.app.Application_obj","!category":"namespace","config":{"!description":"config : Object","!type":"Object","!category":"enum"},"MockServer":"sap.ui.app.MockServer_obj"},"sap.ui.test.matchers.Properties_obj":{"!type":"fn(the: Object)","prototype":"sap.ui.test.matchers.Properties"},"sap.ui.core.routing.Router_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Router with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oRoutes?: [Object | Object], oConfig?: Object, oOwner?: sap.ui.core.UIComponent, oTargetsConfig?: Object)","prototype":"sap.ui.core.routing.Router"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround_obj":{"!type":"fn(oModel: Object, aWorkaroundID: [String])","prototype":"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround"},"sap.ui.model.odata.type.DateTimeOffset_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTimeOffset with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.DateTimeBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.DateTimeOffset"},"sap.ui.model.odata.type.String":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.String<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>string<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ndefined constraints.","!type":"fn(sValue: String)","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(sValue: String, sTargetType: String) -> String | Number | Boolean","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value which is expected to be of the given type to a string.","!type":"fn(vValue: String | Number | Boolean, sSourceType: String) -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.String.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.core.mvc.View_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.View with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.View"},"sap.ui.core.util.File":{"!description":"Utility class to handle files","save":{"!description":"<p>Triggers a download / save action of the given file.<\/p>\n\n<p>There are limitations for this feature in some browsers:<p>\n\n<p><b>Internet Explorer 8 / 9<\/b><br>\nSome file extensions on some operating systems are not working due to a bug in IE.\nTherefore 'txt' will be used as file extension if the problem is occurring.<\/p>\n\n<p><b>Safari (OS X / iOS)<\/b><br>\nA new window/tab will be opened. In OS X the user has to manually save the file (CMD + S), choose \"page source\" and specify a filename.\nIn iOS the content can be opened in another app (Mail, Notes, ...) or copied to the clipboard.\nIn case the popup blocker prevents this action, an error will be thrown which can be used to notify the user to disable it.<\/p>\n\n<p><b>Android Browser<\/b><br>\nNot supported<\/p>","!type":"fn(sData: String, sFileName: String, sFileExtension: String, sMimeType: String, sCharset: String)","!category":"function"},"!category":"namespace"},"sap.ui.model.analytics.odata4analytics.SortOrder":{"!description":"Sort order of a property","!category":"namespace"},"sap.ui.core.RenderManager_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.RenderManager with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.RenderManager"},"sap.ui.test.matchers":{"Ancestor":"sap.ui.test.matchers.Ancestor_obj","BindingPath":"sap.ui.test.matchers.BindingPath_obj","AggregationFilled":"sap.ui.test.matchers.AggregationFilled_obj","AggregationLengthEquals":"sap.ui.test.matchers.AggregationLengthEquals_obj","!category":"namespace","Matcher":"sap.ui.test.matchers.Matcher_obj","AggregationContainsPropertyEqual":"sap.ui.test.matchers.AggregationContainsPropertyEqual_obj","PropertyStrictEquals":"sap.ui.test.matchers.PropertyStrictEquals_obj","Properties":"sap.ui.test.matchers.Properties_obj"},"sap.ui.core.ResizeHandler":{"register":{"!description":"Registers the given event handler for resize events on the given DOM element or control.\n\n<b>Note:<\/b> This function must not be used before the UI5 framework is initialized.\nPlease use the {@link sap.ui.core.Core#attachInit init event} of UI5 if you are not sure whether this is the case.\n\nThe resize handler periodically checks the dimensions of the registered reference. Whenever it detects changes, an event is fired.\nBe careful when changing dimensions within the event handler which might cause another resize event and so on.\n\nThe available parameters of the resize event are:\n<ul>\n<li><code>oEvent.target<\/code>: The DOM element of which the dimensions were checked<\/li>\n<li><code>oEvent.size.width<\/code>: The current width of the DOM element in pixels<\/li>\n<li><code>oEvent.size.height<\/code>: The current height of the DOM element in pixels<\/li>\n<li><code>oEvent.oldSize.width<\/code>: The previous width of the DOM element in pixels<\/li>\n<li><code>oEvent.oldSize.height<\/code>: The previous height of the DOM element in pixels<\/li>\n<li><code>oEvent.control<\/code>: The control which was given during registration of the event handler (if present)<\/li>\n<\/ul>","!type":"fn(oRef: DOMRef | sap.ui.core.Control, fHandler: fn()) -> String","!category":"function"},"!description":"The resize handling API provides firing of resize events on all browsers by regularly \nchecking the width and height of registered DOM elements or controls and firing events accordingly.","extend":{"!description":"Creates a new subclass of class sap.ui.core.ResizeHandler with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn(), vName: String | Object, oRendererInfo?: Object, sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!category":"namespace","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ResizeHandler.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"deregister":{"!description":"Deregisters a previously registered handler for resize events with the given registration ID.","!type":"fn(sId: String)","!category":"function"}},"sap.ui.model.analytics.odata4analytics.QueryResultRequest":{"getMeasureNames":{"!description":"Get the names of the measures included in the query result request","!type":"fn() -> Array","!category":"function"},"addToAggregationLevel":{"!description":"Add one or more dimensions to the aggregation level","!type":"fn(aDimensionName: undefined)","!category":"function"},"getURIQueryOptionValue":{"!description":"Get the value of an query option for the OData request URI corresponding\nto this request.","!type":"fn(sQueryOptionName: String) -> String","!category":"function"},"removeFromAggregationLevel":{"!description":"Remove one or more dimensions from the aggregation level. The method also\nremoved a potential sort expression on the dimension.","!type":"fn(aDimensionName: undefined)","!category":"function"},"setParameterizationRequest":{"!description":"Set the parameterization request required for interactions with the query\nresult of parameterized queries. This method provides an alternative way\nto assign a parameterization request to a query result request.","!type":"fn(oParameterizationRequest: undefined)","!category":"function"},"getResultPageBoundaries":{"!description":"Returns the current page boundaries as object with properties\n<code>start<\/code> and <code>end<\/code>. If the end of the page is\nunbounded, <code>end<\/code> is null.","!type":"fn() -> Object","!category":"function"},"getQueryResult":{"!description":"Get the description of the query result on which this request operates on","!type":"fn() -> sap.ui.model.analytics.odata4analytics.QueryResult","!category":"function"},"getSortExpression":{"!description":"Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.SortExpression","!category":"function"},"setResultPageBoundaries":{"!description":"Specify that only a page of the query result shall be returned. A page is\ndescribed by its boundaries, that are row numbers for the first and last\nrows in the query result to be returned.","!type":"fn(start: Number, end: Number)","!category":"function"},"setFilterExpression":{"!description":"Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the filter object maintained by this request.","!type":"fn(oFilter: sap.ui.model.analytics.odata4analytics.FilterExpression)","!category":"function"},"setResourcePath":{"!description":"Set the resource path to be considered for the OData request URI of this\nquery request object. This method provides an alternative way to assign a\npath comprising a parameterization. If a path is provided, it overwrites\nany parameterization object that might have been specified separately.","!type":"fn(sResourcePath: undefined)","!category":"function"},"!category":"class","setRequestOptions":{"!description":"Set further options to be applied for the OData request to fetch the\nquery result","!type":"fn(bIncludeEntityKey: Boolean, bIncludeCount: Boolean, bReturnNoEntities: Boolean)","!category":"function"},"setSortExpression":{"!description":"Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the sort object maintained by this request.","!type":"fn(oSorter: sap.ui.model.analytics.odata4analytics.SortExpression)","!category":"function"},"getURIToQueryResultEntitySet":{"!description":"Get the URI to locate the entity set for the query result.","!type":"fn(sServiceRootURI: String) -> String","!category":"function"},"getURIToQueryResultEntries":{"!description":"Get the unescaped URI to fetch the query result.","!type":"fn(sServiceRootURI: String, sResourcePath: String) -> String","!category":"function"},"getAggregationLevel":{"!description":"Get the names of the dimensions included in the aggregation level","!type":"fn() -> Array","!category":"function"},"getParameterizationRequest":{"!description":"Retrieves the current parametrization request","!type":"fn() -> sap.ui.model.analytics.odata4analytics.ParametrizationRequest","!category":"function"},"getAggregationLevelDetails":{"!description":"Get details about a dimensions included in the aggregation level","!type":"fn(sDImensionName: undefined) -> Object","!category":"function"},"!description":"Creation of URIs for fetching query results.","includeDimensionKeyTextAttributes":{"!description":"Specify which dimension components shall be included in the query result.\nThe settings get applied to the currently defined aggregation level.","!type":"fn(sDimensionName: undefined, bIncludeKey: undefined, bIncludeText: undefined, aAttributeName: undefined)","!category":"function"},"includeMeasureRawFormattedValueUnit":{"!description":"Specify which measure components shall be included in the query result.\nThe settings get applied to the currently set measures.","!type":"fn(sMeasureName: undefined, bIncludeRawValue: undefined, bIncludeFormattedValue: undefined, bIncludeUnit: undefined)","!category":"function"},"getFilterExpression":{"!description":"Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function"},"setMeasures":{"!description":"Set the measures to be included in the query result request. By default,\nthe query result will include the properties holding the raw values of\nthe given measures. This setting can be changed using\nincludeMeasureRawFormattedValueUnit.","!type":"fn(aMeasureName: undefined)","!category":"function"},"!proto":"sap.ui.base.Object","setAggregationLevel":{"!description":"Set the aggregation level for the query result request. By default, the\nquery result will include the properties holding the keys of the given\ndimensions. This setting can be changed using\nincludeDimensionKeyTextAttributes.","!type":"fn(aDimensionName: undefined)","!category":"function"}},"sap.ui.model.type.Integer":{"!description":"This class represents integer simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Integer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.SimpleType"},"sap.ui.model.MetaModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.MetaModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.model.MetaModel"},"sap.ui.model.odata.ODataMessageParser":{"setHeaderField":{"!description":"Sets the header field name that should be used for parsing the JSON messages","!type":"fn(sFieldName: String) -> sap.ui.model.odata.ODataMessageParser","!category":"function"},"!description":"OData implementation of the sap.ui.core.message.MessageParser class. Parses message responses from the back-end.","!category":"class","parse":{"!description":"Parses the given response for messages, calculates the delta and fires the messageChange-event\non the MessageProcessor if messages are found.","!type":"fn(oResponse: Object, oRequest: Object, mGetEntities: map, mChangeEntities: map)","!category":"function"},"getHeaderField":{"!description":"Returns the name of the header field that is used to parse the server messages","!type":"fn() -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataMessageParser.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.message.MessageParser"},"sap.ui.model.Filter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Filter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFilterInfo: Object)","prototype":"sap.ui.model.Filter"},"sap.ui.test.PageObjectFactory":{"!description":"Page Object Factory","!category":"class","create":{"!description":"Create a page object configured as arrangement, action and assertion to the Opa.config.\nUse it to structure your arrangement, action and assertion based on parts of the screen to avoid name clashes and help structuring your tests.","!type":"fn()","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.mvc.ViewType":{"!description":"Specifies possible view types","Template":{"!description":"Template View","!type":"String","!category":"enum"},"JSON":{"!description":"JSON View","!type":"String","!category":"enum"},"HTML":{"!description":"HTML view","!type":"String","!category":"enum"},"!category":"static class","XML":{"!description":"XML view","!type":"String","!category":"enum"},"JS":{"!description":"JS View","!type":"String","!category":"enum"}},"sap.ui.core.delegate.ItemNavigation":{"setTableMode":{"!description":"Sets whether the <code>ItemNavigation<\/code> should use the table mode to navigate through\nthe items (navigation in a grid).","!type":"fn(bTableMode: Boolean, bTableList?: Boolean) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"setColumns":{"!description":"Sets whether the items are displayed in columns.\n\nIf columns are used, the Arrow Up and Arrow Down keys navigate to the next or previous\nitem of the column. If the first or last item of the column is reached, the next focused\nitem is then in the next or previous column.","!type":"fn(iColumns: Number, bNoColumnChange: Boolean) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"setHomeEndColumnMode":{"!description":"Sets behavior of HOME and END keys if columns are used.","!type":"fn(bStayInRow: Boolean, bCtrlEnabled: Boolean) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"setRootDomRef":{"!description":"Sets the root DOM reference surrounding the items","!type":"fn(oDomRef: Object) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"setDisabledModifiers":{"!description":"Sets the disabled modifiers\nThese modifiers will not be handled by the <code>ItemNavigation<\/code>\n\n<pre>\nExample: Disable shift + up handling of the <code>ItemNavigation<\/code>\n\noItemNavigation.setDisabledModifiers({\n    sapnext : [\"shift\"]\n});\n\nPossible keys are : \"shift\", \"alt\", \"ctrl\", \"meta\"\nPossible events are : \"sapnext\", \"sapprevious\", \"saphome\", \"sapend\"\n<\/pre>","!type":"fn(oDisabledModifiers: Object) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"getRootDomRef":{"!description":"Returns the root DOM reference surrounding the items","!type":"fn() -> Element","!category":"function"},"setPageSize":{"!description":"Sets the page size of the item navigation to allow Page Up and Page Down keys.","!type":"fn(iPageSize: Number) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"!description":"Delegate for the navigation between DOM nodes with the keyboard.\n\nThe <code>ItemNavigation<\/code> provides keyboard and mouse navigation between DOM nodes representing items.\nThis means that controls rendering a list of items can attach this delegate to get a common keyboard and mouse support\nto navigate between these items.\nIt is possible to navigate between the items via the arrow keys.\nIf needed, paging using the Page Up and Page Down keys is possible. (To activate call <code>setPageSize<\/code> with a value &gt; 0.)\nHOME and END keys are also supported.\nFocusing an item via mouse also is also supported. For mouse navigation, the <code>mousedown<\/code> event is used.\n\nAs the <code>ItemNavigation<\/code> works with DOM nodes, the items and the control area must be provided as\nDOM references. There is one root DOM reference (set via <code>setRootDomRef<\/code>).\nAll item DOM references (set via <code>setItemDomRefs<\/code>) must be places somewhere inside of this root DOM reference.\nOnly focusable items are used for the navigation, meaning disabled items or separator items are just ignored by navigating\nthrough the items. In some cases however, it makes sense to put the non-focusable items in the array of the DOM references to\nkeep the indexes stable or like in the calling control.\n<b>Hint:<\/b> To make a DOM reference focusable a <code>tabindex<\/code> of -1 can be set.\n\n<b>Note<\/b> After re-rendering of the control or changing the DOM nodes of the control, the\nDOM references of the <code>ItemNavigation<\/code> must be updated. Then the same item\n(corresponding to the index) will get the focus.\n\nThe <code>ItemNavigation<\/code> adjusts the <code>tabindex<\/code> of all DOM references relating to the current\nfocused item. So if the control containing the items gets the focus (e.g. via tab navigation),\nit is always the focused items which will be focused.\n\n<b>Note:<\/b> If the <code>ItemNavigation<\/code> is nested in another <code>ItemNavigation<\/code> \n(e.g. <code>SegmentedButton<\/code> in <code>Toolbar<\/code>), the <code>RootDomRef<\/code> will always have <code>tabindex<\/code> -1.\n\nPer default the <code>ItemNavigation<\/code> cycles over the items.\nIt navigates again to the first item if the Arrow Down or Arrow Right key is pressed while\nthe last item has the focus. It navigates to the last item if arrow up or\narrow left is pressed while the first item has the focus.\nIf you want to stop the navigation at the first and last item,\ncall the <code>setCycling<\/code> method with a value of <code>false<\/code>.\n\nIt is possible to have multiple columns in the item navigation. If multiple columns\nare used, the keyboard navigation changes. The Arrow Right and Arrow Left keys will take the user to the next or previous\nitem, and the Arrow Up and Arrow Down keys will navigate the same way but in a vertical direction.\n\nThe <code>ItemNavigation<\/code> also allows setting a selected index that is used to identify\nthe selected item. Initially, if no other focus is set, the selected item will be the focused one.\nNote that navigating through the items will not change the selected item, only the focus.\n(For example a radio group has one selected item.)","getDisabledModifiers":{"!description":"Returns disabled modifiers\nThese modifiers will not be handled by the <code>ItemNavigation<\/code>","!type":"fn(oDisabledModifiers: Object) -> Object","!category":"function"},"!category":"class","setSelectedIndex":{"!description":"Sets the selected index if the used control supports selection.","!type":"fn(iIndex: Number) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"getItemDomRefs":{"!description":"Returns the array of item DOM references","!type":"fn() -> [Element]","!category":"function"},"setCycling":{"!description":"Sets whether the <code>ItemNavigation<\/code> should cycle through the items.\n\nIf cycling is disabled the navigation stops at the first and last item, if the corresponding arrow keys are used.","!type":"fn(bCycling: Boolean) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"hasDisabledModifier":{"!description":"Check whether given event has disabled modifier or not","!type":"fn(oEvent: jQuery.Event) -> Boolean","!category":"function"},"setItemDomRefs":{"!description":"Sets the item DOM references as an array for the items","!type":"fn(aItemDomRefs: [Element]) -> sap.ui.core.delegate.ItemNavigation","!category":"function"},"!proto":"sap.ui.base.EventProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.delegate.ItemNavigation.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.util.serializer.XMLViewSerializer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.XMLViewSerializer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oView: sap.ui.core.mvc.XMLView, oWindow?: Object, sDefaultXmlNamespace?: String, fnGetControlId: fn(), fnGetEventHandlerName: fn())","prototype":"sap.ui.core.util.serializer.XMLViewSerializer"},"sap.ui.core.message.MessageManager_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageManager with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.message.MessageManager"},"sap.ui.model.odata.ODataUtils":{"setOrigin":{"!description":"Adds an origin to the given service URL.\nIf an origin is already present, it will only be replaced if the parameters object contains the flag \"force: true\".\nIn case the URL already contains URL parameters, these will be kept.\nAs a parameter, a sole alias is sufficient. The parameters vParameters.system and vParameters.client however have to be given in pairs.\nIn case all three origin specifying parameters are given (system/client/alias), the alias has precedence.\n\nExamples:\nsetOrigin(\"/backend/service/url/\", \"DEMO_123\");\n- result: /backend/service/url;o=DEMO_123/\n\nsetOrigin(\"/backend/service/url;o=OTHERSYS8?myUrlParam=true&x=4\", {alias: \"DEMO_123\", force: true});\n- result /backend/service/url;o=DEMO_123?myUrlParam=true&x=4\n\nsetOrigin(\"/backend/service/url/\", {system: \"DEMO\", client: 134});\n- result /backend/service/url;o=sid(DEMO.134)/","!type":"fn(sServiceURL: String, vParameters: Object | String) -> String","!category":"function"},"compare":{"!description":"Compares the given OData values based on their type. All date and time types can also be\ncompared with a number. This number is then interpreted as the number of milliseconds that\nthe corresponding date or time object should hold.","!type":"fn(vValue1: Object, vValue2: Object, bAsDecimal?: String) -> integer","!category":"function"},"formatValue":{"!description":"Formats a JavaScript value according to the given\n<a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\nEDM type<\/a>.","!type":"fn(vValue: Object, sType: String) -> String","!category":"function"},"!category":"namespace","getComparator":{"!description":"Returns a comparator function optimized for the given EDM type.","!type":"fn(sEdmType: String) -> fn()","!category":"function"}},"sap.ui.core.util.serializer.delegate.Delegate_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.Delegate with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.util.serializer.delegate.Delegate"},"sap.ui.core.ValueStateSupport":{"getAdditionalText":{"!description":"Returns a generic success, warning or error message if the given Element\nhas a property \"valueState\" with one of these three states or the given ValueState\nrepresents one of these states.","!type":"fn(vValue: sap.ui.core.Element | sap.ui.core.ValueState) -> String","!category":"function"},"!description":"Helper functionality for value state support.","enrichTooltip":{"!description":"Appends a generic success, warning or error message to the given tooltip text if the given Element\nhas a property \"valueState\" with one of these three states.","!type":"fn(oElement: sap.ui.core.Element, sTooltipText: String) -> String","!category":"function"},"!category":"namespace","formatValueState":{"!description":"Returns a ValueState object based on the given integer value\n\n 0 : ValueState.None\n 1 : ValueState.Warning\n 2 : ValueState.Success\n 3 : ValueState.Error","!type":"fn(iState: Number) -> sap.ui.core.ValueState","!category":"function"}},"sap.ui.core.ListItem":{"setAdditionalText":{"!description":"Sets a new value for property <code>additionalText<\/code>.\n\nSome additional text of type string, optionally to be displayed along with this item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAdditionalText: String) -> sap.ui.core.ListItem","!category":"function"},"getAdditionalText":{"!description":"Gets current value of property <code>additionalText<\/code>.\n\nSome additional text of type string, optionally to be displayed along with this item.","!type":"fn() -> String","!category":"function"},"!description":"An item that is used in lists or list-similar controls such as DropdownBox, for example.\nThe element foresees the usage of additional texts displayed in a second column.","!category":"class","setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe icon belonging to this list item instance.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.ui.core.ListItem","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe icon belonging to this list item instance.\nThis can be an URI to an image or an icon font URI.","!type":"fn() -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ListItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Item"},"sap.ui.core.Label":{"!description":"Marker interface for controls which are suitable for use as label.","!category":"static class"},"sap.ui.test.matchers.BindingPath_obj":{"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.BindingPath"},"sap.ui.core.Configuration.FormatSettings":{"getNumberSymbol":{"!description":"Returns the currently set number symbol of the given type or undefined if no symbol has been defined.","!type":"fn()","!category":"function"},"getLegacyTimeFormat":{"!description":"Returns the currently set legacy ABAP time format (its id) or undefined if none has been set.","!type":"fn()","!category":"function"},"setLegacyNumberFormat":{"!description":"Allows to specify one of the legacy ABAP number format.\n\nThis method will modify the 'group' and 'decimal' symbols. When called with a null\nor undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy number format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"setLegacyDateFormat":{"!description":"Allows to specify one of the legacy ABAP date formats.\n\nThis method modifies the date patterns for 'short' and 'medium' style with the corresponding ABAP\nformat. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy date format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.\n\nNote: those date formats that are not based on the Gregorian calendar (Japanese date formats '7', '8' and '9',\nIslamic date formats 'A' and 'B' and Iranian date format 'C') are not yet supported by UI5. They are accepted\nby this method for convenience (user settings from ABAP system can be used without filtering), but they are\nignored. Instead, the formats from the current format locale will be used and a warning will be logged.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"getFormatLocale":{"!description":"Returns the locale to be used for formatting.\n\nIf no such locale has been defined, this method falls back to the language,\nsee {@link sap.ui.core.Configuration#getLanguage Configuration.getLanguage()}.\n\nIf any user preferences for date, time or number formatting have been set,\nand if no format locale has been specified, then a special private use subtag\nis added to the locale, indicating to the framework that these user preferences\nshould be applied.","!type":"fn() -> sap.ui.core.Locale","!category":"function"},"getLegacyDateFormat":{"!description":"Returns the currently set legacy ABAP date format (its id) or undefined if none has been set.","!type":"fn()","!category":"function"},"getLegacyNumberFormat":{"!description":"Returns the currently set legacy ABAP number format (its id) or undefined if none has been set.","!type":"fn()","!category":"function"},"setLegacyTimeFormat":{"!description":"Allows to specify one of the legacy ABAP time formats.\n\nThis method sets the time patterns for 'short' and 'medium' style to the corresponding ABAP\nformats and sets the day period texts to \"AM\"/\"PM\" or \"am\"/\"pm\" respectively. When called\nwith a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy time format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"!description":"Collects and stores the configuration of the current environment.\n\nThe Configuration is initialized once when the {@link sap.ui.core.Core} is created.\nThere are different ways to set the environment configuration (in ascending priority):\n<ol>\n<li>System defined defaults\n<li>Server wide defaults, read from /sap-ui-config.json\n<li>Properties of the global configuration object window[\"sap-ui-config\"]\n<li>A configuration string in the data-sap-ui-config attribute of the bootstrap tag\n<li>Individual data-sap-ui-xyz attributes of the bootstrap tag\n<li>Using URL parameters\n<li>Setters in this Configuration object (only for some parameters)\n<\/ol>\n\nThat is, attributes of the DOM reference override the system defaults, URL parameters\noverride the DOM attributes (where empty URL parameters set the parameter back to its\nsystem default). Calling setters at runtime will override any previous settings\ncalculated during object creation.\n\nThe naming convention for parameters is:\n<ul>\n<li>in the URL : sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"\n<li>in the DOM : data-sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"\n<\/ul>\nwhere <i>PARAMETER-NAME<\/i> is the name of the parameter in lower case.\n\nValues of boolean parameters are case insensitive where \"true\" and \"x\" are interpreted as true.","setLegacyDateCalendarCustomizing":{"!description":"Allows to specify the customizing data for Islamic calendar support","!type":"fn(aMappings: [Object]) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"getDatePattern":{"!description":"Returns the currently set date pattern or undefined if no pattern has been defined.","!type":"fn()","!category":"function"},"setNumberSymbol":{"!description":"Defines the string to be used for the given number symbol.\nCalling this method with a null or undefined symbol removes a previously set symbol string.\nNote that an empty string is explicitly allowed.\n\nIf a symbol is defined, it will be preferred over symbols derived from the current locale.\n\nSee class {@link sap.ui.core.format.NumberFormat} for details about the symbols.\n\nAfter changing the number symbol, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sStyle: String, sSymbol: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"!category":"class","setTimePattern":{"!description":"Defines the preferred format pattern for the given time format style.\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the time pattern, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sStyle: String, sPattern: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"getLegacyDateCalendarCustomizing":{"!description":"Returns the currently set customizing data for Islamic calendar support","!type":"fn() -> [Object]","!category":"function"},"getTimePattern":{"!description":"Returns the currently set time pattern or undefined if no pattern has been defined.","!type":"fn()","!category":"function"},"setDatePattern":{"!description":"Defines the preferred format pattern for the given date format style.\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the date pattern, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sStyle: String, sPattern: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"setFirstDayOfWeek":{"!description":"Defines the day used as the first day of the week.\nThe day is set as an integer value between 0 (Sunday) and 6 (Saturday).\nCalling this method with a null or undefined symbol removes a previously set value.\n\nIf a value is defined, it will be preferred over values derived from the current locale.\n\nUsually in the US the week starts on Sunday while in most European countries on Monday.\nThere are special cases where you want to have the first day of week set independent of the\nuser locale.\n\nAfter changing the first day of week, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(iValue: Number) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Configuration.FormatSettings.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.odata.v2.ODataModel":{"createBindingContext":{"!description":"Creates a binding context for the given path\nIf the data of the context is not yet available, it can not be created, but first the\nentity needs to be fetched from the server asynchronously. In case no callback function\nis provided, the request will not be triggered.","!type":"fn(sPath: String, oContext?: Object, mParameters?: map, fnCallBack?: fn(), bReload?: Boolean)","!category":"function"},"getKey":{"!description":"Returns the key part from the entry URI or the given context or object","!type":"fn(oObject: Object | sap.ui.model.Context) -> String","!category":"function"},"getSecurityToken":{"!description":"Returns the current security token. If the token has not been requested from the server it will be requested first.","!type":"fn() -> String","!category":"function"},"resetChanges":{"!description":"\nResets the collected changes by the setProperty method.","!type":"fn(aPath?: Array)","!category":"function"},"addAnnotationXML":{"!description":"Adds new xml content to be parsed for OData annotations, which are then merged into the annotations object which\ncan be retrieved by calling the getServiceAnnotations()-method.","!type":"fn(sXMLContent: String, bSuppressEvents?: Boolean) -> Promise","!category":"function"},"getMetaModel":{"!description":"Returns an instance of an OData meta model which offers a unified access to both OData v2\nmeta data and v4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata}\nas a foundation and merges v4 annotations from the existing\n{@link sap.ui.model.odata.ODataAnnotations} directly into the corresponding model element.\n\n<b>BEWARE:<\/b> Access to this OData meta model will fail before the promise returned by\n{@link sap.ui.model.odata.ODataMetaModel#loaded loaded} has been resolved!","!type":"fn() -> sap.ui.model.odata.ODataMetaModel","!category":"function"},"securityTokenAvailable":{"!description":"Returns a promise, which will resolve with the security token as soon as it is available","!type":"fn() -> Promise","!category":"function"},"deleteCreatedEntry":{"!description":"Deletes a created entry from the request queue and the model.","!type":"fn(oContext: sap.ui.model.Context)","!category":"function"},"detachMetadataFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'metadataFailed' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"setDefaultCountMode":{"!description":"Sets the default way to retrieve the count of collections in this model.\nCount can be determined either by sending a separate $count request, including\n$inlinecount=allpages in data requests, both of them or not at all.","!type":"fn(sCountMode: sap.ui.model.odata.CountMode)","!category":"function"},"setUseBatch":{"!type":"fn(bUseBatch?: Boolean)","!category":"function"},"getServiceMetadata":{"!description":"Return the parsed XML metadata as a Javascript object. Please note that the metadata is loaded asynchronously and this function might return undefined because the\nmetadata has not been loaded yet.\nIn this case attach to the <code>metadataLoaded<\/code> event to get notified when the metadata is available and then call this function.","!type":"fn() -> Object","!category":"function"},"detachBatchRequestCompleted":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'batchRequestCompleted' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"getOriginalProperty":{"!description":"Returns the original value for the property with the given path and context.\nThe original value is the value that was last responded by the server.","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function"},"getChangeBatchGroups":{"!description":"Returns the definition of batchGroups per EntityType for TwoWay changes","!type":"fn() -> map","!category":"function"},"refresh":{"!description":"Refresh the model.\nThis will check all bindings for updated data and update the controls if data has been changed.","!type":"fn(bForceUpdate?: Boolean, bRemoveData?: Boolean, sGroupId?: String)","!category":"function"},"setTokenHandlingEnabled":{"!description":"Enable/Disable XCSRF-Token handling","!type":"fn(bTokenHandling?: Boolean)","!category":"function"},"detachBatchRequestSent":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'batchRequestSent' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"setHeaders":{"!description":"Set custom headers which are provided in a key/value map. These headers are used for requests against the OData backend.\nPrivate headers which are set in the ODataModel cannot be modified.\nThese private headers are: accept, accept-language, x-csrf-token, MaxDataServiceVersion, DataServiceVersion.\n\nTo remove these headers simply set the mCustomHeaders parameter to null. Please also note that when calling this method again all previous custom headers\nare removed unless they are specified again in the mCustomHeaders parameter.","!type":"fn(mHeaders: Object)","!category":"function"},"createEntry":{"!description":"Creates a new entry object which is described by the metadata of the entity type of the\nspecified sPath Name. A context object is returned which can be used to bind\nagainst the newly created object.\n\nFor each created entry a request is created and stored in a request queue.\nThe request queue can be submitted by calling submitChanges. To delete a created\nentry from the request queue call deleteCreateEntry.\n\nThe optional properties parameter can be used as follows:\n\n  - properties could be an array containing the property names which should be included\n    in the new entry. Other properties defined in the entity type are not included.\n  - properties could be an object which includes the desired properties and the values\n    which should be used for the created entry.\n\nIf properties is not specified, all properties in the entity type will be included in the\ncreated entry.\n\nIf there are no values specified the properties will have undefined values.\n\nPlease note that deep creates (including data defined by navigationproperties) are not supported","!type":"fn(sPath: String, mParameters: map) -> sap.ui.model.Context","!category":"function"},"attachAnnotationsLoaded":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"metadataLoaded":{"!description":"Returns a promise for the loaded state of the metadata. The promise won't get rejected in case the metadata loading failed but\nis only resolved if the metadata is loaded successfully.\nIf <code>refreshMetadata<\/code> function is called after this promise is already resolved you should rely on the promise returned by\n<code>refreshMetadata<\/code> to get information about the refreshed metadata loaded state.","!type":"fn() -> Promise","!category":"function"},"attachMetadataLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'metadataLoaded' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"attachBatchRequestFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'batchRequestFailed' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"fireMetadataLoaded":{"!description":"Fire event metadataLoaded to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"setChangeBatchGroups":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Deprecated since 1.32 use<br>Definition of batchGroups per EntityType for \"TwoWay\" changes","!type":"fn(mGroups: map)","!category":"function"},"create":{"!description":"Trigger a POST request to the odata service that was specified in the model constructor. Please note that deep creates are not supported\nand may not work.","!type":"fn(sPath: String, oData: Object, mParameters?: map) -> Object","!category":"function"},"fireBatchRequestFailed":{"!description":"Fire event batchRequestFailed to attached listeners.","!type":"fn(mArguments: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"setRefreshAfterChange":{"!description":"Enable/Disable automatic updates of all Bindings after change operations","!type":"fn(bRefreshAfterChange: Boolean)","!category":"function"},"addAnnotationUrl":{"!description":"Adds (a) new URL(s) to the be parsed for OData annotations, which are then merged into the annotations object\nwhich can be retrieved by calling the getServiceAnnotations()-method. If a $metadata url is passed the data will \nalso be merged into the metadata object, which can be reached by calling the getServiceMetadata() method.","!type":"fn(vUrl: [String | sting]) -> Promise","!category":"function"},"detachAnnotationsLoaded":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"getData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined please use {@link #getProperty} instead<br>Return requested data as object if the data has already been loaded and stored in the model.","!type":"fn(sPath: String, oContext?: Object, bIncludeExpandEntries?: Boolean) -> Object","!category":"function"},"getDefaultCountMode":{"!description":"Returns the default count mode for retrieving the count of collections","!type":"fn() -> sap.ui.model.odata.CountMode","!category":"function"},"getProperty":{"!description":"Returns the value for the property with the given <code>sPath<\/code>.\nIf the path points to a navigation property which has been loaded via $expand then the <code>bIncludeExpandEntries<\/code>\nparameter determines if the navigation property should be included in the returned value or not. \nPlease note that this currently works for 1..1 navigation properties only.","!type":"fn(sPath: String, oContext?: Object, bIncludeExpandEntries?: Boolean) -> Object","!category":"function"},"hasPendingChanges":{"!description":"Checks if there exist pending changes in the model created by the setProperty method.","!type":"fn() -> Boolean","!category":"function"},"createKey":{"!description":"Creates the key from the given collection name and property map. Please make sure that the metadata document is loaded before using this function.","!type":"fn(sCollection: String, oKeyProperties: Object) -> String","!category":"function"},"getDeferredBatchGroups":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Deprecated since 1.32 use<br>Returns the array of batchGroupIds that are set as deferred","!type":"fn() -> Array","!category":"function"},"!proto":"sap.ui.model.Model","update":{"!description":"Trigger a PUT/MERGE request to the odata service that was specified in the model constructor.\nThe update method used is defined by the global <code>defaultUpdateMethod<\/code> parameter which is sap.ui.model.odata.UpdateMethod.Merge by default.\nPlease note that deep updates are not supported and may not work. These should be done seperate on the entry directly.","!type":"fn(sPath: String, oData: Object, mParameters?: map) -> Object","!category":"function"},"submitChanges":{"!description":"Submits the collected changes which were collected by the setProperty method. The update method is defined by the global <code>defaultUpdateMethod<\/code>\nparameter which is sap.ui.model.odata.UpdateMethod.Merge by default. In case of a sap.ui.model.odata.UpdateMethod.Merge request only the changed properties will be updated.\nIf a URI with a $expand System Query Option was used then the expand entries will be removed from the collected changes.\nChanges to this entries should be done on the entry itself. So no deep updates are supported.","!type":"fn(mParameters?: Object) -> Object","!category":"function"},"remove":{"!description":"Trigger a DELETE request to the odata service that was specified in the model constructor.","!type":"fn(sPath: String, mParameters?: Object) -> Object","!category":"function"},"fireAnnotationsLoaded":{"!description":"Fire event annotationsLoaded to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"setDeferredBatchGroups":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Deprecated since 1.32 use<br>Setting batch groups as deferred. Requests that belongs to a deferred batch group will be sent manually\nvia a submitChanges call.","!type":"fn(aGroupIds: Array)","!category":"function"},"getChangeGroups":{"!description":"Returns the definition of groups per EntityType for TwoWay changes","!type":"fn() -> map","!category":"function"},"getServiceAnnotations":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn() -> Object","!category":"function"},"setChangeGroups":{"!description":"Definition of batchGroups per EntityType for \"TwoWay\" changes","!type":"fn(mGroups: map)","!category":"function"},"destroy":{"!type":"fn()","!category":"function"},"attachAnnotationsFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'annotationsFailed' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"!category":"class","getHeaders":{"!description":"Returns all headers and custom headers which are stored in the OData model.","!type":"fn() -> Object","!category":"function"},"read":{"!description":"Trigger a GET request to the odata service that was specified in the model constructor.\nThe data will be stored in the model. The requested data is returned with the response.","!type":"fn(sPath: String, mParameters?: map) -> Object","!category":"function"},"detachBatchRequestFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'batchRequestFailed' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"attachMetadataFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'metadataFailed' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"fireMetadataFailed":{"!description":"Fire event metadataFailed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"detachAnnotationsFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'annotationsFailed' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"setDeferredGroups":{"!description":"Setting request groups as deferred. Requests that belongs to a deferred group will be sent manually\nvia a submitChanges call.","!type":"fn(aGroupIds: Array)","!category":"function"},"attachBatchRequestCompleted":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'batchRequestCompleted' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"getETag":{"!description":"Returns the ETag for a given binding path/context or data object","!type":"fn(sPath?: String, oContext?: sap.ui.model.Context, oEntity?: Object) -> String","!category":"function"},"callFunction":{"!description":"Trigger a request to the function import odata service that was specified in the model constructor.\n\nIf the ReturnType of the function import is either an EntityType or a collection of EntityType the\nchanges are reflected in the model, otherwise they are ignored, and the <code>response<\/code> can\nbe processed in the successHandler.","!type":"fn(sFunctionName: String, mParameters?: map) -> Object","!category":"function"},"setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model.\n\nIf the changeBatchGroup for the changed EntityType is set to deferred changes could be submitted\nwith submitChanges. Otherwise the change will be submitted directly.","!type":"fn(sPath: String, oValue: Object, oContext?: Object, bAsyncUpdate?: Boolean) -> Boolean","!category":"function"},"refreshMetadata":{"!description":"Refreshes the metadata for model, e.g. in case the request for metadata has failed. \nReturns a new promise which can be resolved or rejected depending on the metadata loading state.","!type":"fn() -> Promise","!category":"function"},"getDeferredGroups":{"!description":"Returns the array of GroupIds that are set as deferred","!type":"fn() -> Array","!category":"function"},"updateBindings":{"!description":"update all bindings","!type":"fn(bForceUpdate?: Boolean)","!category":"function"},"refreshSecurityToken":{"!description":"refresh XSRF token by performing a GET request against the service root URL.","!type":"fn(fnSuccess?: fn(), fnError?: fn()) -> Object","!category":"function"},"!description":"Model implementation for oData format","fireAnnotationsFailed":{"!description":"Fire event annotationsFailed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"detachMetadataLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'metadataLoaded' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"fireBatchRequestSent":{"!description":"Fire event batchRequestSent to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"attachBatchRequestSent":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'requestSent' event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"fireBatchRequestCompleted":{"!description":"Fire event batchRequestCompleted to attached listeners.","!type":"fn(mArguments: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.search":{"suggestUrl":{"!description":"The URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used.","!type":"sap.ui.core.URI","!category":"enum"},"icon":{"!description":"Icon of the Search Provider","!type":"String","!category":"enum"},"!category":"namespace","OpenSearchProvider":"sap.ui.core.search.OpenSearchProvider_obj","SearchProvider":"sap.ui.core.search.SearchProvider_obj","suggestType":{"!description":"The type of data which is provided by the given suggestUrl: either 'json' or 'xml'.","!type":"String","!category":"enum"}},"sap.ui.core.util.serializer.Serializer":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.Serializer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.base.Interface_obj":{"!type":"fn(oObject: sap.ui.base.Object, aMethods: [String])","prototype":"sap.ui.base.Interface"},"sap.ui.Device.browser.BROWSER":{"ANDROID":{"!description":"Android stock browser name.","!type":"String","!category":"enum"},"!description":"Enumeration containing the names of known browsers.","SAFARI":{"!description":"Safari browser name.","!type":"String","!category":"enum"},"FIREFOX":{"!description":"Firefox browser name.","!type":"String","!category":"enum"},"!category":"namespace","EDGE":{"!description":"Edge browser name.","!type":"String","!category":"enum"},"CHROME":{"!description":"Chrome browser name.","!type":"String","!category":"enum"},"INTERNET_EXPLORER":{"!description":"Internet Explorer browser name.","!type":"String","!category":"enum"}},"sap.ui.core.EventBus":{"destroy":{"!description":"Cleans up the internal structures and removes all event handlers.\n\nThe object must not be used anymore after destroy was called.","!type":"fn()","!category":"function"},"subscribeOnce":{"!description":"Attaches an event handler, called one time only, to the event with the given identifier on the given event channel.\n\nWhen the event occurs, the handler function is called and the handler registration is automatically removed afterwards.","!type":"fn(sChannelId?: String, sEventId: String, fnFunction: fn(), oListener?: Object) -> sap.ui.core.EventBus","!category":"function"},"!description":"Provides eventing capabilities for applications like firing events and attaching or detaching event\n       handlers for events which are notified when events are fired.","subscribe":{"!description":"Attaches an event handler to the event with the given identifier on the given event channel.","!type":"fn(sChannelId?: String, sEventId: String, fnFunction: fn(), oListener?: Object) -> sap.ui.core.EventBus","!category":"function"},"!category":"class","publish":{"!description":"Fires an event using the specified settings and notifies all attached event handlers.","!type":"fn(sChannelId?: String, sEventId: String, oData?: Object)","!category":"function"},"unsubscribe":{"!description":"Removes a previously subscribed event handler from the event with the given identifier on the given event channel.\n\nThe passed parameters must match those used for registration with {@link #subscribe } beforehand!","!type":"fn(sChannelId?: String, sEventId: String, fnFunction: fn(), oListener?: Object) -> sap.ui.core.EventBus","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.EventBus.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.message.MessageProcessor_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageProcessor with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.message.MessageProcessor"},"sap.ui.model.ClientTreeBindingAdapter":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.Device.media":{"!description":"Event API for screen width changes.\n\nThis API is based on media queries but can also be used if media queries are not natively supported by the used browser.\nIn this case, the behavior of media queries is simulated by this API.\n\nThere are several predefined {@link sap.ui.Device.media.RANGESETS range sets} available. Each of them defines a\nset of intervals for the screen width (from small to large). Whenever the screen width changes and the current screen width is in\na different interval to the one before the change, the registered event handlers for the range set are called.\n\nIf needed, it is also possible to define a custom set of intervals.\n\nThe following example shows a typical use case:\n<pre>\nfunction sizeChanged(mParams) {\n    switch(mParams.name) {\n        case \"Phone\":\n            // Do what is needed for a little screen\n            break;\n        case \"Tablet\":\n            // Do what is needed for a medium sized screen\n            break;\n        case \"Desktop\":\n            // Do what is needed for a large screen\n    }\n}\n\n// Register an event handler to changes of the screen size\nsap.ui.Device.media.attachHandler(sizeChanged, null, sap.ui.Device.media.RANGESETS.SAP_STANDARD);\n// Do some initialization work based on the current size\nsizeChanged(sap.ui.Device.media.getCurrentRange(sap.ui.Device.media.RANGESETS.SAP_STANDARD));\n<\/pre>","detachHandler":{"!description":"Removes a previously attached event handler from the change events of the screen width.\n\nThe passed parameters must match those used for registration with {@link #attachHandler} beforehand.","!type":"fn(fnFunction: fn(), oListener?: Object, sName: String)","!category":"function"},"RANGESETS":"sap.ui.Device.media.RANGESETS","removeRangeSet":{"!description":"Removes a previously initialized range set and detaches all registered handlers.\n\nOnly custom range sets can be removed via this function. Initialized predefined range sets\n({@link sap.ui.Device.media#RANGESETS}) cannot be removed.","!type":"fn(sName: String)","!category":"function"},"!category":"namespace","initRangeSet":{"!description":"Initializes a screen width media query range set.\n\nThis initialization step makes the range set ready to be used for one of the other functions in namespace <code>sap.ui.Device.media<\/code>.\nThe most important {@link sap.ui.Device.media.RANGESETS predefined range sets} are initialized automatically.\n\nTo make a not yet initialized {@link sap.ui.Device.media.RANGESETS predefined range set} ready to be used, call this function with the\nname of the range set to be initialized:\n<pre>\nsap.ui.Device.media.initRangeSet(sap.ui.Device.media.RANGESETS.SAP_3STEPS);\n<\/pre>\n\nAlternatively it is possible to define custom range sets as shown in the following example:\n<pre>\nsap.ui.Device.media.initRangeSet(\"MyRangeSet\", [200, 400], \"px\", [\"Small\", \"Medium\", \"Large\"]);\n<\/pre>\nThis example defines the following named ranges:\n<ul>\n<li><code>\"Small\"<\/code>: For screens smaller than 200 pixels.<\/li>\n<li><code>\"Medium\"<\/code>: For screens greater than or equal to 200 pixels and smaller than 400 pixels.<\/li>\n<li><code>\"Large\"<\/code>: For screens greater than or equal to 400 pixels.<\/li>\n<\/ul>\nThe range names are optional. If they are specified a CSS class (e.g. <code>sapUiMedia-MyRangeSet-Small<\/code>) is also\nadded to the document root depending on the current active range. This can be suppressed via parameter <code>bSuppressClasses<\/code>.","!type":"fn(sName: String, aRangeBorders?: [Number], sUnit?: String, aRangeNames?: [String], bSuppressClasses?: Boolean)","!category":"function"},"hasRangeSet":{"!description":"Returns <code>true<\/code> if a range set with the given name is already initialized.","!type":"fn(sName: String) -> Boolean","!category":"function"},"attachHandler":{"!description":"Registers the given event handler to change events of the screen width based on the range set with the specified name.\n\nThe event is fired whenever the screen width changes and the current screen width is in\na different interval of the given range set than before the width change.\n\nThe event handler is called with a single argument: a map <code>mParams<\/code> which provides the following information\nabout the entered interval:\n<ul>\n<li><code>mParams.from<\/code>: The start value (inclusive) of the entered interval as a number<\/li>\n<li><code>mParams.to<\/code>: The end value (exclusive) range of the entered interval as a number or undefined for the last interval (infinity)<\/li>\n<li><code>mParams.unit<\/code>: The unit used for the values above, e.g. <code>\"px\"<\/code><\/li>\n<li><code>mParams.name<\/code>: The name of the entered interval, if available<\/li>\n<\/ul>","!type":"fn(fnFunction: fn(), oListener?: Object, sName: String)","!category":"function"},"getCurrentRange":{"!description":"Returns information about the current active range of the range set with the given name.","!type":"fn(sName: String) -> map","!category":"function"}},"sap.ui.model.analytics.odata4analytics.Measure":{"getUnitProperty":{"!description":"Get the unit property related to this measure","!type":"fn() -> Object","!category":"function"},"getFormattedValueProperty":{"!description":"Get the text property associated to the raw value property holding the\nformatted value related to this measure","!type":"fn() -> Object","!category":"function"},"!description":"Representation of a property annotated with\n       sap:aggregation-role=\"measure\".","isUpdatable":{"!description":"Get indicator whether or not the measure is updatable","!type":"fn() -> Boolean","!category":"function"},"getName":{"!description":"Get the name of the measure","!type":"fn() -> String","!category":"function"},"!category":"class","getRawValueProperty":{"!description":"Get the raw value property","!type":"fn() -> Object","!category":"function"},"getLabelText":{"!description":"Get label","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.message.MessageModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.message.MessageModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oMessageManager: sap.ui.core.message.MessageManager)","prototype":"sap.ui.model.message.MessageModel"},"sap.ui.core.util.ExportColumn_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportColumn with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportColumn"},"sap.ui.core.HorizontalAlign":{"Right":{"!description":"Hard option for right alignment","!type":"String","!category":"enum"},"End":{"!description":"Locale-specific positioning at the end of the line","!type":"String","!category":"enum"},"!description":"Configuration options for horizontal alignments of controls","!category":"static class","Center":{"!description":"Centered alignment of text","!type":"String","!category":"enum"},"Begin":{"!description":"Locale-specific positioning at the beginning of the line","!type":"String","!category":"enum"},"Left":{"!description":"Hard option for left alignment","!type":"String","!category":"enum"}},"sap.ui.core.Component_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Component with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Component"},"sap.ui.model.odata.UpdateMethod":{"!description":"Different methods for update operations","Put":{"!description":"PUT method will send update requests in a PUT request","!type":"String","!category":"enum"},"!category":"namespace","Merge":{"!description":"MERGE method will send update requests in a MERGE request","!type":"String","!category":"enum"}},"sap.ui.core.Dock":{"!description":"Docking position: horizontal/vertical.\n\nDefines a position on the element which is used for aligned positioning of another element (e.g. the left top\ncorner of a popup is positioned at the left bottom corner of the input field). For the horizontal position possible values\nare \"begin\", \"left\", \"center\", \"right\" and \"end\", where left/right always are left and right, or begin/end which are\ndependent on the text direction. For the vertical position possible values are \"top\", \"center\" and \"bottom\".\nExamples: \"left top\", \"end bottom\", \"center center\".","!category":"namespace"},"sap.ui.core.TextDirection":{"RTL":{"!description":"Specifies right-to-left text direction.","!type":"String","!category":"enum"},"Inherit":{"!description":"Inherits the direction from its parent control/container.","!type":"String","!category":"enum"},"!description":"Configuration options for the direction of texts.","!category":"static class","LTR":{"!description":"Specifies left-to-right text direction.","!type":"String","!category":"enum"}},"sap.ui.core.UIComponent":{"onAfterRendering":{"!description":"Function is called when the rendering of the Component Container is completed.\n\nApplications must not call this hook method directly, it is called from ComponentContainer.\n\nSubclasses of UIComponent override this hook to implement any necessary actions after the rendering.","!type":"fn()","!category":"function"},"onBeforeRendering":{"!description":"Function is called when the rendering of the Component Container is started.\n\nApplications must not call this hook method directly, it is called from ComponentContainer.\n\nSubclasses of UIComponent override this hook to implement any necessary actions before the rendering.","!type":"fn()","!category":"function"},"createContent":{"!description":"The method to create the Content (UI Control Tree) of the Component.\nThis method has to be overwritten in the implementation of the component\nif the root view is not declared in the component metadata.","!type":"fn()","!category":"function"},"init":{"!description":"Initializes the Component instance after creation.\n\nApplications must not call this hook method directly, it is called by the\nframework while the constructor of an Component is executed.\n\nSubclasses of Component should override this hook to implement any necessary\ninitialization. <b>When overriding this function make sure to invoke the\ninit function of the UIComponent as well!<\/b>","!type":"fn()","!category":"function"},"getEventingParent":{"!type":"fn()","!category":"function"},"getUIArea":{"!description":"Returns the reference to the UIArea of the container.","!type":"fn() -> sap.ui.core.UIArea","!category":"function"},"render":{"!description":"Renders the the root control of the UIComponent.","!type":"fn(oRenderManager: sap.ui.core.RenderManager)","!category":"function"},"setContainer":{"!description":"Sets the reference to the ComponentContainer - later required for the\ndetermination of the UIArea for the UIComponent.","!type":"fn(oContainer: sap.ui.core.ComponentContainer) -> sap.ui.core.UIComponent","!category":"function"},"!description":"Creates and initializes a new UI component with the given <code>sId<\/code> and\nsettings.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there. See {@link sap.ui.core.Component}\nfor a general description of this argument.","byId":{"!description":"Returns an Element by its id in the context of the Component","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function"},"getRouterFor":{"!description":"Returns the reference to the router instance. The passed controller or view\nhave to be created in the context of a UIComponent to return the router\ninstance. Otherwise this function will return undefined.\nYou may define the routerClass property in the config section of the routing to make the Component create your router extension.\neg:\nrouting: {\n\tconfig: {\n\t\trouterClass : myAppNamespace.MyRouterClass\n\t\t...\n}\n...","!type":"fn(oControllerOrView: sap.ui.core.mvc.View | sap.ui.core.mvc.Controller) -> sap.ui.core.routing.Router","!category":"function"},"getAutoPrefixId":{"!description":"A method to be implemented by UIComponents, returning the flag whether to prefix\nthe IDs of controls automatically or not if the controls are created inside\nthe {@link sap.ui.core.UIComponent#createContent} function. By default this\nfeature is not activated.\n\nYou can overwrite this function and return true to activate the automatic\nprefixing.","!type":"fn() -> Boolean","!category":"function"},"getTargets":{"!description":"Returns the reference to the targets instance which has been created by\nthe UIComponent once the targets in the routing metadata has been defined.\nIf routes have been defined, it will be the targets instance created and used by the router.","!type":"fn() -> sap.ui.core.routing.Targets","!category":"function"},"!category":"class","getRouter":{"!description":"Returns the reference to the router instance which has been created by\nthe UIComponent once the routes in the routing metadata has been defined.","!type":"fn() -> sap.ui.core.routing.Router","!category":"function"},"!proto":"sap.ui.core.Component","createId":{"!description":"Creates an id for an Element prefixed with the component id","!type":"fn(sId: String) -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.UIComponent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.util.ExportType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportType with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportType"},"sap.ui.model.FilterOperator":{"EndsWith":{"!description":"FilterOperator ends with","!type":"String","!category":"enum"},"GT":{"!description":"FilterOperator greater than","!type":"String","!category":"enum"},"GE":{"!description":"FilterOperator greater or equals","!type":"String","!category":"enum"},"LT":{"!description":"FilterOperator less than","!type":"String","!category":"enum"},"!description":"Operators for the Filter.","EQ":{"!description":"FilterOperator equals","!type":"String","!category":"enum"},"BT":{"!description":"FilterOperator between.\nWhen used on strings, the BT operator might not behave intuitively. For example, \nwhen filtering a list of Names with BT \"A\", \"B\", all Names starting with \"A\" will be \nincluded as well as the name \"B\" itself, but no other name starting with \"B\".","!type":"String","!category":"enum"},"!category":"namespace","StartsWith":{"!description":"FilterOperator starts with","!type":"String","!category":"enum"},"LE":{"!description":"FilterOperator less or equals","!type":"String","!category":"enum"},"Contains":{"!description":"FilterOperator contains","!type":"String","!category":"enum"},"NE":{"!description":"FilterOperator not equals","!type":"String","!category":"enum"}},"sap.ui.core.ws.SapPcpWebSocket":{"fireMessage":{"!description":"Fire event 'message' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.SapPcpWebSocket","!category":"function"},"send":{"!description":"Sends a message and optional pcp-header-fields using the pcp-protocol.<br>\n<br>\nIf the connection is not yet opened, the message will be queued and sent\nwhen the connection is established.","!type":"fn(message: String | blob | arraybuffer, oPcpFields?: Object) -> sap.ui.core.ws.SapPcpWebSocket","!category":"function"},"!description":"WebSocket class implementing the pcp-protocol","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ws.SapPcpWebSocket.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.ws.WebSocket"},"sap.ui.core.CSSSizeShortHand":{"!description":"This type checks the short hand form of a margin or padding definition. \n\nE.g. \"1px 1px\" or up to four CSSSize values are allowed or tHe special keyword <code>inherit<\/code>.","!category":"namespace"},"sap.ui.model.odata.ODataModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sServiceUrl?: String, mParameters?: Object)","prototype":"sap.ui.model.odata.ODataModel"},"sap.ui.model.odata.ODataModel":{"getKey":{"!description":"Returns the key part from the entry URI or the given context or object","!type":"fn(oObject: Object | sap.ui.model.Context, bDecode: Boolean)","!category":"function"},"getSecurityToken":{"!description":"Returns the current security token. If the token has not been requested from the server it will be requested first.","!type":"fn() -> String","!category":"function"},"addAnnotationXML":{"!description":"Adds new xml content to be parsed for OData annotations, which are then merged into the annotations object which\ncan be retrieved by calling the getServiceAnnotations()-method.","!type":"fn(sXMLContent: String, bSuppressEvents?: Boolean) -> Promise","!category":"function"},"getMetaModel":{"!description":"Returns an instance of an OData meta model which offers a unified access to both OData v2\nmeta data and v4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata}\nas a foundation and merges v4 annotations from the existing\n{@link sap.ui.model.odata.ODataAnnotations} directly into the corresponding model element.\n\n<b>BEWARE:<\/b> Access to this OData meta model will fail before the promise returned by\n{@link sap.ui.model.odata.ODataMetaModel#loaded loaded} has been resolved!","!type":"fn() -> sap.ui.model.odata.ODataMetaModel","!category":"function"},"resetChanges":{"!description":"\nResets the collected changes by the setProperty method and reloads the data from the server.","!type":"fn(fnSuccess?: fn(), fnError?: fn())","!category":"function"},"forceNoCache":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined The caching should be controlled by the backend by setting the correct cache control header<br>Force no caching","!type":"fn(bForceNoCache?: Boolean)","!category":"function"},"deleteCreatedEntry":{"!description":"Deletes a created entry from the request queue and the model.","!type":"fn(oContext: sap.ui.model.Context)","!category":"function"},"detachMetadataFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'metadataFailed' event of this <code>sap.ui.model.odata.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"setDefaultCountMode":{"!description":"Sets the default way to retrieve the count of collections in this model.\nCount can be determined either by sending a separate $count request, including\n$inlinecount=allpages in data requests, both of them or not at all.","!type":"fn(sCountMode: sap.ui.model.odata.CountMode)","!category":"function"},"setUseBatch":{"!description":"Enable/Disable batch for all requests","!type":"fn(bUseBatch?: Boolean)","!category":"function"},"getServiceMetadata":{"!description":"Return the metadata object. Please note that when using the model with bLoadMetadataAsync = true then this function might return undefined because the\nmetadata has not been loaded yet.\nIn this case attach to the <code>metadataLoaded<\/code> event to get notified when the metadata is available and then call this function.","!type":"fn() -> Object","!category":"function"},"refresh":{"!description":"Refresh the model.\nThis will check all bindings for updated data and update the controls if data has been changed.","!type":"fn(bForceUpdate?: Boolean, bRemoveData?: Boolean)","!category":"function"},"setTokenHandlingEnabled":{"!description":"Enable/Disable XCSRF-Token handling","!type":"fn(bTokenHandling?: Boolean)","!category":"function"},"createEntry":{"!description":"Creates a new entry object which is described by the metadata of the entity type of the\nspecified sPath Name. A context object is returned which can be used to bind\nagainst the newly created object.\n\nFor each created entry a request is created and stored in a request queue.\nThe request queue can be submitted by calling submitChanges. To delete a created\nentry from the request queue call deleteCreateEntry.\n\nThe optional vProperties parameter can be used as follows:\n\n  - vProperties could be an array containing the property names which should be included\n    in the new entry. Other properties defined in the entity type are not included.\n  - vProperties could be an object which includes the desired properties and the values\n    which should be used for the created entry.\n\nIf vProperties is not specified, all properties in the entity type will be included in the\ncreated entry.\n\nIf there are no values specified the properties will have undefined values.\n\nPlease note that deep creates (including data defined by navigationproperties) are not supported","!type":"fn(sPath: String, vProperties: Array | Object) -> sap.ui.model.Context","!category":"function"},"setHeaders":{"!description":"Set custom headers which are provided in a key/value map. These headers are used for requests against the OData backend.\nPrivate headers which are set in the ODataModel cannot be modified.\nThese private headers are: accept, accept-language, x-csrf-token, MaxDataServiceVersion, DataServiceVersion.\n\nTo remove these headers simply set the mCustomHeaders parameter to null. Please also note that when calling this method again all previous custom headers\nare removed unless they are specified again in the mCustomHeaders parameter.","!type":"fn(mHeaders: Object)","!category":"function"},"attachAnnotationsLoaded":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"attachMetadataLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'metadataLoaded' event of this <code>sap.ui.model.odata.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"fireMetadataLoaded":{"!description":"Fire event metadataLoaded to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"create":{"!description":"Trigger a POST request to the odata service that was specified in the model constructor. Please note that deep creates are not supported\nand may not work.","!type":"fn(sPath: String, oData: Object, mParameters?: map) -> Object","!category":"function"},"setRefreshAfterChange":{"!description":"Enable/Disable automatic updates of all Bindings after change operations","!type":"fn(bRefreshAfterChange: Boolean)","!category":"function"},"addAnnotationUrl":{"!description":"Adds (a) new URL(s) to the be parsed for OData annotations, which are then merged into the annotations object\nwhich can be retrieved by calling the getServiceAnnotations()-method. If a $metadata url is passed the data will \nalso be merged into the metadata object, which can be reached by calling the getServiceMetadata() method.","!type":"fn(vUrl: [String | sting]) -> Promise","!category":"function"},"detachAnnotationsLoaded":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"getData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined please use {@link #getProperty} instead<br>Return requested data as object if the data has already been loaded and stored in the model.","!type":"fn(sPath: String, oContext?: Object, bIncludeExpandEntries?: Boolean) -> Object","!category":"function"},"getDefaultCountMode":{"!description":"Returns the default count mode for retrieving the count of collections","!type":"fn() -> sap.ui.model.odata.CountMode","!category":"function"},"getProperty":{"!description":"Returns the value for the property with the given <code>sPath<\/code>.\nIf the path points to a navigation property which has been loaded via $expand then the <code>bIncludeExpandEntries<\/code>\nparameter determines if the navigation property should be included in the returned value or not. \nPlease note that this currently works for 1..1 navigation properties only.","!type":"fn(sPath: String, oContext?: Object, bIncludeExpandEntries?: Boolean) -> Object","!category":"function"},"createKey":{"!description":"Creates the key from the given collection name and property map","!type":"fn(sCollection: String, oKeyParameters: Object, bDecode: Boolean)","!category":"function"},"hasPendingChanges":{"!description":"Checks if there exist pending changes in the model created by the setProperty method.","!type":"fn() -> Boolean","!category":"function"},"!proto":"sap.ui.model.Model","update":{"!description":"Trigger a PUT/MERGE request to the odata service that was specified in the model constructor. Please note that deep updates are not supported\nand may not work. These should be done seperate on the entry directly.","!type":"fn(sPath: String, oData: Object, mParameters?: map) -> Object","!category":"function"},"submitChanges":{"!description":"Submits the collected changes which were collected by the setProperty method. A MERGE request will be triggered to only update the changed properties.\nIf a URI with a $expand System Query Option was used then the expand entries will be removed from the collected changes.\nChanges to this entries should be done on the entry itself. So no deep updates are supported.","!type":"fn(fnSuccess?: fn(), fnError?: fn(), oParameters?: Object) -> Object","!category":"function"},"fireAnnotationsLoaded":{"!description":"Fire event annotationsLoaded to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"remove":{"!description":"Trigger a DELETE request to the odata service that was specified in the model constructor.","!type":"fn(sPath: String, mParameters?: Object) -> Object","!category":"function"},"clearBatch":{"!description":"Removes all operations in the current batch.","!type":"fn()","!category":"function"},"getServiceAnnotations":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn() -> Object","!category":"function"},"destroy":{"!type":"fn()","!category":"function"},"attachAnnotationsFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'annotationsFailed' event of this <code>sap.ui.model.odata.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"submitBatch":{"!description":"Submits the collected changes in the batch which were collected via <code>addBatchReadOperations<\/code> or <code>addBatchChangeOperations<\/code>.\nThe batch will be cleared afterwards. If the batch is empty no request will be performed and false will be returned.\nNote: No data will be stored in the model.","!type":"fn(fnSuccess?: fn(), fnError?: fn(), bAsync?: Boolean, bImportData: Boolean) -> Object","!category":"function"},"!category":"class","getHeaders":{"!description":"Returns all headers and custom headers which are stored in the OData model.","!type":"fn() -> Object","!category":"function"},"read":{"!description":"Trigger a GET request to the odata service that was specified in the model constructor.\nThe data will not be stored in the model. The requested data is returned with the response.","!type":"fn(sPath: String, mParameters?: map) -> Object","!category":"function"},"addBatchReadOperations":{"!description":"Appends the read batch operations to the end of the batch stack. Only GET batch operations should be included in the specified array.\nIf an illegal batch operation is added to the batch nothing will be performed and false will be returned.","!type":"fn(aReadOperations: [Object])","!category":"function"},"attachMetadataFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'metadataFailed' event of this <code>sap.ui.model.odata.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"fireMetadataFailed":{"!description":"Fire event metadataFailed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"detachAnnotationsFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'annotationsFailed' event of this <code>sap.ui.model.odata.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"isCountSupported":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>Returns whether this model supports the $count on its collections\nThis method is deprecated, please use getDefaultCountMode instead.","!type":"fn() -> Boolean","!category":"function"},"callFunction":{"!description":"Trigger a request to the function import odata service that was specified in the model constructor.","!type":"fn(sFunctionName: String, mParameters?: map) -> Object","!category":"function"},"setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model without triggering a server request.\n This can be done by the submitChanges method.\n\n Note: Only one entry of one collection can be updated at once. Otherwise a fireRejectChange event is fired.\n\n Before updating a different entry the existing changes of the current entry have to be submitted or resetted by the\n corresponding methods: submitChanges, resetChanges.\n\n IMPORTANT: All pending changes are resetted in the model if the application triggeres any kind of refresh\n on that entry. Make sure to submit the pending changes first. To determine if there are any pending changes call the hasPendingChanges method.","!type":"fn(sPath: String, oValue: Object, oContext?: Object, bAsyncUpdate?: Boolean) -> Boolean","!category":"function"},"refreshMetadata":{"!description":"refreshes the metadata for model, e.g. in case the first request for metadata has failed","!type":"fn()","!category":"function"},"updateBindings":{"!description":"update all bindings","!type":"fn(bForceUpdate?: Boolean)","!category":"function"},"addBatchChangeOperations":{"!description":"Appends the change batch operations to the end of the batch stack. Only PUT, POST or DELETE batch operations should be included in the specified array.\nThe operations in the array will be included in a single changeset. To embed change operations in different change sets call this method with the corresponding change operations again.\nIf an illegal batch operation is added to the change set nothing will be performed and false will be returned.","!type":"fn(aChangeOperations: [Object])","!category":"function"},"refreshSecurityToken":{"!description":"refresh XSRF token by performing a GET request against the service root URL.","!type":"fn(fnSuccess?: fn(), fnError?: fn(), bAsync?: Boolean) -> Object","!category":"function"},"!description":"Model implementation for oData format\nBinding to V4 metadata annotations is experimental!","createBatchOperation":{"!description":"Creates a single batch operation (read or change operation) which can be used in a batch request.","!type":"fn(sPath: String, sMethod: String, oData?: Object, oParameters?: Object)","!category":"function"},"fireAnnotationsFailed":{"!description":"Fire event annotationsFailed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"detachMetadataLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'metadataLoaded' event of this <code>sap.ui.model.odata.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataModel","!category":"function"},"setCountSupported":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>Sets whether this OData service supports $count on its collections.\nThis method is deprecated, please use setDefaultCountMode instead.","!type":"fn(bCountSupported: Boolean)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.xml.XMLModel":{"setXML":{"!description":"Sets the specified XML formatted string text to the model","!type":"fn(sXMLText: String)","!category":"function"},"getXML":{"!description":"Serializes the current XML data of the model into a string.","!type":"fn()","!category":"function"},"!description":"Model implementation for XML format","getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function"},"!category":"class","setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model.\nIf the model value changed all interested parties are informed.","!type":"fn(sPath: String, oValue: Object, oContext?: Object, bAsyncUpdate?: Boolean) -> Boolean","!category":"function"},"setNameSpace":{"!description":"Sets an XML namespace to use in the binding path","!type":"fn(sNameSpace: String, sPrefix?: String)","!category":"function"},"setData":{"!description":"Sets the provided XML encoded data object to the model","!type":"fn(oData: Object)","!category":"function"},"loadData":{"!description":"Load XML-encoded data from the server using a GET HTTP request and store the resulting XML data in the model.\nNote: Due to browser security restrictions, most \"Ajax\" requests are subject to the same origin policy,\nthe request can not successfully retrieve data from a different domain, subdomain, or protocol.","!type":"fn(sURL: String, oParameters?: Object | String, bAsync?: Boolean, sType?: String, bCache?: String, mHeaders: Object)","!category":"function"},"getObject":{"!description":"Returns the object for the given <code>path<\/code>","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.xml.XMLModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.Model"},"sap.ui.core.BusyIndicatorUtils":{"!category":"namespace"},"sap.ui.model.odata.AnnotationHelper":{"resolvePath":{"!description":"Helper function for a <code>template:with<\/code> instruction that resolves a dynamic\n\"14.5.2 Expression edm:AnnotationPath\",\n\"14.5.11 Expression edm:NavigationPropertyPath\", \"14.5.12 Expression edm:Path\" or\n\"14.5.13 Expression edm:PropertyPath\".\nCurrently supports navigation properties and term casts.\n\nExample:\n<pre>\n  &lt;template:with path=\"meta>Value\" helper=\"sap.ui.model.odata.AnnotationHelper.resolvePath\" var=\"target\">\n<\/pre>","!type":"fn(oContext: sap.ui.model.Context) -> String","!category":"function"},"getNavigationPath":{"!description":"A formatter function to be used in a complex binding inside an XML template view\nin order to interpret OData v4 annotations. It knows about the following dynamic\nexpressions:\n<ul>\n<li>\"14.5.2 Expression edm:AnnotationPath\"<\/li>\n<li>\"14.5.11 Expression edm:NavigationPropertyPath\"<\/li>\n<li>\"14.5.12 Expression edm:Path\"<\/li>\n<li>\"14.5.13 Expression edm:PropertyPath\"<\/li>\n<\/ul>\nIt returns a binding expression for a navigation path in an OData model, starting at\nan entity.\nCurrently supports navigation properties. Term casts and annotations of\nnavigation properties terminate the navigation path.\n\nExamples:\n<pre>\n&lt;template:if test=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'}\">\n    &lt;form:SimpleForm binding=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'}\" />\n&lt;/template:if>\n<\/pre>","!type":"fn(oInterface: sap.ui.core.util.XMLPreprocessor.IContext | sap.ui.model.Context, vRawValue?: Object) -> String","!category":"function"},"!description":"A collection of methods which help to consume\n<a href=\"http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html\">\nOData v4 annotations<\/a> in XML template views.\n\nFormatter functions like {@link #.format format} and {@link #.simplePath simplePath} can\nbe used in complex bindings to turn OData v4 annotations into texts or data bindings,\ne.g. <code>&lt;sfi:SmartField value=\"{path: 'meta>Value', formatter:\n'sap.ui.model.odata.AnnotationHelper.simplePath'}\"/><\/code>.\n\nHelper functions like {@link #.resolvePath resolvePath} can be used by template\ninstructions in XML template views, e.g. <code>&lt;template:with path=\"meta>Value\"\nhelper=\"sap.ui.model.odata.AnnotationHelper.resolvePath\" var=\"target\"><\/code>.\n\nSince 1.31.0, you DO NOT need to {@link jQuery.sap.require} this module before use.","gotoFunctionImport":{"!description":"Helper function for a <code>template:with<\/code> instruction that goes to the\nfunction import with the name which <code>oContext<\/code> points at.\n\nExample: Assume that \"dataField\" refers to a DataFieldForAction within an\nOData meta model;\nthe helper function is then called on the \"Action\" property of that data field\n(which holds an object with the qualified name of the function import in the\n<code>String<\/code> property) and in turn the path of that function import\nis assigned to the variable \"function\".\n<pre>\n  &lt;template:with path=\"dataField>Action\"\n  helper=\"sap.ui.model.odata.AnnotationHelper.gotoFunctionImport\" var=\"function\">\n<\/pre>","!type":"fn(oContext: sap.ui.model.Context) -> String","!category":"function"},"gotoEntityType":{"!description":"Helper function for a <code>template:with<\/code> instruction that goes to the\nentity type with the qualified name which <code>oContext<\/code> points at.\n\nExample: Assume that \"entitySet\" refers to an entity set within an OData meta model;\nthe helper function is then called on the \"entityType\" property of that entity set\n(which holds the qualified name of the entity type) and in turn the path of that\nentity type is assigned to the variable \"entityType\".\n<pre>\n  &lt;template:with path=\"entitySet>entityType\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntityType\" var=\"entityType\">\n<\/pre>","!type":"fn(oContext: sap.ui.model.Context) -> String","!category":"function"},"isMultiple":{"!description":"A formatter function to be used in a complex binding inside an XML template view\nin order to interpret OData v4 annotations. It knows about the following dynamic\nexpressions:\n<ul>\n<li>\"14.5.2 Expression edm:AnnotationPath\"<\/li>\n<li>\"14.5.11 Expression edm:NavigationPropertyPath\"<\/li>\n<li>\"14.5.12 Expression edm:Path\"<\/li>\n<li>\"14.5.13 Expression edm:PropertyPath\"<\/li>\n<\/ul>\nIt returns the information whether the navigation path ends with an association end\nwith multiplicity \"*\". It throws an error if the navigation path has an association\nend with multiplicity \"*\" which is not the last one.\nCurrently supports navigation properties. Term casts and annotations of\nnavigation properties terminate the navigation path.\n\nExamples:\n<pre>\n&lt;template:if test=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.isMultiple'}\">\n<\/pre>","!type":"fn(oInterface: sap.ui.core.util.XMLPreprocessor.IContext | sap.ui.model.Context, vRawValue?: Object) -> String","!category":"function"},"!category":"namespace","format":{"!description":"A formatter function to be used in a complex binding inside an XML template view\nin order to interpret OData v4 annotations. It knows about\n<ul>\n  <li> the \"14.4 Constant Expressions\" for \"edm:Bool\", \"edm:Date\",\n  \"edm:DateTimeOffset\", \"edm:Decimal\", \"edm:Float\", \"edm:Guid\", \"edm:Int\",\n  \"edm:TimeOfDay\".\n  <li> the constant \"14.4.11 Expression edm:String\": This is turned into a fixed\n  text (e.g. <code>\"Width\"<\/code>) or into a data binding expression (e.g. <code>\n  \"{/##/dataServices/schema/0/entityType/1/com.sap.vocabularies.UI.v1.FieldGroup#Dimensions/Data/0/Label/String}\"\n  <\/code>). Data binding expressions are used in case XML template processing has\n  been started with the setting <code>bindTexts : true<\/code>. The purpose is to\n  reference translatable texts from OData v4 annotations, especially for XML\n  template processing at design time. Since 1.31.0, string constants that contain a\n  simple binding <code>\"{@i18n>...}\"<\/code> to the hard-coded model name \"@i18n\"\n  with arbitrary path are not turned into a fixed text, but kept as a data binding\n  expression; this allows local annotation files to refer to a resource bundle for\n  internationalization.\n  <li> the dynamic \"14.5.1 Comparison and Logical Operators\": These are turned into\n  expression bindings to perform the operations at run-time.\n  <li> the dynamic \"14.5.3 Expression edm:Apply\":\n  <ul>\n    <li> \"14.5.3.1.1 Function odata.concat\": This is turned into a data binding\n    expression relative to an entity.\n    <li> \"14.5.3.1.2 Function odata.fillUriTemplate\": This is turned into an\n    expression binding to fill the template at run-time.\n    <li> \"14.5.3.1.3 Function odata.uriEncode\": This is turned into an expression\n    binding to encode the parameter at run-time.\n    <li> Apply functions may be nested arbitrarily.\n  <\/ul>\n  <li> the dynamic \"14.5.6 Expression edm:If\": This is turned into an expression\n  binding to be evaluated at run-time. The expression is a conditional expression\n  like <code>\"{=condition ? expression1 : expression2}\"<\/code>.\n  <li> the dynamic \"14.5.10 Expression edm:Null\": This is turned into a\n  <code>null<\/code> value. In <code>odata.concat<\/code> it is ignored.\n  <li> the dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression\n  edm:PropertyPath\": This is turned into a data binding relative to an entity,\n  including type information and constraints as available from meta data,\n  e.g. <code>\"{path : 'Name', type : 'sap.ui.model.odata.type.String',\n  constraints : {'maxLength':'255'}}\"<\/code>.\n<\/ul>\nUnsupported or incorrect values are turned into a string nevertheless, but indicated\nas such. Proper escaping is used to make sure that data binding syntax is not\ncorrupted. An error describing the problem is logged to the console in such a case.\n\nExample:\n<pre>\n&lt;Text text=\"{path: 'meta>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n<\/pre>","!type":"fn(oInterface: sap.ui.core.util.XMLPreprocessor.IContext | sap.ui.model.Context, vRawValue?: Object) -> String","!category":"function"},"gotoEntitySet":{"!description":"Helper function for a <code>template:with<\/code> instruction that depending on how\nit is called goes to the entity set with the given name or to the one determined\nby the last navigation property. Supports the following dynamic expressions:\n<ul>\n<li>\"14.5.2 Expression edm:AnnotationPath\"<\/li>\n<li>\"14.5.11 Expression edm:NavigationPropertyPath\"<\/li>\n<li>\"14.5.12 Expression edm:Path\"<\/li>\n<li>\"14.5.13 Expression edm:PropertyPath\"<\/li>\n<\/ul>\n\nExample:\n<pre>\n  &lt;template:with path=\"facet>Target\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntitySet\" var=\"entitySet\"/>\n  &lt;template:with path=\"associationSetEnd>entitySet\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntitySet\" var=\"entitySet\"/>\n<\/pre>","!type":"fn(oContext: sap.ui.model.Context) -> String","!category":"function"},"createPropertySetting":{"!description":"Creates a property setting (which is either a constant value or a binding info\nobject) from the given parts and from the optional root formatter function.\nEach part can have one of the following types:\n<ul>\n  <li><code>boolean<\/code>, <code>number<\/code>, <code>undefined<\/code>: The part is\n  a constant value.\n\n  <li><code>string<\/code>: The part is a data binding expression with complex\n  binding syntax (for example, as created by {@link #.format format}) and is parsed\n  accordingly to create either a constant value or a binding info object. Proper\n  backslash escaping must be used for constant values with curly braces.\n\n  <li><code>object<\/code>: The part is a binding info object if it has a \"path\" or\n  \"parts\" property, otherwise it is a constant value.\n<\/ul>\nIf a binding info object is not the only part and has a \"parts\" property itself,\nthen it must have no other properties except \"formatter\"; this is the case for\nexpression bindings and data binding expressions created by {@link #.format format}.\n\nIf all parts are constant values, the resulting property setting is also a constant\nvalue computed by applying the root formatter function to the constant parts once.\nIf at least one part is a binding info object, the resulting property setting is\nalso a binding info object and the root formatter function will be applied again and\nagain to the current values of all parts, no matter whether constant or variable.\n\nNote: The root formatter function should not rely on its <code>this<\/code> value\nbecause it depends on how the function is called.\n\nNote: A single data binding expression can be given directly to\n{@link sap.ui.base.ManagedObject#applySettings applySettings}, no need to call this\nfunction first.\n\nExample:\n<pre>\nfunction myRootFormatter(oValue1, oValue2, sFullName, sGreeting, iAnswer) {\n    return ...; //TODO compute something useful from the given values\n}\n\noSupplierContext = oMetaModel.getMetaContext(\"/ProductSet('HT-1021')/ToSupplier\");\noValueContext = oMetaModel.createBindingContext(\"com.sap.vocabularies.UI.v1.DataPoint/Value\", oSupplierContext);\n\nvPropertySetting =  sap.ui.model.odata.AnnotationHelper.createPropertySetting([\n    sap.ui.model.odata.AnnotationHelper.format(oValueContext),\n    \"{path: 'meta>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'}\",\n    \"{:= 'Mr. ' + ${/FirstName} + ' ' + ${/LastName}}\",\n    \"hello, world!\",\n    42\n], myRootFormatter);\n\noControl.applySettings({\"someProperty\" : vPropertySetting});\n<\/pre>","!type":"fn(vParts: [Object], fnRootFormatter?: fn()) -> Object | Object","!category":"function"},"simplePath":{"!description":"Formatter function that is used in a complex binding inside an XML template view.\nThe function is used to interpret OData v4 annotations, supporting the same\nannotations as {@link #.format format} but with a simplified output aimed at\ndesign-time templating with smart controls.\n\nIn contrast to <code>format<\/code>, \"14.5.12 Expression edm:Path\" or\n\"14.5.13 Expression edm:PropertyPath\" is turned into a simple binding path without\ntype or constraint information. In certain cases, a complex binding is required to\nallow for proper escaping of the path.\n\nExample:\n<pre>\n  &lt;sfi:SmartField value=\"{path: 'meta>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'}\"/>\n<\/pre>","!type":"fn(oInterface: sap.ui.core.util.XMLPreprocessor.IContext | sap.ui.model.Context, vRawValue?: Object) -> String","!category":"function"}},"sap.ui.model.odata.ODataPropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataPropertyBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.odata.ODataPropertyBinding"},"jQuery.sap.log.Logger_obj":{"!type":"fn(sDefaultComponent: String)","prototype":"jQuery.sap.log.Logger"},"sap.ui.core.Locale_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Locale with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sLocaleId: String)","prototype":"sap.ui.core.Locale"},"sap.ui.model.analytics.odata4analytics.QueryResult_obj":{"!type":"fn(oModel: sap.ui.model.analytics.odata4analytics.Model, oEntityType: sap.ui.model.analytics.odata4analytics.EntityType, oEntitySet: sap.ui.model.analytics.odata4analytics.EntitySet, oParameterization: sap.ui.model.analytics.odata4analytics.Parameterization)","prototype":"sap.ui.model.analytics.odata4analytics.QueryResult"},"sap.ui.model.Binding":{"attachEvents":{"!description":"Attach multiple events.","!type":"fn(oEvents: Object)","!category":"function"},"isInitial":{"!description":"Returns whether the binding is initial, which means it did not get an initial value yet","!type":"fn() -> Boolean","!category":"function"},"detachChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"detachDataReceived":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'dataReceived' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"detachDataRequested":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'dataRequested' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"detachDataStateChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'dataStateChange' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"!description":"The Binding is the object, which holds the necessary information for a data binding,\nlike the binding path and the binding context, and acts like an interface to the\nmodel for the control, so it is the event provider for changes in the data model\nand provides getters for accessing properties or lists.","attachRefresh":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'refresh' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"fireDataRequested":{"!description":"Fire event dataRequested to attached listeners.","!type":"fn(mArguments: Map)","!category":"function"},"attachDataReceived":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'dataReceived' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"attachDataStateChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'dataStateChange' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"isRelative":{"!description":"Returns whether the binding is relative, which means it did not start with a /","!type":"fn() -> Boolean","!category":"function"},"attachDataRequested":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'dataRequested' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"!category":"class","attachChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"updateRequired":{"!description":"Determines if the binding should be updated by comparing the current model against a specified model.","!type":"fn(oModel: Object) -> Boolean","!category":"function"},"fireDataReceived":{"!description":"Fire event dataReceived to attached listeners. This event may also be fired when an error occured.","!type":"fn(mArguments: Map)","!category":"function"},"detachEvents":{"!description":"Detach multiple events-","!type":"fn(oEvents: Object)","!category":"function"},"refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event\nif this is the case. For server side models this should refetch the data from the server.\nTo update a control, even if no data has been changed, e.g. to reset a control after failed\nvalidation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate: Boolean)","!category":"function"},"detachRefresh":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'refresh' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"initialize":{"!description":"Initialize the binding. The message should be called when creating a binding.\nThe default implementation calls checkUpdate(true).","!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Binding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.test":{"TestUtils":"sap.ui.test.TestUtils","OpaPlugin":"sap.ui.test.OpaPlugin_obj","PageObjectFactory":"sap.ui.test.PageObjectFactory_obj","matchers":"sap.ui.test.matchers","Opa5":"sap.ui.test.Opa5_obj","Opa":"sap.ui.test.Opa_obj","!category":"namespace","config":{"!description":"the global configuration of Opa.\nAll of the global values can be overwritten in an individual waitFor call.\ndefaults are :\n<ul>\n\t\t<li>arrangements: a new Opa instance<\/li>\n\t\t<li>actions: a new Opa instance<\/li>\n\t\t<li>assertions: a new Opa instance<\/li>\n\t\t<li>timeout : 15 seconds, is increased to 5 minutes if running in debug mode e.g. with URL parameter sap-ui-debug=true<\/li>\n\t\t<li>pollingInterval: 400 milliseconds<\/li>\n<\/ul>\nYou can either directly manipulate the config, or extend it, using {@link sap.ui.test.Opa#.extendConfig}","!type":"String","!category":"enum"}},"sap.ui.model.odata.v2.ODataListBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataListBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, aSorters?: Array, aFilters?: Array, mParameters?: Object)","prototype":"sap.ui.model.odata.v2.ODataListBinding"},"sap.ui.core.theming.Parameters":{"!description":"A helper used for (read-only) access to CSS parameters at runtime","get":{"!description":"Returns the current value for the given CSS parameter.\nIf no parameter is given, a map containing all parameters is returned. This map is a copy, so changing values in the map does not have any effect.\nFor any other input or an undefined parameter name, the result is undefined.","!type":"fn(sName: String) -> Object","!category":"function"},"!category":"namespace","reset":{"!description":"Resets the CSS parameters which finally will reload the parameters\nthe next time they are queried via the method <code>get<\/code>.","!type":"fn()","!category":"function"}},"sap.ui.model.json.JSONModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.json.JSONModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oData: Object)","prototype":"sap.ui.model.json.JSONModel"},"sap.ui.core.util.serializer.delegate.XML":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.delegate.XML.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.util.serializer.delegate.Delegate"},"sap.ui.core.mvc.HTMLView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.HTMLView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.HTMLView"},"sap.ui.model.MetaModel":{"!description":"Model implementation for meta models","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.MetaModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.Model"},"sap.ui.core.InvisibleText_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.InvisibleText with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.InvisibleText"},"sap.ui.model.analytics.odata4analytics.SortExpression":{"clear":{"!description":"Clear expression from any sort conditions that may have been set\npreviously","!type":"fn()","!category":"function"},"removeSorter":{"!description":"Removes the order by expression for the given property name from the list\nof order by expression. If no order by expression with this property name\nexists the method does nothing.","!type":"fn(sPropertyName: String)","!category":"function"},"!description":"Representation of a $orderby expression for an OData entity type.","getExpressionsAsUI5SorterArray":{"!description":"Get an array of SAPUI5 Sorter objects corresponding to this expression.","!type":"fn() -> array(sap.ui.model.Sorter)","!category":"function"},"getEntityType":{"!description":"Get description for this entity type","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntityType","!category":"function"},"!category":"class","getURIOrderByOptionValue":{"!description":"Get the value for the OData system query option $orderby corresponding to\nthis expression.","!type":"fn(oSelectedPropertyNames: Object) -> String","!category":"function"},"addSorter":{"!description":"Add a condition to the order by expression. It replaces any previously specified\nsort order for the property.","!type":"fn(sPropertyName: String, sSortOrder: sap.ui.model.analytics.odata4analytics.SortOrder) -> sap.ui.model.analytics.odata4analytics.SortExpression","!category":"function"},"getExpressionAsUI5Sorter":{"!description":"Get the first SAPUI5 Sorter object.","!type":"fn() -> sap.ui.model.Sorter","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.odata.v2.ODataTreeBinding":{"setRootLevel":{"!description":"Sets the rootLevel\nThe root level is the level of the topmost tree nodes, which will be used as an entry point for OData services.\nThis is only possible (and necessary) for OData services implementing the hierarchy annotation specification,\nor when providing the annotation information locally as a binding parameter. See the constructor for API documentation on this.","!type":"fn(iRootLevel: Number)","!category":"function"},"hasChildren":{"!description":"Returns if the node has child nodes.\nIf the ODataTreeBinding is running with hierarchy annotations, a context with the property values \"expanded\" or \"collapsed\"\nfor the drilldown state property, returns true. Entities with drilldown state \"leaf\" return false.","!type":"fn(oContext: sap.ui.model.Context) -> Boolean","!category":"function"},"sort":{"!description":"Sorts the Tree according to the given Sorter(s).\nIn OperationMode.Client or OperationMode.Auto (if the given threshold is satisfied), the sorters are applied locally on the client.","!type":"function sort() { [native code for Array.sort, arity=1] }\n, aSorters: [sap.ui.model.Sorter]) -> sap.ui.model.odata.v2.ODataTreeBinding","!category":"function"},"getRootContexts":{"!description":"Returns root contexts for the tree. You can specify the start index and the length for paging requests","!type":"fn(iStartIndex?: integer, iLength?: integer, iThreshold?: integer) -> [sap.ui.model.Context]","!category":"function"},"getRootLevel":{"!description":"Returns the rootLevel","!type":"fn() -> Number","!category":"function"},"!description":"Tree binding implementation for odata models.\nTo use the v2.ODataTreeBinding with an odata service, which exposes hierarchy annotations, please\nconsult the \"SAP Annotations for OData Version 2.0\" Specification.\nThe necessary property annotations, as well as accepted/default values are documented in the specification.\n\nIn addition to these hieararchy annotations, the ODataTreeBinding also supports (cyclic) references between entities based on navigation properties.\nTo do this you have to specify the binding parameter \"navigation\".\nThe pattern for this is as follows: { entitySetName: \"navigationPropertyName\" }.\nExample: { \n    \"Employees\": \"toColleagues\"\n}\n\nIn OperationMode.Server, the filtering on the ODataTreeBinding is only supported with initial filters. \nHowever please be aware that this applies only to filters which do not obstruct the creation of a hierarchy.\nSo filtering on a property (e.g. a \"Customer\") is fine, as long as the application can ensure, that the responses from the backend are enough\nto construct a tree hierarchy. Subsequent paging requests for sibiling and child nodes must also return responses since the filters will be sent with\nevery request.\nFiltering with the filter() function is not supported for the OperationMode.Server.\n\nWith OperationMode.Client and OperationMode.Auto, the ODataTreeBinding also supports control filters.\nIn these OperationModes, the filters and sorters will be applied clientside, same as for the v2.ODataListBinding.\nThe OperationModes \"Client\" and \"Auto\" are only supported for trees which will be constructed based upon hierarchy annotations.","getChildCount":{"!description":"Returns the number of child nodes","!type":"fn(oContext: Object) -> integer","!category":"function"},"!category":"class","getNodeContexts":{"!description":"Returns the contexts of the child nodes for the given context.","!type":"fn(oContext: sap.ui.model.Context, iStartIndex: integer, iLength: integer, iThreshold: integer) -> [sap.ui.model.Context]","!category":"function"},"refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event\nif this is the case. For server side models this should refetch the data from the server.\nTo update a control, even if no data has been changed, e.g. to reset a control after failed\nvalidation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate?: Boolean, sGroupId?: String)","!category":"function"},"filter":{"!description":"Applying ControlFilters is not suported for OperationMode.Server.\nSince 1.34.0 the filtering is supported for OperationMode.Client and if the threshold for OperationMode.Auto could be satisfied.\nSee also: {@link sap.ui.model.odata.OperationMode.Auto}.\n\nOnly initial ApplicationFilters, given as constructor arguments, are supported with the other possible OperationModes.\nPlease see the constructor documentation for more information.","!type":"function filter() { [native code for Array.filter, arity=1] }\n, aFilters: [sap.ui.model.Filter]) -> sap.ui.model.odata.v2.ODataTreeBinding","!category":"function"},"!proto":"sap.ui.model.TreeBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataTreeBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"initialize":{"!description":"Initialize binding. Fires a change if data is already available ($expand) or a refresh.\nIf metadata is not yet available, do nothing, method will be called again when\nmetadata is loaded.","!type":"fn() -> sap.ui.model.odata.v2.ODataTreeBinding","!category":"function"}},"sap.ui.core.CSSSize":{"!description":"A string type that represents CSS size values. \n\nThe CSS specifications calls this the <code>'&lt;length&gt; type'<\/code>.\nAllowed values are CSS sizes like \"1px\" or \"2em\" or \"50%\". The special values <code>auto<\/code> \nand <code>inherit<\/code> are also accepted as well as mathematical expressions using the CSS3 \n<code>calc(<i>expression<\/i>)<\/code> operator.\n\nNote that CSS does not allow all these values for every CSS property representing a size. \nE.g. <code>padding-left<\/code> doesn't allow the value <code>auto<\/code>. So even if a value is \naccepted by <code>sap.ui.core.CSSSize<\/code>, it still might have no effect in a specific context.\nIn other words: UI5 controls usually don't extend the range of allowed values in CSS.\n\n\n<b>Units<\/b>\n\nValid font-relative units are <code>em, ex<\/code> and <code>rem<\/code>. Supported absolute units \nare <code>cm, mm, in, pc, pt<\/code> and <code>px<\/code>. Other units are not supported yet.\n\n\n<b>Mathematical Expressions<\/b>\n\nExpressions inside the <code>calc()<\/code> operator are only roughly checked for validity. \nNot every value that this type accepts might be a valid expression in the sense of the CSS spec.\nBut vice versa, any expression that is valid according to the spec should be accepted by this type. \nThe current implementation is based on the \n{@link http://dev.w3.org/csswg/css-values-3/#calc-syntax CSS3 Draft specification from 22 April 2015}.\n\nNoteworthy details:\n<ul>\n<li>whitespace is mandatory around a '-' or '+' operator and optional otherwise<\/li>\n<li>parentheses are accepted but not checked for being balanced (a limitation of regexp based checks)<\/li>\n<li>semantic constraints like type restrictions are not checked<\/li>\n<\/ul>\n\nFuture versions of UI5 might check <code>calc()<\/code> expressions in more detail, so applications should \nnot assume that a value, that is invalid according to the CSS spec but currently accepted by this type \nstill will be accepted by future versions of this type.","!category":"namespace"},"sap.ui.model.type.Currency_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Currency with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.CompositeType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Currency"},"sap.ui.model.analytics.odata4analytics.EntitySet":{"!description":"Representation of a OData entity set.","getEntityType":{"!description":"Get entity type used for this entity set","!type":"fn() -> Object","!category":"function"},"!category":"class","getSetDescription":{"!description":"Get full description for this entity set","!type":"fn() -> Object","!category":"function"},"getUpdatablePropertyNameSet":{"!description":"Get names of properties in this entity set that can be updated","!type":"fn() -> Object","!category":"function"},"getQName":{"!description":"Get the fully qualified name for this entity type","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.message":{"MessageParser":"sap.ui.core.message.MessageParser_obj","MessageManager":"sap.ui.core.message.MessageManager_obj","Message":"sap.ui.core.message.Message_obj","ControlMessageProcessor":"sap.ui.core.message.ControlMessageProcessor_obj","!category":"namespace","MessageProcessor":"sap.ui.core.message.MessageProcessor_obj"},"sap.ui.core.Item":{"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nOptions are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.core.Item","!category":"function"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe text to be displayed for the item.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nOptions are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function"},"getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nCan be used as input for subsequent actions.","!type":"fn() -> String","!category":"function"},"!description":"A control base type.","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nEnabled items can be selected.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nEnabled items can be selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.core.Item","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe text to be displayed for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.core.Item","!category":"function"},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nCan be used as input for subsequent actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.ui.core.Item","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Item.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.model.odata.type.Int_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Int"},"sap.ui.core.SeparatorItem":{"!description":"An item that provides a visual separation. It borrows all its methods from the classes sap.ui.core.Item, sap.ui.core.Element,\nsap.ui.base.EventProvider, and sap.ui.base.Object.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.SeparatorItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Item"},"sap.ui.test.Opa5_obj":{"!type":"fn()","prototype":"sap.ui.test.Opa5"},"sap.ui.core.util.serializer":{"ViewSerializer":"sap.ui.core.util.serializer.ViewSerializer_obj","HTMLViewSerializer":"sap.ui.core.util.serializer.HTMLViewSerializer_obj","!category":"namespace","XMLViewSerializer":"sap.ui.core.util.serializer.XMLViewSerializer_obj","Serializer":"sap.ui.core.util.serializer.Serializer_obj","delegate":"sap.ui.core.util.serializer.delegate"},"sap.ui.core.History_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.History with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.History"},"sap.ui.model.odata.type.Int":{"!description":"This is an abstract base class for integer-based\n<a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\nOData primitive types<\/a> like <code>Edm.Int16<\/code> or <code>Edm.Int32<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ndefined constraints.","!type":"fn(iValue: Number)","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type.\nWhen formatting to <code>string<\/code> the format options are used.","!type":"fn(iValue: Number, sTargetType: String) -> Number | String","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value, which is expected to be of the given source type, to an Int in\nnumber representation.","!type":"fn(vValue: Number | String, sSourceType: String) -> Number","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Int.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.Device":{"os":"sap.ui.Device.os","orientation":"sap.ui.Device.orientation","system":"sap.ui.Device.system","!description":"Device and Feature Detection API: Provides information about the used browser / device and cross platform support for certain events\nlike media queries, orientation change or resizing.\n\nThis API is independent from any other part of the UI5 framework. This allows it to be loaded beforehand, if it is needed, to create the UI5 bootstrap\ndynamically depending on the capabilities of the browser or device.","support":"sap.ui.Device.support","!category":"namespace","browser":"sap.ui.Device.browser","media":"sap.ui.Device.media","resize":"sap.ui.Device.resize"},"sap.ui.core.Control_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Control with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Control"},"sap.ui.core.ScrollBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ScrollBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.ScrollBar"},"sap.ui.core.ws.SapPcpWebSocket_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ws.SapPcpWebSocket with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ws.WebSocket.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sUrl: String, aProtocols?: Array)","prototype":"sap.ui.core.ws.SapPcpWebSocket"},"sap.ui.model.odata.type.DateTimeBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTimeBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.DateTimeBase"},"sap.ui.model.odata.type.Int32_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int32 with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Int32"},"sap.ui.base.ObjectPool_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.base.ObjectPool with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oObjectClass: fn())","prototype":"sap.ui.base.ObjectPool"},"sap.ui.test.matchers.PropertyStrictEquals_obj":{"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.PropertyStrictEquals"},"sap.ui.core.util.MockServer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.MockServer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object, oScope?: Object)","prototype":"sap.ui.core.util.MockServer"},"sap.ui.model.type.DateTime":{"!description":"This class represents datetime simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.DateTime.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.type.Date"},"sap.ui.model.PropertyBinding":{"getValue":{"!description":"Returns the current value of the bound target","!type":"fn() -> Object","!category":"function"},"setBindingMode":{"!description":"Sets the binding mode","!type":"fn(sBindingMode: sap.ui.model.BindingMode)","!category":"function"},"getFormatter":{"!description":"Returns the formatter function","!type":"fn() -> fn()","!category":"function"},"setType":{"!description":"Sets the optional type and internal type for the binding. The type and internal type are used to do the parsing/formatting correctly.\nThe internal type is the property type of the element which the value is formatted to.","!type":"fn(oType: sap.ui.model.Type, sInternalType: String)","!category":"function"},"setValue":{"!description":"Sets the value for this binding. A model implementation should check if the current default binding mode permits\nsetting the binding value and if so set the new value also in the model.","!type":"fn(oValue: Object)","!category":"function"},"getExternalValue":{"!description":"Returns the current external value of the bound target which is formatted via a type or formatter function.","!type":"fn() -> Object","!category":"function"},"getType":{"!description":"Returns the type if any for the binding.","!type":"fn() -> sap.ui.model.Type","!category":"function"},"!description":"The PropertyBinding is used to access single data values in the data model.","getBindingMode":{"!description":"Returns the binding mode","!type":"fn() -> sap.ui.model.BindingMode","!category":"function"},"setExternalValue":{"!description":"Sets the value for this binding. The value is parsed and validated against its type and then set to the binding.\nA model implementation should check if the current default binding mode permits\nsetting the binding value and if so set the new value also in the model.","!type":"fn(oValue: Object)","!category":"function"},"setFormatter":{"!description":"Sets the optional formatter function for the binding.","!type":"fn(fnFormatter: fn())","!category":"function"},"!category":"class","!proto":"sap.ui.model.Binding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.PropertyBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.message.MessageProcessor":{"fireMessageChange":{"!description":"Fire event messageChange to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.message.MessageProcessor","!category":"function"},"destroy":{"!description":"Destroys the MessageProcessor Instance","!type":"fn()","!category":"function"},"attachMessageChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'messageChange' event of this <code>sap.ui.core.message.MessageProcessor<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.message.MessageProcessor","!category":"function"},"setMessages":{"!description":"Implement in inheriting classes","!type":"fn(vMessages: map)","!category":"function"},"!description":"This is an abstract base class for MessageProcessor objects.","detachMessageChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'sap.ui.core.message.MessageProcessor' event of this <code>sap.ui.core.message.MessageProcessor<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.message.MessageProcessor","!category":"function"},"checkMessage":{"!description":"Implement in inheriting classes","!type":"fn() -> sap.ui.model.ListBinding","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.MessageProcessor.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getId":{"!description":"Returns the ID of the MessageProcessor instance","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.core.format.FileSizeFormat":{"!description":"The FileSizeFormat is a static class for formatting and parsing numeric file size values according\nto a set of format options.\n\nSupports the same options as {@link sap.ui.core.format.NumberFormat.getFloatInstance NumberFormat.getFloatInstance}\nFor format options which are not specified default values according to the type and locale settings are used.\n\nSupported format options (additional to NumberFormat):\n<ul>\n<li>binaryFilesize: if true, base 2 is used: 1 Kibibyte = 1024 Byte, ... , otherwise base 10 is used: 1 Kilobyte = 1000 Byte (Default is false)<\/li>\n<\/ul>","!category":"class","format":{"!description":"Format a filesize (in bytes) according to the given format options.","!type":"fn(oValue: Number | String) -> String","!category":"function"},"parse":{"!description":"Parse a string which is formatted according to the given format options.","!type":"fn(sValue: String) -> Number","!category":"function"},"getInstance":{"!description":"Get an instance of the FileSizeFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured \n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.FileSizeFormat","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.format.FileSizeFormat.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.Device.orientation":{"!description":"Common API for orientation change notifications across all platforms.\n\nFor browsers or devices that do not provide native support for orientation change events\nthe API simulates them based on the ratio of the document's width and height.","detachHandler":{"!description":"Removes a previously attached event handler from the orientation change events.\n\nThe passed parameters must match those used for registration with {@link #attachHandler} beforehand.","!type":"fn(fnFunction: fn(), oListener?: Object, sName: String, fnFunction: fn(), oListener?: Object)","!category":"function"},"!category":"namespace","landscape":{"!description":"If this flag is set to <code>true<\/code>, the screen is currently in landscape mode (the width is greater than the height).","!type":"Boolean","!category":"enum"},"attachHandler":{"!description":"Registers the given event handler to orientation change events of the document's window.\n\nThe event is fired whenever the screen orientation changes and the width of the document's window\nbecomes greater than its height or the other way round.\n\nThe event handler is called with a single argument: a map <code>mParams<\/code> which provides the following information:\n<ul>\n<li><code>mParams.landscape<\/code>: If this flag is set to <code>true<\/code>, the screen is currently in landscape mode, otherwise in portrait mode.<\/li>\n<\/ul>","!type":"fn(fnFunction: fn(), oListener?: Object, sName: String, fnFunction: fn(), oListener?: Object)","!category":"function"},"portrait":{"!description":"If this flag is set to <code>true<\/code>, the screen is currently in portrait mode (the height is greater than the width).","!type":"Boolean","!category":"enum"}},"sap.ui.model.ContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ContextBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: Object, mParameters?: Object, oEvents?: Object)","prototype":"sap.ui.model.ContextBinding"},"sap.ui.core.TooltipBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.TooltipBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.TooltipBase"},"sap.ui.model.odata.ODataListBinding":{"sort":{"!description":"Sorts the list.","!type":"function sort() { [native code for Array.sort, arity=1] }\n, aSorters: sap.ui.model.Sorter | Array) -> sap.ui.model.ListBinding","!category":"function"},"!description":"List binding implementation for oData format","getDownloadUrl":{"!description":"Get a download URL with the specified format considering the\nsort/filter/custom parameters.","!type":"fn(sFormat: String) -> String","!category":"function"},"getContexts":{"!description":"Return contexts for the list","!type":"fn(iStartIndex?: Number, iLength?: Number, iThreshold?: Number) -> [sap.ui.model.Context]","!category":"function"},"!category":"class","refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event\nif this is the case. For server side models this should refetch the data from the server.\nTo update a control, even if no data has been changed, e.g. to reset a control after failed\nvalidation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate?: Boolean)","!category":"function"},"filter":{"!description":"\nFilters the list.\n\nWhen using sap.ui.model.Filter the filters are first grouped according to their binding path.\nAll filters belonging to a group are ORed and after that the\nresults of all groups are ANDed.\nUsually this means, all filters applied to a single table column\nare ORed, while filters on different table columns are ANDed.","!type":"function filter() { [native code for Array.filter, arity=1] }\n, aFilters: [sap.ui.model.Filter[] | sap.ui.model.odata.Filter], sFilterType: sap.ui.model.FilterType) -> sap.ui.model.ListBinding","!category":"function"},"initialize":{"!description":"Initialize binding. Fires a change if data is already available ($expand) or a refresh.\nIf metadata is not yet available, do nothing, method will be called again when\nmetadata is loaded.","!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataListBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.ListBinding"},"jQuery.sap.history.NavType":{"Unknown":{"!description":"This indicates that the new hash is achieved by some unknown direction.\nThis happens when the user navigates out of the application and then click on the forward button\nin the browser to navigate back to the application.","!type":"String","!category":"enum"},"!category":"namespace","Bookmark":{"!description":"This indicates that the new hash is restored from the bookmark.","!type":"String","!category":"enum"},"Forward":{"!description":"This indicates that the new hash is achieved by pressing the forward button.","!type":"String","!category":"enum"},"Back":{"!description":"This indicates that the new hash is achieved by pressing the back button.","!type":"String","!category":"enum"}},"sap.ui.core.LocalBusyIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.LocalBusyIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.LocalBusyIndicator"},"sap.ui.core.EnabledPropagator_obj":{"!type":"fn(bDefault?: Boolean, bLegacy?: Boolean)","prototype":"sap.ui.core.EnabledPropagator"},"sap.ui.core.util.serializer.HTMLViewSerializer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.HTMLViewSerializer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oView: sap.ui.core.mvc.HTMLView, oWindow?: Object, fnGetControlId: fn(), fnGetEventHandlerName: fn())","prototype":"sap.ui.core.util.serializer.HTMLViewSerializer"},"jQuery.sap.PseudoEvents":{"sapleftmodifiers":{"!description":"Pseudo event for keyboard arrow left with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdelete":{"!description":"Pseudo event for keyboard delete without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdecrease":{"!description":"Pseudo event for pseudo 'decrease' event without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saptabprevious":{"!description":"Pseudo event for keyboard tab (TAB + shift modifier)","!type":"String","!category":"enum"},"sapendmodifiers":{"!description":"Pseudo event for keyboard End with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saphome":{"!description":"Pseudo event for keyboard Home/Pos1 with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapselect":{"!description":"Pseudo event for pseudo 'select' event... space, enter, ... without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapbackspace":{"!description":"Pseudo event for keyboard backspace without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapexpand":{"!description":"Pseudo event for pseudo expand event (keyboard numpad +) without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdelayeddoubleclick":{"!description":"Pseudo event indicating delayed double click (e.g. for inline edit)","!type":"String","!category":"enum"},"sapexpandmodifiers":{"!description":"Pseudo event for pseudo expand event (keyboard numpad +) with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapnext":{"!description":"Pseudo event for pseudo 'next' event without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdeletemodifiers":{"!description":"Pseudo event for keyboard delete with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapshow":{"!description":"Pseudo event for pseudo 'show' event (F4, Alt + down-Arrow)","!type":"String","!category":"enum"},"sapdownmodifiers":{"!description":"Pseudo event for keyboard arrow down with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdown":{"!description":"Pseudo event for keyboard arrow down without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sappageupmodifiers":{"!description":"Pseudo event for keyboard page up with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sappageup":{"!description":"Pseudo event for keyboard page up without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saphomemodifiers":{"!description":"Pseudo event for keyboard Home/Pos1 without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapnextmodifiers":{"!description":"Pseudo event for pseudo 'next' event with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapleft":{"!description":"Pseudo event for keyboard arrow left without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapcollapsemodifiers":{"!description":"Pseudo event for pseudo collapse event (keyboard numpad -) with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saprightmodifiers":{"!description":"Pseudo event for keyboard arrow right with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapspacemodifiers":{"!description":"Pseudo event for keyboard space with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapbottom":{"!description":"Pseudo event for pseudo bottom event","!type":"String","!category":"enum"},"sapend":{"!description":"Pseudo event for keyboard End without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapminus":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"String","!category":"enum"},"sapskipback":{"!description":"Pseudo event for pseudo skip back (F6 + shift modifier)","!type":"String","!category":"enum"},"sapup":{"!description":"Pseudo event for keyboard arrow up without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapcollapseall":{"!description":"Pseudo event for pseudo collapse event (keyboard numpad *)","!type":"String","!category":"enum"},"sapbackspacemodifiers":{"!description":"Pseudo event for keyboard backspace with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdecreasemodifiers":{"!description":"Pseudo event for pseudo 'decrease' event with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapincreasemodifiers":{"!description":"Pseudo event for pseudo 'increase' event with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapright":{"!description":"Pseudo event for keyboard arrow right without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapskipforward":{"!description":"Pseudo event for pseudo skip forward (F6 + no modifier)","!type":"String","!category":"enum"},"!category":"namespace","sapcollapse":{"!description":"Pseudo event for pseudo collapse event (keyboard numpad -) without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapentermodifiers":{"!description":"Pseudo event for keyboard enter with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapplus":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"String","!category":"enum"},"sapupmodifiers":{"!description":"Pseudo event for keyboard arrow up with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saptop":{"!description":"Pseudo event for  pseudo top event","!type":"String","!category":"enum"},"sappreviousmodifiers":{"!description":"Pseudo event for pseudo 'previous' event with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapselectmodifiers":{"!description":"Pseudo event for pseudo 'select' event... space, enter, ... with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapenter":{"!description":"Pseudo event for keyboard enter without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapincrease":{"!description":"Pseudo event for pseudo 'increase' event without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapprevious":{"!description":"Pseudo event for pseudo 'previous' event without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapescape":{"!description":"Pseudo event for keyboard escape","!type":"String","!category":"enum"},"!description":"Enumeration of all so called \"pseudo events\", a useful classification\nof standard browser events as implied by SAP product standards.\n\nWhenever a browser event is recognized as one or more pseudo events, then this\nclassification is attached to the original {@link jQuery.Event} object and thereby\ndelivered to any jQuery-style listeners registered for that browser event.\n\nPure JavaScript listeners can evaluate the classification information using\nthe {@link jQuery.Event#isPseudoType} method.\n\nInstead of using the procedure as described above, the SAPUI5 controls and elements\nshould simply implement an <code>on<i>pseudo-event<\/i>(oEvent)<\/code> method. It will\nbe invoked only when that specific pseudo event has been recognized. This simplifies event\ndispatching even further.","saptabnext":{"!description":"Pseudo event for keyboard tab (TAB + no modifier)","!type":"String","!category":"enum"},"saphide":{"!description":"Pseudo event for pseudo 'hide' event (Alt + up-Arrow)","!type":"String","!category":"enum"},"sappagedown":{"!description":"Pseudo event for keyboard page down without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapspace":{"!description":"Pseudo event for keyboard space without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sappagedownmodifiers":{"!description":"Pseudo event for keyboard page down with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"}},"sap.ui.core.util.Export_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.Export with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.Export"},"sap.ui.Device.os.OS":{"WINDOWS":{"!description":"Windows operating system name.","!type":"String","!category":"enum"},"ANDROID":{"!description":"Android operating system name.","!type":"String","!category":"enum"},"!description":"Enumeration containing the names of known operating systems.","IOS":{"!description":"iOS operating system name.","!type":"String","!category":"enum"},"WINDOWS_PHONE":{"!description":"Windows Phone operating system name.","!type":"String","!category":"enum"},"BLACKBERRY":{"!description":"Blackberry operating system name.","!type":"String","!category":"enum"},"LINUX":{"!description":"Linux operating system name.","!type":"String","!category":"enum"},"!category":"namespace","MACINTOSH":{"!description":"MAC operating system name.","!type":"String","!category":"enum"}},"sap.ui.core.tmpl":{"text":{"!description":"The text content of the DOM element","!type":"String","!category":"enum"},"Template":"sap.ui.core.tmpl.Template_obj","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!type":"Boolean","!category":"enum"},"tag":{"!description":"The HTML-tag of the DOM element which contains the text","!type":"String","!category":"enum"},"HandlebarsTemplate":"sap.ui.core.tmpl.HandlebarsTemplate_obj","busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"TemplateControl":"sap.ui.core.tmpl.TemplateControl_obj","DOMAttribute":"sap.ui.core.tmpl.DOMAttribute_obj","content":{"!description":"The Template definition as a String.","!type":"String","!category":"enum"},"DOMElement":"sap.ui.core.tmpl.DOMElement_obj","name":{"!description":"Name of the DOM attribute","!type":"String","!category":"enum"},"context":{"!description":"The context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object.","!type":"Object","!category":"enum"},"!category":"namespace","value":{"!description":"Value of the DOM attribute","!type":"String","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!type":"[String]","!category":"enum"}},"sap.ui.model.analytics.AnalyticalBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.analytics.AnalyticalBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext?: Object, aSorter?: Array, aFilters?: Array, mParameters?: Object)","prototype":"sap.ui.model.analytics.AnalyticalBinding"},"sap.ui.model.PropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.PropertyBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.PropertyBinding"},"sap.ui.model.type.Time_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Time with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.Date.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Time"},"sap.ui.core.util.serializer.delegate.Delegate":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.delegate.Delegate.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.core.util.serializer.delegate.HTML":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.delegate.HTML.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.util.serializer.delegate.Delegate"},"sap.ui.model.ClientContextBinding":{"!description":"The ContextBinding is a specific binding for a setting context for the model","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ClientContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"jQuery.support":{"cssTransforms3d":{"!description":"Whether the current browser supports 3D CSS transforms","!type":"Boolean","!category":"enum"},"cssAnimations":{"!description":"Whether the current browser supports (named) CSS animations","!type":"Boolean","!category":"enum"},"!description":"Holds information about the browser's capabilities and quirks.\nThis object is provided and documented by jQuery.\nBut it is extended by SAPUI5 with detection for features not covered by jQuery. This documentation ONLY covers the detection properties added by UI5.\nFor the standard detection properties, please refer to the jQuery documentation.\n\nThese properties added by UI5 are only available temporarily until jQuery adds feature detection on their own.","cssTransitions":{"!description":"Whether the current browser supports CSS transitions","!type":"Boolean","!category":"enum"},"cssGradients":{"!description":"Whether the current browser supports CSS gradients. Note that ANY support for CSS gradients leads to \"true\" here, no matter what the syntax is.","!type":"Boolean","!category":"enum"},"ie10FlexBoxLayout":{"!description":"Whether the current browser supports the IE10 CSS3 Flexible Box Layout directly or via vendor prefixes","!type":"Boolean","!category":"enum"},"flexBoxPrefixed":{"!description":"Whether the current browser supports only prefixed flexible layout properties","!type":"Boolean","!category":"enum"},"hasFlexBoxSupport":{"!description":"Whether the current browser supports any kind of Flexible Box Layout directly or via vendor prefixes","!type":"Boolean","!category":"enum"},"!category":"namespace","flexBoxLayout":{"!description":"Whether the current browser supports the OLD CSS3 Flexible Box Layout directly or via vendor prefixes","!type":"Boolean","!category":"enum"},"cssTransforms":{"!description":"Whether the current browser supports (2D) CSS transforms","!type":"Boolean","!category":"enum"},"newFlexBoxLayout":{"!description":"Whether the current browser supports the NEW CSS3 Flexible Box Layout directly or via vendor prefixes","!type":"Boolean","!category":"enum"}},"sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest_obj":{"!type":"fn(oParameter: sap.ui.model.analytics.odata4analytics.Parameter)","prototype":"sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest"},"sap.ui.core.Configuration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Configuration.FormatSettings with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.Configuration"},"sap.ui.model.odata.type.String_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.String with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.String"},"sap.ui.core.ws.WebSocket":{"send":{"!description":"Sends a message.<br>\n<br>\nIf the connection is not yet opened, the message will be queued and sent\nwhen the connection is established.","!type":"fn(sMessage: String) -> sap.ui.core.ws.WebSocket","!category":"function"},"getProtocol":{"!description":"Getter for the protocol selected by the server once the connection is open.","!type":"fn() -> String","!category":"function"},"getReadyState":{"!description":"Getter for WebSocket readyState.","!type":"fn() -> sap.ui.core.ws.ReadyState","!category":"function"},"fireOpen":{"!description":"Fire event 'open' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"detachClose":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'close' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"detachOpen":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'open' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"fireClose":{"!description":"Fire event 'close' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"attachError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'error' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"detachError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'error' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"attachClose":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'close' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"attachOpen":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'open' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"attachMessage":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'message' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"close":{"!description":"Closes the connection.","!type":"fn(iCode?: Number, sReason?: String) -> sap.ui.core.ws.WebSocket","!category":"function"},"fireMessage":{"!description":"Fire event 'message' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"detachMessage":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'message' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"fireError":{"!description":"Fire event 'error' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.WebSocket","!category":"function"},"!description":"Basic WebSocket class","!category":"class","getInterface":{"!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ws.WebSocket.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.model.TreeBindingAdapter":{"attachSelectionChanged":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel<\/code>.<br/>\nEvent is fired if the selection of tree nodes is changed in any way.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.SelectionModel","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","detachSelectionChanged":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.SelectionModel","!category":"function"},"!category":"class","fireSelectionChanged":{"!description":"Fire event 'selectionChanged' to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'leadIndex' of type <code>int<\/code> Lead selection index.<\/li>\n<li>'rowIndices' of type <code>int[]<\/code> Other selected indices (if available)<\/li>\n<\/ul>","!type":"fn(mArguments: Object) -> sap.ui.model.SelectionModel","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.odata4analytics.FilterExpression":{"clear":{"!description":"Clear expression from any conditions that may have been set previously","!type":"fn()","!category":"function"},"removeConditions":{"!description":"Remove all conditions for some property from the filter expression.\n\nAll previously set conditions for some property are removed from the filter expression.","!type":"fn(sPropertyName: String) -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function"},"!description":"Representation of a $filter expression for an OData entity type.","getEntityType":{"!description":"Get description for this entity type","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntityType","!category":"function"},"getURIFilterOptionValue":{"!description":"Get the value for the OData system query option $filter corresponding to this expression.","!type":"fn() -> String","!category":"function"},"getExpressionAsUI5FilterArray":{"!description":"Get an array of SAPUI5 Filter objects corresponding to this expression.","!type":"fn() -> array(sap.ui.model.Filter)","!category":"function"},"addCondition":{"!description":"Add a condition to the filter expression.\n\nMultiple conditions on the same property are combined with a logical OR first, and in a second step conditions for\ndifferent properties are combined with a logical AND.","!type":"fn(sPropertyName: String, sOperator: sap.ui.model.FilterOperator, oValue: Object, oValue2: Object) -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function"},"!category":"class","addSetCondition":{"!description":"Add a set condition to the filter expression.\n\nA set condition tests if the value of a property is included in a set of given values. It is a convenience method for\nthis particular use case eliminating the need for multiple API calls.","!type":"fn(sPropertyName: String, aValues: Array) -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function"},"checkValidity":{"!description":"Check if request is compliant with basic filter constraints expressed in metadata:\n\n(a) all properties required in the filter expression have been referenced (b) the single-value filter restrictions have been obeyed","!type":"fn() -> Boolean","!category":"function"},"addUI5FilterConditions":{"!description":"Add an array of UI5 filter conditions to the filter expression.\n\nThe UI5 filter condition is combined with the other given conditions using a logical AND. This method\nis particularly useful for passing forward already created UI5 filter arrays.","!type":"fn(aUI5Filter: array(sap.ui.model.Filter)) -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.Renderer":{"!description":"Base Class for a Renderer.","extend":{"!description":"Creates a new static renderer class that extends a given renderer.\n\nThis method can be used with two signatures that are explained below. \nIn both variants, the returned renderer class inherits all properties (methods, fields) \nfrom the given parent renderer class. Both variants also add an 'extend' method to the \ncreated renderer class that behaves like the new signature of this <code>Renderer.extend<\/code> \nmethod, but creates subclasses of the new class, not of <code>sap.ui.core.Renderer<\/code>. \n\n<b>New Signature<\/b><br>\nIn the new signature variant, two parameters must be given: a qualified name \nfor the new renderer (its class name), and an optional object literal that contains \nmethods or fields to be added to the new renderer class.\n\nThis signature has been designed to resemble the class extension mechanism as\nprovided by {@link sap.ui.base.Object.extend Object.extend}. \n\n<pre>\nsap.ui.define(['sap/ui/core/Renderer'], \n    function(Renderer) {\n    \"use strict\";\n    \n    var LabelRenderer = Renderer.extend('sap.m.LabelRenderer', {\n        renderer: function(oRM, oControl) {\n            \n            renderPreamble(oRM, oControl);\n            \n            // implementation core renderer logic here\n            \n            renderPreamble(oRM, oControl);\n            \n        },\n        \n        renderPreamble : function(oRM, oControl) {\n        ...\n        },\n        \n        renderPostamble : function(oRM, oControl) {\n        ...\n        }\n        \n    });\n    \n    return LabelRenderer;\n});\n<\/pre>\n\nThe extension of Renderers works across multiple levels. A FancyLabelRenderer can\nextend the above LabelRenderer:\n\n<pre>\nsap.ui.define(['sap/m/LabelRenderer'], \n    function(LabelRenderer) {\n    \"use strict\";\n\n    var FancyLabelRenderer = LabelRenderer.extend('sap.mylib.FancyLabelRenderer', {\n        renderer: function(oRM, oControl) {\n\n            // call base renderer\n            LabelRenderer.renderPreamble(oRM, oControl);\n\n            // ... do your own fancy rendering here\n\n            // call base renderer again\n            LabelRenderer.renderPostamble(oRM, oControl);\n        }\n    });\n\n    return FancyLabelRenderer;\n});\n<\/pre>\n\n<b>Note:<\/b> the new signature no longer requires the <code>bExport<\/code> flag to be set for \nthe enclosing {@link sap.ui.define} call. The Renderer base classes takes care of the necessary \nglobal export of the render. This allows Non-SAP developers to write a renderer that complies with \nthe documented restriction for <code>sap.ui.define<\/code> (no use of bExport = true outside \nsap.ui.core projects).\n\n<b>Deprecated Signature<\/b><br>\nThe deprecated old signature expects just one parameter: a renderer that should be extended.\nWith that signature the renderer can't be exported globally as the name of the renderer class\nis not known. \n\nFor compatibility reasons, the class created by the deprecated signature contains a property \n<code>_super<\/code> that references the parent class. It shouldn't be used by applications / control \ndevelopers as it doesn't work reliably for deeper inheritance chains: if the old variant of \n<code>Renderer.extend<\/code> is used on two or more levels of the inheritance hierarchy, the \n<code>_super<\/code> property of the resulting renderer class will always point to the implementation \nof the base renderer of the last call to extend. Instead of using <code>this._super<\/code>, renderer \nimplementations should use the new signature variant and access the base implementation of a method \nvia the AMD reference to the base renderer (as shown in the FancyLabelRenderer example above).","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn(), vName: String | Object, oRendererInfo?: Object)","!category":"function"},"!category":"namespace"},"sap.ui.model.type.Date_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Date with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Date"},"sap.ui.core.IconPool":{"isIconURI":{"!description":"Returns If the given uri is an icon URI.","!type":"fn(uri: String) -> Boolean","!category":"function"},"getIconNames":{"!description":"Returns all name of icons that are registerd under the given collection.","!type":"fn(collectionName: String) -> Array","!category":"function"},"getIconURI":{"!description":"Returns the URI of the icon which has the same given iconName and collectionName.","!type":"fn(iconName: String, collectionName: String) -> String","!category":"function"},"!description":"The IconPool is a static class for retrieving or registering icons.\nIt also provides helping methods for easier consumption of icons.\nThere are already icons registered in IconPool, please use the Demo App named \n\"Icon Explorer\" to find the name of the icon.\n\nIn order to use the icon inside an existing control, please call \nsap.ui.core.IconPool.getIconURI and assign the URI to the control's property\nwhich supports icons.\nIf you want to support icons and standard images in your own control, please use\nthe static method sap.ui.core.IconPool.createControlByURI to create an Icon in\ncase the first argument is an icon-URL or another control which you define by \nproviding it as the second argument.","createControlByURI":{"!description":"Creates an instance of sap.ui.core.Icon if the given URI is an icon URI, otherwise the given constructor is called.\nThe given URI is set to the src property of the control.","!type":"fn(setting: String | Object, constructor: fn()) -> sap.ui.core.Control","!category":"function"},"getIconForMimeType":{"!description":"Returns the icon url based on the given mime type","!type":"fn(sMimeType: String) -> String","!category":"function"},"getIconCollectionNames":{"!description":"Returns all names of registered collections in IconPool","!type":"fn() -> Array","!category":"function"},"!category":"class","getIconInfo":{"!description":"Returns the info object of the icon which has the same given iconName and collectionName.","!type":"fn(iconName: String, collectionName: String) -> Object","!category":"function"},"addIcon":{"!description":"Register an additional icon to the sap.ui.core.IconPool.","!type":"fn(iconName: String, collectionName: String, iconInfo: Object) -> Object","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.DeclarativeSupport":{"!description":"Static class for enabling declarative UI support.","compile":{"!description":"Enhances the given DOM element by parsing the Control and Elements info and creating\nthe SAPUI5 controls for them.","!type":"fn(oElement: Element, oView?: sap.ui.core.mvc.HTMLView, isRecursive?: Boolean)","!category":"function"},"!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.Device.os":{"android":{"!description":"If this flag is set to <code>true<\/code>, an Android operating system is used.","!type":"Boolean","!category":"enum"},"ios":{"!description":"If this flag is set to <code>true<\/code>, an iOS operating system is used.","!type":"Boolean","!category":"enum"},"OS":"sap.ui.Device.os.OS","versionStr":{"!description":"The version of the operating system as <code>string<\/code>.\n\nMight be empty if no version can be determined.","!type":"String","!category":"enum"},"windows":{"!description":"If this flag is set to <code>true<\/code>, a Windows operating system is used.","!type":"Boolean","!category":"enum"},"linux":{"!description":"If this flag is set to <code>true<\/code>, a Linux operating system is used.","!type":"Boolean","!category":"enum"},"version":{"!description":"The version of the operating system as <code>float<\/code>.\n\nMight be <code>-1<\/code> if no version can be determined.","!type":"Number","!category":"enum"},"blackberry":{"!description":"If this flag is set to <code>true<\/code>, a Blackberry operating system is used.","!type":"Boolean","!category":"enum"},"!description":"Contains information about the operating system of the device.","macintosh":{"!description":"If this flag is set to <code>true<\/code>, a Mac operating system is used.","!type":"Boolean","!category":"enum"},"name":{"!description":"The name of the operating system.","!type":"String","!category":"enum"},"windows_phone":{"!description":"If this flag is set to <code>true<\/code>, a Windows Phone operating system is used.","!type":"Boolean","!category":"enum"},"!category":"namespace"},"sap.ui.core.util.ExportTypeCSV":{"!description":"CSV export type. Can be used for {@link sap.ui.core.util.Export Export}.<br>\n<br>\nPlease note that there could issues with the separator char depending on the user's system language in some programs such as Microsoft Excel.<br>\nTo prevent those issues use the data-import functionality which enables the possibility to explicitly set the separator char that should be used.<br>\nThis way the content will be displayed correctly.","generate":{"!description":"Generates the file content.","!type":"fn() -> String","!category":"function"},"setSeparatorChar":{"!description":"Setter for property <code>separatorChar<\/code>.\n\nValue needs to be exactly one character or empty for default. Default value is ','.","!type":"fn(sSeparatorChar: String) -> sap.ui.core.util.ExportTypeCSV","!category":"function"},"getSeparatorChar":{"!description":"Gets current value of property <code>separatorChar<\/code>.\n\nSeparator char.\n\nValue needs to be exactly one character or empty for default.\n\nDefault value is <code>,<\/code>.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportTypeCSV.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.util.ExportType"},"sap.ui.model.CompositeBinding":{"getValue":{"!description":"Returns the raw values of the property bindings in an array.","!type":"fn() -> Object","!category":"function"},"setType":{"!description":"Sets the optional type and internal type for the binding. The type and internal type are used to do the parsing/formatting correctly.\nThe internal type is the property type of the element which the value is formatted to.","!type":"fn(oType: sap.ui.model.CompositeType, sInternalType: String)","!category":"function"},"setValue":{"!description":"Sets the values. This will cause the setValue to be called for each nested binding, except\nfor undefined values in the array.","!type":"fn(aValues: Array)","!category":"function"},"getExternalValue":{"!description":"Returns the current external value of the bound target which is formatted via a type or formatter function.","!type":"fn() -> Object","!category":"function"},"detachChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the '_change' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"detachDataStateChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'messageChange' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"!description":"The CompositeBinding is used to bundle multiple property bindings which are be used to provide a single binding against\nthese property bindings.","setExternalValue":{"!description":"Sets the external value of a composite binding. If no CompositeType is assigned to the binding, the default \nimplementation assumes a space separated list of values. This will cause the setValue to be called for each \nnested binding, except for undefined values in the array.","!type":"fn(oValue: Object)","!category":"function"},"attachDataStateChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'messageChange' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"getBindings":{"!description":"Returns the property bindings contained in this composite binding.","!type":"fn() -> Array","!category":"function"},"!category":"class","attachChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the '_change' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"updateRequired":{"!description":"Determines if the property bindings in the composite binding should be updated by calling updateRequired on all property bindings with the specified model.","!type":"fn(oModel: Object) -> Boolean","!category":"function"},"!proto":"sap.ui.model.PropertyBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.CompositeBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"initialize":{"!description":"Initialize the binding. The message should be called when creating a binding.\nThe default implementation calls checkUpdate(true).\nPrevent checkUpdate to be triggered while initializing nestend bindings, it is\nsufficient to call checkUpdate when all nested bindings are initialized.","!type":"fn()","!category":"function"}},"sap.ui.core.util.MockServer":{"getRequests":{"!description":"Getter for property <code>requests<\/code>.\n\nDefault value is <code>[]<\/code>","!type":"fn() -> [Object]","!category":"function"},"stop":{"!description":"Stops the server.","!type":"fn()","!category":"function"},"simulate":{"!description":"Simulates an existing OData service by sepcifiying the metadata URL and the base URL for the mockdata. The server\nconfigures the request handlers depending on the service metadata. The mockdata needs to be stored individually for\neach entity type in a separate JSON file. The name of the JSON file needs to match the name of the entity type. If\nno base url for the mockdata is specified then the mockdata are generated from the metadata","!type":"fn(sMetadataUrl: String, vMockdataSettings?: String | Object)","!category":"function"},"attachBefore":{"!description":"callback function for attachBefore","!type":"fn(event: String, fnCallback: fn(), sEntitySet: String)","!category":"function"},"setRequests":{"!description":"Setter for property <code>requests<\/code>.\n\nDefault value is is <code>[]<\/code>\n\nEach array entry should consist of an array with the following properties / values:\n\n<ul>\n<li><b>method <string>: \"GET\"|\"POST\"|\"DELETE|\"PUT\"<\/b>\n<br>\n(any HTTP verb)\n<\/li>\n<li><b>path <string>: \"/path/to/resource\"<\/b>\n<br>\nThe path is converted to a regular expression, so it can contain normal regular expression syntax.\nAll regular expression groups are forwarded as arguments to the <code>response<\/code> function.\nIn addition to this, parameters can be written in this notation: <code>:param<\/code>. These placeholder will be replaced by regular expression groups.\n<\/li>\n<li><b>response <function>: function(xhr, param1, param2, ...) { }<\/b>\n<br>\nThe xhr object can be used to respond on the request. Supported methods are:\n<br>\n<code>xhr.respond(iStatusCode, mHeaders, sBody)<\/code>\n<br>\n<code>xhr.respondJSON(iStatusCode, mHeaders, oJsonObjectOrString)<\/code>. By default a JSON header is set for response header\n<br>\n<code>xhr.respondXML(iStatusCode, mHeaders, sXmlString)<\/code>. By default a XML header is set for response header\n<br>\n<code>xhr.respondFile(iStatusCode, mHeaders, sFileUrl)<\/code>. By default the mime type of the file is set for response header\n<\/li>\n<\/ul>","!type":"fn(requests: [Object])","!category":"function"},"detachBefore":{"!description":"callback function for detachBefore","!type":"fn(event: String, fnCallback: fn(), sEntitySet: String)","!category":"function"},"getRootUri":{"!description":"Getter for property <code>rootUri<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function"},"attachAfter":{"!description":"callback function for attachBefore","!type":"fn(event: String, fnCallback: fn(), sEntitySet: String)","!category":"function"},"setEntitySetData":{"!description":"Sets the data of the given EntitySet name with the given array.","!type":"fn(sEntitySetName: undefined, aData: undefined)","!category":"function"},"getEntitySetData":{"!description":"Returns the data model of the given EntitySet name.","!type":"fn(sEntitySetName: undefined) -> Array","!category":"function"},"destroy":{"!description":"Cleans up the resources associated with this object and all its aggregated children.\n\nAfter an object has been destroyed, it can no longer be used in!\n\nApplications should call this method if they don't need the object any longer.","!type":"fn(bSuppressInvalidate?: Boolean)","!category":"function"},"setRootUri":{"!description":"Setter for property <code>rootUri<\/code>. All request path URI are prefixed with this root URI if set.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(rootUri: String)","!category":"function"},"detachAfter":{"!description":"callback function for detachAfter","!type":"fn(event: String, fnCallback: fn(), sEntitySet: String)","!category":"function"},"!description":"Class to mock http requests made to a remote server","start":{"!description":"Starts the server.","!type":"fn()","!category":"function"},"!category":"class","isStarted":{"!description":"Returns whether the server is started or not.","!type":"fn() -> Boolean","!category":"function"},"!proto":"sap.ui.base.ManagedObject","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.MockServer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.tmpl.DOMElement":{"indexOfElement":{"!description":"Checks for the provided <code>sap.ui.core.tmpl.DOMElement<\/code> in the aggregation named <code>elements<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oElement: sap.ui.core.tmpl.DOMElement) -> Number","!category":"function"},"getTag":{"!description":"Gets current value of property <code>tag<\/code>.\n\nThe HTML-tag of the DOM element which contains the text\n\nDefault value is <code>span<\/code>.","!type":"fn() -> String","!category":"function"},"getElements":{"!description":"Gets content of aggregation <code>elements<\/code>.\n\nNested DOM elements to support nested bindable structures","!type":"fn() -> [sap.ui.core.tmpl.DOMElement]","!category":"function"},"attr":{"!description":"Returns the value of a DOM attribute if available or undefined if the DOM attribute is not available when using this method with the parameter name only. \nWhen using the method with the parameter name and value the method acts as a setter and sets the value of a DOM attribute. \nIn this case the return value is the reference to this DOM element to support method chaining. If you pass null as value of the attribute the attribute will be removed.","!type":"fn(sName: String, sValue: String) -> Object","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe text content of the DOM element\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.core.tmpl.DOMElement","!category":"function"},"removeAttr":{"!description":"Removes the DOM attribute for the given name and returns the reference to this DOM element to support method chaining.","!type":"fn(sName: String) -> sap.ui.core.tmpl.DOMElement","!category":"function"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe text content of the DOM element","!type":"fn() -> String","!category":"function"},"setTag":{"!description":"Sets a new value for property <code>tag<\/code>.\n\nThe HTML-tag of the DOM element which contains the text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>span<\/code>.","!type":"fn(sTag: String) -> sap.ui.core.tmpl.DOMElement","!category":"function"},"removeElement":{"!description":"Removes a element from the aggregation named <code>elements<\/code>.","!type":"fn(vElement: Number | String | sap.ui.core.tmpl.DOMElement) -> sap.ui.core.tmpl.DOMElement","!category":"function"},"addElement":{"!description":"Adds some element into the aggregation named <code>elements<\/code>.","!type":"fn(oElement: sap.ui.core.tmpl.DOMElement) -> sap.ui.core.tmpl.DOMElement","!category":"function"},"insertAttribute":{"!description":"Inserts a attribute into the aggregation named <code>attributes<\/code>.","!type":"fn(oAttribute: sap.ui.core.tmpl.DOMAttribute, iIndex: Number) -> sap.ui.core.tmpl.DOMElement","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","insertElement":{"!description":"Inserts a element into the aggregation named <code>elements<\/code>.","!type":"fn(oElement: sap.ui.core.tmpl.DOMElement, iIndex: Number) -> sap.ui.core.tmpl.DOMElement","!category":"function"},"!category":"class","indexOfAttribute":{"!description":"Checks for the provided <code>sap.ui.core.tmpl.DOMAttribute<\/code> in the aggregation named <code>attributes<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAttribute: sap.ui.core.tmpl.DOMAttribute) -> Number","!category":"function"},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation\nnamed <code>attributes<\/code>.","!type":"fn() -> sap.ui.core.tmpl.DOMElement","!category":"function"},"removeAttribute":{"!description":"Removes a attribute from the aggregation named <code>attributes<\/code>.","!type":"fn(vAttribute: Number | String | sap.ui.core.tmpl.DOMAttribute) -> sap.ui.core.tmpl.DOMAttribute","!category":"function"},"destroyElements":{"!description":"Destroys all the elements in the aggregation\nnamed <code>elements<\/code>.","!type":"fn() -> sap.ui.core.tmpl.DOMElement","!category":"function"},"getAttributes":{"!description":"Gets content of aggregation <code>attributes<\/code>.\n\nDOM attributes which are rendered as part of the DOM element and bindable","!type":"fn() -> [sap.ui.core.tmpl.DOMAttribute]","!category":"function"},"removeAllElements":{"!description":"Removes all the controls in the aggregation named <code>elements<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.tmpl.DOMElement]","!category":"function"},"removeAllAttributes":{"!description":"Removes all the controls in the aggregation named <code>attributes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.tmpl.DOMAttribute]","!category":"function"},"!proto":"sap.ui.core.Control","addAttribute":{"!description":"Adds some attribute into the aggregation named <code>attributes<\/code>.","!type":"fn(oAttribute: sap.ui.core.tmpl.DOMAttribute) -> sap.ui.core.tmpl.DOMElement","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.DOMElement.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.DataState_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.DataState with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.model.DataState"},"jQuery.device":{"is":"jQuery.device.is","!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use the respective functions of sap.ui.Device<br>undefined","!category":"namespace"},"sap.ui.model.odata.type.Single_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Single with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Single"},"sap.ui.model.odata.v2":{"!description":"OData-based DataBinding","ODataContextBinding":"sap.ui.model.odata.v2.ODataContextBinding_obj","ODataListBinding":"sap.ui.model.odata.v2.ODataListBinding_obj","ODataTreeBinding":"sap.ui.model.odata.v2.ODataTreeBinding_obj","!category":"namespace","ODataModel":"sap.ui.model.odata.v2.ODataModel_obj"},"sap.ui.model.TreeBindingCompatibilityAdapter":{"!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.core.util":{"fileExtension":{"!description":"File extension.","!type":"String","!category":"enum"},"ExportTypeCSV":"sap.ui.core.util.ExportTypeCSV_obj","separatorChar":{"!description":"Separator char.\n\nValue needs to be exactly one character or empty for default.","!type":"String","!category":"enum"},"ExportRow":"sap.ui.core.util.ExportRow_obj","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!type":"Boolean","!category":"enum"},"serializer":"sap.ui.core.util.serializer","XMLPreprocessor":"sap.ui.core.util.XMLPreprocessor","File":"sap.ui.core.util.File","charset":{"!description":"Charset.","!type":"String","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"MockServer":"sap.ui.core.util.MockServer_obj","Export":"sap.ui.core.util.Export_obj","content":{"!description":"Cell content.","!type":"String","!category":"enum"},"requests":{"!description":"Getter for property <code>requests<\/code>.\n\nDefault value is <code>[]<\/code>","!type":"[Object]","!category":"enum"},"rootUri":{"!description":"Getter for property <code>rootUri<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"String","!category":"enum"},"ExportCell":"sap.ui.core.util.ExportCell_obj","HTTPMETHOD":{"!description":"Enum for the method.","!type":"String","!category":"enum"},"ExportColumn":"sap.ui.core.util.ExportColumn_obj","ExportType":"sap.ui.core.util.ExportType_obj","name":{"!description":"Column name.","!type":"String","!category":"enum"},"!category":"namespace","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!type":"[String]","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"mimeType":{"!description":"MIME type.","!type":"String","!category":"enum"}},"sap.ui.core.message.MessageParser_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageParser with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.message.MessageParser"},"sap.ui.core.delegate.ScrollEnablement":{"setPullDown":{"!description":"Set overflow control on top of scroll container.","!type":"fn(top: sap.ui.core.Control)","!category":"function"},"getChildPosition":{"!description":"Calculates scroll position of a child of a container.","!type":"fn(vElement: HTMLElement | jQuery) -> Object","!category":"function"},"setHorizontal":{"!description":"Enable or disable horizontal scrolling.","!type":"fn(bHorizontal: Boolean)","!category":"function"},"setIconTabBar":{"!description":"Sets IconTabBar control to scroll container","!type":"fn(IconTabBar: sap.m.IconTabBar)","!category":"function"},"setGrowingList":{"!description":"Sets GrowingList control to scroll container","!type":"fn(GrowingList: sap.m.GrowingList)","!category":"function"},"destroy":{"!description":"Destroys this Scrolling delegate.\n\nThis function must be called by the control which uses this delegate in the <code>exit<\/code> function.","!type":"fn()","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setBounce":{"!description":"Setter for property <code>bounce<\/code>.","!type":"fn(bBounce: Boolean)","!category":"function"},"!category":"class","getHorizontal":{"!description":"Get current setting for horizontal scrolling.","!type":"fn() -> Boolean","!category":"function"},"scrollToElement":{"!description":"Scrolls to an element within a container.","!type":"fn(oElement: HTMLElement, iTime?: Number) -> ScrollEnablement","!category":"function"},"getVertical":{"!description":"Get current setting for vertical scrolling.","!type":"fn() -> Boolean","!category":"function"},"refresh":{"!description":"Refreshes this Scrolling delegate.","!type":"fn()","!category":"function"},"setVertical":{"!description":"Enable or disable vertical scrolling.","!type":"fn(bVertical: Boolean)","!category":"function"},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.delegate.ScrollEnablement.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.base.ManagedObject_obj":{"extend":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object, oScope?: Object)","prototype":"sap.ui.base.ManagedObject"},"sap.ui.model.odata.type.DateTime":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.DateTime<\/code><\/a>.\n\nIf you want to display a date and a time, prefer {@link\nsap.ui.model.odata.type.DateTimeOffset}, specifically designed for this purpose.\n\nUse <code>DateTime<\/code> with the SAP-specific annotation <code>display-format=Date<\/code>\n(resp. the constraint <code>displayFormat: \"Date\"<\/code>) to display only a date.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>Date<\/code>. With the constraint <code>displayFormat: \"Date\"<\/code>, the timezone is\nUTF and the time part is ignored, otherwise it is a date/time value in local time.","getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.DateTime.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.DateTimeBase"},"sap.ui.core.delegate":{"!category":"namespace","ItemNavigation":"sap.ui.core.delegate.ItemNavigation_obj","ScrollEnablement":"sap.ui.core.delegate.ScrollEnablement_obj"},"sap.ui.model.Model":{"createBindingContext":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, mParameters?: Object, fnCallBack?: fn(), bReload?: Boolean) -> sap.ui.model.Context","!category":"function"},"setLegacySyntax":{"!description":"Enables legacy path syntax handling\n\nThis defines, whether relative bindings, which do not have a defined\nbinding context, should be compatible to earlier releases which means\nthey are resolved relative to the root element or handled strict and\nstay unresolved until a binding context is set","!type":"fn(bLegacySyntax: Boolean)","!category":"function"},"getMetaModel":{"!description":"Returns the meta model associated with this model if it is available for the concrete\nmodel type.","!type":"fn() -> sap.ui.model.MetaModel","!category":"function"},"detachRequestCompleted":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'requestCompleted' event of this <code>sap.ui.model.Model<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function"},"detachRequestSent":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'requestSent' event of this <code>sap.ui.model.Model<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function"},"destroy":{"!description":"Destroys the model and clears the model data.\nA model implementation may override this function and perform model specific cleanup tasks e.g.\nabort requests, prevent new requests, etc.","!type":"fn()","!category":"function"},"bindProperty":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, mParameters?: Object) -> sap.ui.model.PropertyBinding","!category":"function"},"setSizeLimit":{"!description":"Set the maximum number of entries which are used for for list bindings.","!type":"fn(iSizeLimit: Number)","!category":"function"},"bindTree":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, aFilters?: Array, mParameters?: Object) -> sap.ui.model.TreeBinding","!category":"function"},"fireRequestSent":{"!description":"Fire event requestSent to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function"},"getOriginalProperty":{"!description":"Returns the original value for the property with the given path and context.\nThe original value is the value that was last responded by a server if using a server model implementation.","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function"},"!category":"class","detachParseError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'parseError' event of this <code>sap.ui.model.Model<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function"},"refresh":{"!description":"Refresh the model.\nThis will check all bindings for updated data and update the controls if data has been changed.","!type":"fn(bForceUpdate: Boolean)","!category":"function"},"getObject":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object)","!category":"function"},"attachRequestSent":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'requestSent' event of this <code>sap.ui.model.Model<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function"},"attachRequestFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'requestFailed' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function"},"destroyBindingContext":{"!description":"Implement in inheriting classes","!type":"fn(oContext: Object)","!category":"function"},"fireRequestCompleted":{"!description":"Fire event requestCompleted to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function"},"isBindingModeSupported":{"!description":"Check if the specified binding mode is supported by the model.","!type":"fn(sMode: sap.ui.model.BindingMode)","!category":"function"},"isLegacySyntax":{"!description":"Returns whether legacy path syntax is used","!type":"fn() -> Boolean","!category":"function"},"bindList":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, aSorters?: sap.ui.model.Sorter, aFilters?: Array, mParameters?: Object) -> sap.ui.model.ListBinding","!category":"function"},"attachRequestCompleted":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'requestCompleted' event of this <code>sap.ui.model.Model<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function"},"getDefaultBindingMode":{"!description":"Get the default binding mode for the model","!type":"fn() -> sap.ui.model.BindingMode","!category":"function"},"detachRequestFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'requestFailed' event of this <code>sap.ui.model.Model<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function"},"fireParseError":{"!description":"Fire event parseError to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function"},"setMessages":{"!description":"Sets messages","!type":"fn(mMessages: Object)","!category":"function"},"!description":"This is an abstract base class for model objects.","getMessagesByPath":{"!description":"Get messages for path","!type":"fn(sPath: String)","!category":"function"},"fireRequestFailed":{"!description":"Fire event requestFailed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function"},"getProperty":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object)","!category":"function"},"setDefaultBindingMode":{"!description":"Set the default binding mode for the model. If the default binding mode should be changed,\nthis method should be called directly after model instance creation and before any binding creation.\nOtherwise it is not guaranteed that the existing bindings will be updated with the new binding mode.","!type":"fn(sMode: sap.ui.model.BindingMode) -> sap.ui.model.Model","!category":"function"},"attachParseError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'parseError' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function"},"bindContext":{"!description":"Create ContextBinding","!type":"fn(sPath: String | Object, oContext?: Object, mParameters?: Object, oEvents?: Object) -> sap.ui.model.ContextBinding","!category":"function"},"!proto":"sap.ui.core.message.MessageProcessor","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Model.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.Popup":{"setAnimations":{"!description":"Sets the animation functions to use for opening and closing the Popup. Any null value will be ignored and not change the respective animation function.\nWhen called, the animation functions receive three parameters:\n- the jQuery object wrapping the DomRef of the popup\n- the requested animation duration\n- a function that MUST be called once the animation has completed","!type":"fn(fnOpen: fn(), fnClose: fn()) -> sap.ui.core.Popup","!category":"function"},"setInitialZIndex":{"!description":"Set an initial z-index that should be used by all Popup so all Popups start at least\nwith the set z-index.\nIf the given z-index is lower than any current available z-index the highest z-index will be used.","!type":"fn(iInitialZIndex: Number)","!category":"function"},"getAutoClose":{"!description":"Determines whether the pop-up should auto closes or not.","!type":"fn() -> Boolean","!category":"function"},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'opened' event of this <code>sap.ui.core.Popup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Popup","!category":"function"},"setModal":{"!description":"Used to specify whether the Popup should be modal. A modal popup will put some fading \"block layer\" over the background and\nprevent attempts to put the focus outside/below the popup.\nSetting this while the popup is open will change \"block layer\" immediately.","!type":"fn(bModal: Boolean, sModalCSSClass?: String) -> sap.ui.core.Popup","!category":"function"},"getLastZIndex":{"!description":"Returns the last z-index that has been handed out. does not increase the internal z-index counter.","!type":"fn() -> Number","!category":"function"},"close":{"!description":"Closes the popup.\n\nIf the Popup is already closed or in the process of closing, calling this method does nothing.\nIf the Popup is in the process of being opened and closed with a duration of 0, calling this method does nothing.\nIf the Popup is in the process of being opened and closed with an animation duration, the animation will be chained, but this functionality is dangerous,\nmay lead to inconsistent behavior and is thus not recommended and may even be removed.","!type":"fn(iDuration?: Number)","!category":"function"},"destroy":{"!description":"Closes and destroys this instance of Popup.\nDoes not destroy the hosted content.","!type":"fn()","!category":"function"},"open":{"!description":"Opens the popup's content at the position either specified here or beforehand via {@link #setPosition}.\nContent must be capable of being positioned via \"position:absolute;\"\nAll parameters are optional (open() may be called without any parameters). iDuration may just be omitted, but if any of \"at\", \"of\", \"offset\", \"collision\" is given, also the preceding positioning parameters (\"my\", at\",...) must be given.\n\nIf the Popup's OpenState is different from \"CLOSED\" (i.e. if the Popup is already open, opening or closing), the call is ignored.","!type":"fn(iDuration?: Number, my?: sap.ui.core.Popup.Dock, at?: sap.ui.core.Popup.Dock, of?: String | sap.ui.core.Element | DOMRef | jQuery | jQuery.Event, offset?: String, collision?: String, followOf?: Boolean)","!category":"function"},"setFollowOf":{"!description":"This enabled/disables the Popup to follow its opening reference. If the Popup is open and a followOf should\nbe set the corresponding listener will be attached.","!type":"fn(followOf: Boolean | fn() | null)","!category":"function"},"!category":"class","setDurations":{"!description":"Sets the durations for opening and closing animations.\nNull values and values < 0 are ignored.\nA duration of 0 means no animation.\nDefault value is \"fast\" which is the jQuery constant for \"200 ms\".","!type":"fn(iOpenDuration: Number, iCloseDuration: Number) -> sap.ui.core.Popup","!category":"function"},"fireOpened":{"!description":"Fires event opened to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.Popup","!category":"function"},"setAutoCloseAreas":{"!description":"Sets the additional areas in the page that are considered part of the Popup when autoclose is enabled.\n- non-touch environment: if the focus leaves the Popup but immediately enters one of these areas, the Popup does NOT close.\n- touch environment: if user clicks one of these areas, the Popup does NOT close.","!type":"fn(aAutoCloseAreas: [DomRef]) -> sap.ui.core.Popup","!category":"function"},"getFollowOf":{"!description":"This returns true/false if the default followOf method should be used. If a separate followOf-handler was previously added\nthe correspodning function is returned.","!type":"fn() -> Boolean | fn()","!category":"function"},"getModal":{"!description":"Returns the value if a Popup is of modal type","!type":"fn()","!category":"function"},"setInitialFocusId":{"!description":"Sets the ID of the element that should be focused once the popup opens.\nIf the given ID is the ID of an existing Control, this Control's focusDomRef will be focused instead, which may be an HTML element with a different ID (usually a sub-element inside the Control).\nIf no existing element ID is supplied and the Popup is modal or auto-close, the Popup will instead focus the first focusable element.","!type":"fn(sId: String)","!category":"function"},"getContent":{"!description":"Returns this Popup's content.","!type":"fn() -> sap.ui.core.Control | DOMRef","!category":"function"},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'opened' event of this <code>sap.ui.core.Popup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.Popup<\/code> itself.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Popup","!category":"function"},"setPosition":{"!description":"Sets the position of the Popup (if you refer to a Control as anchor then do not\nuse the DOMRef of the control which might change after re-renderings).\nOptional parameters can only be omitted when all subsequent parameters are omitted as well.","!type":"fn(my: sap.ui.core.Popup.Dock, at: sap.ui.core.Popup.Dock | Object, of?: String | sap.ui.core.Element | DOMRef | jQuery | jQuery.Event, offset?: String, collision?: String) -> sap.ui.core.Popup","!category":"function"},"getNextZIndex":{"!description":"Returns the next available z-index on top of the existing/previous popups. Each call increases the internal z-index counter and the returned z-index.","!type":"fn() -> Number","!category":"function"},"getOpenState":{"!description":"Returns whether the Popup is currently open, closed, or transitioning between these states.","!type":"fn() -> sap.ui.core.OpenState","!category":"function"},"setContent":{"!description":"Sets the content this instance of the Popup should render.\nContent must be capable of being positioned via position:absolute;","!type":"fn(oContent: sap.ui.core.Control | DOMRef) -> sap.ui.core.Popup","!category":"function"},"fireClosed":{"!description":"Fires event closed to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.Popup","!category":"function"},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'closed' event of this <code>sap.ui.core.Popup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.Popup<\/code> itself.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Popup","!category":"function"},"exit":{"!description":"When the Popup is being destroyed all corresponding references should be\ndeleted as well to prevent any memory leaks.","!type":"fn()","!category":"function"},"isOpen":{"!description":"Returns whether the Popup is currently open (this includes opening and closing animations).","!type":"fn() -> Boolean","!category":"function"},"setShadow":{"!description":"Determines whether the Popup should have a shadow (in supporting browsers).\nThis also affects a currently open popup.","!type":"fn(bShowShadow: Boolean) -> sap.ui.core.Popup","!category":"function"},"!description":"Popup Class is a helper class for controls that want themselves or\nparts of themselves or even other aggregated or composed controls\nor plain HTML content to popup on the screen like menues, dialogs, drop down boxes.\n\nIt allows the controls to be aligned to other dom elements\nusing the {@link sap.ui.core.Popup.Dock.html} method. With it you can define where\nthe popup should be docked. One can dock the popup to the top bottom left or right side\nof a dom ref.\n\nIn the case that the popup has no space to show itself in the view port\nof the current window it tries to open itself to\nthe inverted direction.\n\n<strong>Since 1.12.3<\/strong> it is possible to add further DOM-element-ids that can get the focus\nwhen 'autoclose' is enabled. E.g. the RichTextEditor with running TinyMCE uses this method to\nbe able to focus the Popups of the TinyMCE if the RichTextEditor runs within a Popup/Dialog etc.\n\n To provide an additional DOM-element that can get the focus the following should be done:\n\t// create an object with the corresponding DOM-id\n\tvar oObject = {\n\t\tid : \"this_is_the_most_valuable_id_of_the_DOM_element\"\n\t};\n\n\t// add the event prefix for adding an element to the ID of the corresponding Popup\n\tvar sEventId = \"sap.ui.core.Popup.addFocusableContent-\" + oPopup.getId();\n\n\t// fire the event with the created event-id and the object with the DOM-id\n\tsap.ui.getCore().getEventBus().publish(\"sap.ui\", sEventId, oObject);","setAutoClose":{"!description":"Used to specify whether the Popup should close as soon as\n- for non-touch environment: the focus leaves\n- for touch environment: user clicks the area which is outside the popup itself, the dom elemnt which popup aligns to (except document),\n and one of the autoCloseAreas set by calling setAutoCloseAreas.","!type":"fn(bAutoClose: Boolean) -> sap.ui.core.Popup","!category":"function"},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'closed' event of this <code>sap.ui.core.Popup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Popup","!category":"function"},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Popup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui":{"lazyRequire":{"!description":"Creates a lazy loading stub for a given class <code>sClassName<\/code>.\n\nIf the class has been loaded already, nothing is done. Otherwise a stub object\nor constructor and - optionally - a set of stub methods are created.\nAll created stubs will load the corresponding module on execution\nand then delegate to their counterpart in the loaded module.\n\nWhen no methods are given or when the list of methods contains the special name\n\"new\" (which is an operator can't be used as method name in JavaScript), then a\nstub <b>constructor<\/b> for class <code>sClassName<\/code> is created.\nOtherwise, a plain object is created.\n\n<b>Note<\/b>: Accessing any stub as a plain object without executing it (no matter\nwhether it is a function or an object) won't load the module and therefore most like\nwon't work as expected. This is a fundamental restriction of the lazy loader approach.\nIt could only be fixed with JavaScript 1.5 features that are not available in all\nUI5 target browsers (e.g. not in IE8).\n\n<b>Note<\/b>: As a side effect of this method, the namespace containing the given\nclass is created <b>immediately<\/b>.","!type":"fn(sClassName: String, sMethods?: String, sModuleName?: String)","!category":"function"},"model":"sap.ui.model","getVersionInfo":{"!description":"Loads the version info file (resources/sap-ui-version.json) and returns \nit or if a library name is specified then the version info of the individual \nlibrary will be returned.\n\nIn case of the version info file is not available an error will occur when\ncalling this function.","!type":"fn(mOptions?: String | Object) -> Object | undefined | Promise","!category":"function"},"Device":"sap.ui.Device","test":"sap.ui.test","getCore":{"!description":"Retrieve the {@link sap.ui.core.Core SAPUI5 Core} instance for the current window.","!type":"fn() -> sap.ui.core.Core","!category":"function"},"namespace":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use jQuery.sap.declare or jQuery.sap.getObject(...,0) instead<br>Ensures that a given a namespace or hierarchy of nested namespaces exists in the\ncurrent <code>window<\/code>.","!type":"fn(sNamespace: String) -> Object","!category":"function"},"htmlview":{"!description":"Defines or creates an instance of a declarative HTML view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul>\n<li>View Definition <code>sap.ui.htmlview(sId, vView)<\/code>: Defines a view of the given name with the given\nimplementation. sId must be the views name, vView must be an object and can contain\nimplementations for any of the hooks provided by HTMLView<\/li>\n<li>View Instantiation <code>sap.ui.htmlview(sId?, vView)<\/code>: Creates an instance of the view with the given name (and id)<\/li>.\n<\/ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will\nbe created automatically.","!type":"fn(sId: String, vView: String | Object) -> sap.ui.core.mvc.HTMLView | undefined","!category":"function"},"component":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(vConfig: String | Object) -> sap.ui.core.Component | Promise","!category":"function"},"xmlview":{"!description":"Instantiates an XMLView of the given name and with the given id.\n\nThe <code>viewName<\/code> must either correspond to an XML module that can be loaded\nvia the module system (viewName + suffix \".view.xml\") and which defines the view or it must\nbe a configuration object for a view.\nThe configuration object can have a viewName, viewContent and a controller property. The viewName\nbehaves as described above. ViewContent is optional and can hold a view description as XML string or as\nalready parsed XML Document. If not given, the view content definition is loaded by the module system.\n\n<strong>Note<\/strong>: if a Document is given, it might be modified during view construction.\n\nThe controller property can hold an controller instance. If a controller instance is given,\nit overrides the controller defined in the view.\n\nLike with any other control, id is optional and one will be created automatically.","!type":"fn(sId: String, vView: String | Object) -> sap.ui.core.mvc.XMLView","!category":"function"},"!category":"namespace","htmlfragment":{"!description":"Instantiates an HTML-based Fragment.\n\nTo instantiate a Fragment, call this method as:\n   sap.ui.htmlfragment([sId], sFragmentName, [oController]);\nThe Fragment instance ID is optional (generated if not given) and will be used as prefix for the ID of all\ncontained controls. The sFragmentName must correspond to an HTML Fragment which can be loaded\nvia the module system (fragmentName + \".fragment.html\") and which defines the Fragment.\nIf oController is given, the methods referenced in the Fragment will be called on this controller.\nNote that Fragments may require a Controller to be given and certain methods to be available.\n\n\nAdvanced usage:\nTo instantiate a Fragment and optionally directly give the HTML definition instead of loading it from a file,\ncall this method as:\n    sap.ui.htmlfragment(oFragmentConfig, [oController]);\nThe oFragmentConfig object can have a either a \"fragmentName\" or a \"fragmentContent\" property.\nfragmentContent is optional and can hold the Fragment definition as XML string; if not\ngiven, fragmentName must be given and the Fragment content definition is loaded by the module system.\nAgain, if oController is given, the methods referenced in the Fragment will be called on this controller.","!type":"fn(sId: String, vFragment: String | Object, oController?: sap.ui.core.mvc.Controller) -> [sap.ui.core.Control | sap.ui.core.Control]","!category":"function"},"fragment":{"!description":"Instantiate a Fragment - this method loads the Fragment content, instantiates it, and returns this content.\nThe Fragment object itself is not an entity which has further significance beyond this constructor.\n\nTo instantiate an existing Fragment, call this method as:\n   sap.ui.fragment(sName, sType, [oController]);\nThe sName must correspond to an XML Fragment which can be loaded\nvia the module system (fragmentName + suffix \".fragment.[typeextension]\") and which defines the Fragment content.\nIf oController is given, the (event handler) methods referenced in the Fragment will be called on this controller.\nNote that Fragments may require a Controller to be given and certain methods to be available.\n\nThe Fragment types \"XML\", \"JS\" and \"HTML\" are available by default; additional Fragment types can be implemented\nand added using the sap.ui.core.Fragment.registerType() function.\n\n\nAdvanced usage:\nTo instantiate a Fragment and give further configuration options, call this method as:\n    sap.ui.fragment(oFragmentConfig, [oController]);\nThe oFragmentConfig object can have the following properties:\n- \"fragmentName\": the name of the Fragment, as above\n- \"fragmentContent\": the definition of the Fragment content itself. When this property is given, any given name is ignored.\n        The type of this property depends on the Fragment type, e.g. it could be a string for XML Fragments.\n- \"type\": the type of the Fragment, as above (mandatory)\n- \"id\": the ID of the Fragment (optional)\nFurther properties may be supported by future or custom Fragment types. Any given properties\nwill be forwarded to the Fragment implementation.\n\nIf you want to give a fixed ID for the Fragment, please use the advanced version of this method call with the\nconfiguration object or use the typed factories like sap.ui.xmlfragment(...) or sap.ui.jsfragment(...).\nOtherwise the Fragment ID is generated. In any case, the Fragment ID will be used as prefix for the ID of\nall contained controls.","!type":"fn(sName: String, sType: String, oController?: sap.ui.core.Controller) -> [sap.ui.core.Control | sap.ui.core.Control]","!category":"function"},"extensionpoint":{"!description":"Creates 0..n UI5 controls from an ExtensionPoint.\nOne control if the ExtensionPoint is e.g. filled with a View, zero for ExtensionPoints without configured extension and\nn controls for multi-root Fragments as extension.\n\nIn JSViews, this function allows both JSON notation in aggregation content as well as adding an extension point to an aggregation after the target control\nhas already been instantiated. In the latter case the optional parameters oTargetControls and oTargetAggregation need to be specified.","!type":"fn(oContainer: sap.ui.core.mvc.View | sap.ui.core.Fragment, sExtName: String, fnCreateDefaultContent?: createDefaultContent, oTargetControl?: sap.ui.core.Control, sAggregationName?: String) -> [sap.ui.core.Control]","!category":"function"},"xmlfragment":{"!description":"Instantiates an XML-based Fragment.\n\nTo instantiate a Fragment, call this method as:\n   sap.ui.xmlfragment([sId], sFragmentName, [oController]);\nThe Fragment instance ID is optional (generated if not given) and will be used as prefix for the ID of all\ncontained controls. The sFragmentName must correspond to an XML Fragment which can be loaded\nvia the module system (fragmentName + \".fragment.xml\") and which defines the Fragment.\nIf oController is given, the methods referenced in the Fragment will be called on this controller.\nNote that Fragments may require a Controller to be given and certain methods to be available.\n\n\nAdvanced usage:\nTo instantiate a Fragment and optionally directly give the XML definition instead of loading it from a file,\ncall this method as:\n    sap.ui.xmlfragment(oFragmentConfig, [oController]);\nThe oFragmentConfig object can have a either a \"fragmentName\" or a \"fragmentContent\" property.\nfragmentContent is optional and can hold the Fragment definition as XML string; if not\ngiven, fragmentName must be given and the Fragment content definition is loaded by the module system.\nAgain, if oController is given, the methods referenced in the Fragment will be called on this controller.","!type":"fn(sId: String, vFragment: String | Object, oController?: sap.ui.core.mvc.Controller) -> [sap.ui.core.Control | sap.ui.core.Control]","!category":"function"},"template":{"!description":"Creates a Template for the given id, dom reference or a configuration object.\nIf no parameter is defined this function makes a lookup of DOM elements \nwhich are specifying a type attribute. If the value of this type attribute\nmatches an registered type then the content of this DOM element will be \nused to create a new <code>Template<\/code> instance.\n\nIf you want to lookup all kind of existing and known templates and parse them\ndirectly you can simply call:\n<pre> \n  sap.ui.template();\n<\/pre>\n\nTo parse a concrete DOM element you can do so by using this function in the \nfollowing way:\n<pre>\n  sap.ui.template(\"theTemplateId\");\n<\/pre>\n\nOr you can pass the reference to a DOM element and use this DOM element as \na source for the template:\n<pre>\n  sap.ui.template(oDomRef);\n<\/pre>\n\nThe last option to use this function is to pass the information via a \nconfiguration object. This configuration object can be used to pass a \ncontext for the templating framework when compiling the template:\n<pre>\n  var oTemplateById = sap.ui.template({\n    id: \"theTemplateId\",\n    context: { ... }\n  });\n\n  var oTemplateByDomRef = sap.ui.template({\n    domref: oDomRef,\n    context: { ... }\n  });\n<\/pre>\n\nIt can also be used to load a template from another file:\n<pre>\n  var oTemplate = sap.ui.template({\n    id: \"myTemplate\",\n    src: \"myTemplate.tmpl\"\n  });\n\n  var oTemplateWithContext = sap.ui.template({\n    id: \"myTemplate\",\n    src: \"myTemplate.tmpl\",\n    context: { ... }\n  });\n<\/pre>\n\nThe properties of the configuration object are the following:\n<ul>\n<li><code>id<\/code> - the ID of the Template / the ID  of the DOM element containing the source of the Template<\/li>\n<li><code>domref<\/code> - the DOM element containing the source of the Template<\/li>\n<li><code>type<\/code> - the type of the Template<\/li>\n<li><code>src<\/code> - the URL to lookup the template<\/li> (<i>experimental!<\/i>)\n<li><code>control<\/code> - the fully qualified name of the control to declare<\/li> (<i>experimental!<\/i>)\n<\/ul>","!type":"fn(oTemplate?: String | DomRef | Object) -> [sap.ui.core.tmpl.Template | sap.ui.core.tmpl.Template]","!category":"function"},"define":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(sModuleName?: String, aDependencies?: [String], vFactory: fn() | Object, bExport?: Boolean)","!category":"function"},"app":"sap.ui.app","setRoot":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use function <code>placeAt<\/code> of <code>sap.ui.core.Control<\/code> instead.<br>Displays the control tree with the given root inside the area of the given\nDOM reference (or inside the DOM node with the given ID) or in the given Control.\n\nExample:\n<pre>\n  &lt;div id=\"SAPUI5UiArea\">&lt;/div>\n  &lt;script type=\"text/javascript\">\n    var oRoot = new sap.ui.commons.Label();\n    oRoot.setText(\"Hello world!\");\n    sap.ui.setRoot(\"SAPUI5UiArea\", oRoot);\n  &lt;/script>\n<\/pre>\n<p>\n\nThis is a shortcut for <code>sap.ui.getCore().setRoot()<\/code>.\n\nInternally, if a string is given that does not identify an UIArea or a control\nthen implicitly a new <code>UIArea<\/code> is created for the given DOM reference\nand the given control is added.","!type":"fn(oDomRef: String | Element | sap.ui.core.Control, oControl: sap.ui.base.Interface | sap.ui.core.Control)","!category":"function"},"jsview":{"!description":"Defines or creates an instance of a JavaScript view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul>\n<li>View Definition <code>sap.ui.jsview(sId, vView)<\/code>: Defines a view of the given name with the given\nimplementation. sId must be the view's name, vView must be an object and can contain\nimplementations for any of the hooks provided by JSView<\/li>\n\n<li>View Instantiation <code>sap.ui.jsview(sId?, vView)<\/code>: Creates an instance of the view with the given name (and id).\nIf no view implementation has been defined for that view name, a JavaScript module with the same name and with suffix \"view.js\" will be loaded\nand executed. The module should contain a view definition (1st. variant above). <\/li>\n<\/ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will\nbe created automatically.","!type":"fn(sId: String, vView: String | Object, bAsync?: Boolean) -> sap.ui.core.mvc.JSView | undefined","!category":"function"},"templateview":{"!description":"Defines or creates an instance of a template view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul>\n<li>View Definition <code>sap.ui.templateview(sId, vView)<\/code>: Defines a view of the given name with the given\nimplementation. sId must be the views name, vView must be an object and can contain\nimplementations for any of the hooks provided by templateview<\/li>\n<li>View Instantiation <code>sap.ui.templateview(sId?, vView)<\/code>: Creates an instance of the view with the given name (and id)<\/li>.\n<\/ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will\nbe created automatically.","!type":"fn(sId: String, vView: String | Object) -> sap.ui.core.mvc.TemplateView | undefined","!category":"function"},"resource":{"!description":"Returns the URL of a resource that belongs to the given library and has the given relative location within the library.\nThis is mainly meant for static resources like images that are inside the library.\nIt is NOT meant for access to JavaScript modules or anything for which a different URL has been registered with jQuery.sap.registerModulePath(). For\nthese cases use jQuery.sap.getModulePath().\nIt DOES work, however, when the given sResourcePath starts with \"themes/\" (= when it is a theme-dependent resource). Even when for this theme a different\nlocation outside the normal library location is configured.","!type":"fn(sLibraryName: String, sResourcePath: String) -> String","!category":"function"},"jsfragment":{"!description":"Defines OR instantiates an HTML-based Fragment.\n\nTo define a JS Fragment, call this method as:\n   sap.ui.jsfragment(sName, oFragmentDefinition)\nWhere:\n- \"sName\" is the name by which this fragment can be found and instantiated. If defined in its own file,\n   in order to be found by the module loading system, the file location and name must correspond to sName\n   (path + file name must be: fragmentName + \".fragment.js\").\n- \"oFragmentDefinition\" is an object at least holding the \"createContent(oController)\" method which defines\n   the Fragment content. If given during instantiation, the createContent method receives a Controller\n   instance (otherwise oController is undefined) and the return value must be one sap.ui.core.Control\n   (which could have any number of children).\n\n\nTo instantiate a JS Fragment, call this method as:\n   sap.ui.jsfragment([sId], sFragmentName, [oController]);\nThe Fragment ID is optional (generated if not given) and the Fragment implementation CAN use it\nto make contained controls unique (this depends on the implementation: some JS Fragments may choose\nnot to support multiple instances within one application and not use the ID prefixing).\nThe sFragmentName must correspond to a JS Fragment which can be loaded\nvia the module system (fragmentName + \".fragment.js\") and which defines the Fragment.\nIf oController is given, the methods referenced in the Fragment will be called on this controller.\nNote that Fragments may require a Controller to be given and certain methods to be available.","!type":"fn(sId: String, sFragmentName: String | Object, oController?: sap.ui.core.mvc.Controller) -> [sap.ui.core.Control | sap.ui.core.Control]","!category":"function"},"localResources":{"!description":"Redirects access to resources that are part of the given namespace to a location\nrelative to the assumed <b>application root folder<\/b>.\n\nAny UI5 managed resource (view, controller, control, JavaScript module, CSS file, etc.)\nwhose resource name starts with <code>sNamespace<\/code>, will be loaded from an\nequally named subfolder of the <b>application root folder<\/b>.\nIf the resource name consists of multiple segments (separated by a dot), each segment\nis assumed to represent an individual folder. In other words: when a resource name is\nconverted to an URL, any dots ('.') are converted to slashes ('/').\n\n<b>Limitation:<\/b> For the time being, the <b>application root folder<\/b> is assumed to be\nthe same as the folder where the current page resides in.\n\nUsage sample:\n<pre>\n  // Let UI5 know that resources, whose name starts with \"com.mycompany.myapp\"\n  // should be loaded from the URL location \"./com/mycompany/myapp\"\n  sap.ui.localResources(\"com.mycompany.myapp\");\n\n  // The following call implicitly will use the mapping done by the previous line\n  // It will load a view from ./com/mycompany/myapp/views/Main.view.xml\n  sap.ui.view({ view : \"com.mycompany.myapp.views.Main\", type : sap.ui.core.mvc.ViewType.XML});\n<\/pre>\n\nWhen applications need a more flexible mapping between resource names and their location,\nthey can use {@link jQuery.sap.registerModulePath}.\n\nIt is intended to make this configuration obsolete in future releases, but for the time\nbeing, applications must call this method when they want to store resources relative to\nthe assumed application root folder.","!type":"fn(sNamespace: String)","!category":"function"},"!description":"The <code>sap.ui<\/code> namespace is the central OpenAjax compliant entry\npoint for UI related JavaScript functionality provided by SAP.","base":"sap.ui.base","jsonview":{"!description":"Creates a JSON view of the given name and id.\n\nThe <code>viewName<\/code> must either correspond to a JSON module that can be loaded\nvia the module system (viewName + suffix \".view.json\") and which defines the view or it must\nbe a configuration object for a view.\nThe configuration object can have a viewName, viewContent and a controller property. The viewName\nbehaves as described above, viewContent can hold the view description as JSON string or as object literal.\n\n<strong>Note<\/strong>: when an object literal is given, it might be modified during view construction.\n\nThe controller property can hold an controller instance. If a controller instance is given,\nit overrides the controller defined in the view.\n\nLike with any other control, an id is optional and will be created when missing.","!type":"fn(sId: String, vView: String | Object) -> sap.ui.core.mvc.JSONView","!category":"function"},"core":"sap.ui.core","require":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(vDependencies: [String | String], fnCallback?: fn()) -> Object | undefined","!category":"function"},"view":{"!description":"Creates a view of the given type, name and with the given id.\n\nThe <code>vView<\/code> configuration object can have the following properties for the view\ninstantiation:\n<ul>\n<li>The ID <code>vView.id<\/code> specifies an ID for the View instance. If no ID is given,\nan ID will be generated.<\/li>\n<li>The view name <code>vView.viewName<\/code> corresponds to an XML module that can be loaded\nvia the module system (vView.viewName + suffix \".view.xml\")<\/li>\n<li>The controller instance <code>vView.controller<\/code> must be a valid controller implementation.\nThe given controller instance overrides the controller defined in the view definition<\/li>\n<li>The view type <code>vView.type<\/code> specifies what kind of view will be instantiated. All valid\nview types are listed in the enumeration sap.ui.core.mvc.ViewType.<\/li>\n<li>The view data <code>vView.viewData<\/code> can hold user specific data. This data is available\nduring the whole lifecycle of the view and the controller<\/li>\n<li>The view loading mode <code>vView.async<\/code> must be a boolean and defines if the view source is loaded\nsynchronously or asynchronously. In async mode, the view is rendered empty initially, and rerenderd with the\nloaded view content.<\/li>\n<li><code>vView.preprocessors<\/code><\/li> can hold a map from source type (e.g. \"xml\") to\npreprocessor configuration; the configuration consists of an optional\n<code>preprocessor<\/code> property and may contain further preprocessor-specific settings. The preprocessor can\nbe either a module name as string implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a function according to\n{@link sap.ui.core.mvc.View.Preprocessor.process}.\n\n<strong>Note<\/strong>: These preprocessors are only available to this instance. For global or a\ndefault availability use {@link sap.ui.core.mvc.XMLView.registerPreprocessor}.\n\n<strong>Note<\/strong>: Please note that preprocessors in general are currently only available\nto XMLViews.\n\n<strong>Note<\/strong>: Preprocessors only work in async views and will be ignored when the view is instantiated\nin sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the\nbSyncSupport flag of the preprocessor to true.","!type":"fn(sId: String, vView?: String | Object) -> sap.ui.core.mvc.View","!category":"function"},"controller":{"!description":"Defines a controller class or creates an instance of an already defined controller class.\n\nWhen a name and a controller implementation object is given, a new controller class\nof the given name is created. The members of the implementation object will be copied\ninto each new instance of that controller class (shallow copy).\n<b>Note<\/b>: as the members are shallow copied, controller instances will share all object values.\nThis might or might not be what applications expect.\n\nIf only a name is given, a new instance of the named Controller class is returned.","!type":"fn(sName: String, oControllerImpl?: Object) -> undefined | sap.ui.core.mvc.Controller","!category":"function"}},"sap.ui.base.EventProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.base.EventProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.base.EventProvider"},"sap.ui.core.SeparatorItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.SeparatorItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.SeparatorItem"},"sap.ui.core.MessageType":{"Information":{"!description":"Message should be just an information","!type":"String","!category":"enum"},"!description":"Defines the different message types of a message","!category":"static class","Warning":{"!description":"Message is a warning","!type":"String","!category":"enum"},"None":{"!description":"Message has no specific level","!type":"String","!category":"enum"},"Success":{"!description":"Message is an success message","!type":"String","!category":"enum"},"Error":{"!description":"Message is an error","!type":"String","!category":"enum"}},"sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest_obj":{"!type":"fn(oDimension: sap.ui.model.analytics.odata4analytics.Dimension, oParameterizationRequest: sap.ui.model.analytics.odata4analytics.ParameterizationRequest, bUseMasterData: Boolean)","prototype":"sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest"},"sap.ui.core.routing.Targets":{"destroy":{"!description":"Destroys the targets instance an all created targets. Does not destroy the views instance passed to the constructor. It has to be destroyed separately.","!type":"fn() -> sap.ui.core.routing.Targets","!category":"function"},"attachDisplay":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'display' event of this <code>sap.ui.core.routing.Targets<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Targets","!category":"function"},"!category":"class","display":{"!description":"Creates a view and puts it in an aggregation of the specified control.","!type":"fn(vTargets: [String | String], vData?: Object) -> sap.ui.core.routing.Targets","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Targets.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.core.tmpl.TemplateControl":{"getTemplate":{"!description":"ID of the element which is the current target of the <code>template<\/code> association, or <code>null<\/code>.\n\nThe template on which the template control is based on.","!type":"fn() -> sap.ui.core.tmpl.Template","!category":"function"},"setContext":{"!description":"Sets a new value for property <code>context<\/code>.\n\nThe context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oContext: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"setTemplateRenderer":{"!description":"Sets the instance specific renderer for an anoymous template control.","!type":"fn(fnRenderer: fn()) -> sap.ui.core.tmpl.Template","!category":"function"},"isInline":{"!description":"checks whether the control is inline or not","!type":"fn() -> Boolean","!category":"function"},"getTemplateRenderer":{"!description":"Returns the instance specific renderer for an anoymous template control.","!type":"fn() -> fn()","!category":"function"},"bindList":{"!description":"Creates a pseudo binding for a aggregation to get notified once the property \nchanges to invalidate the control and trigger a re-rendering.","!type":"fn(sPath: String) -> Object","!category":"function"},"getContext":{"!description":"Gets current value of property <code>context<\/code>.\n\nThe context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object.","!type":"fn() -> Object","!category":"function"},"bindProp":{"!description":"Creates a pseudo binding for a property to get notified once the property \nchanges to invalidate the control and trigger a re-rendering.","!type":"fn(sPath: String) -> Object","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","attachBeforeRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'beforeRendering' event of this <code>sap.ui.core.tmpl.TemplateControl<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.tmpl.TemplateControl<\/code> itself.\n\nFired before this Template Control is re-rendered. Use to unbind event handlers from HTML elements etc.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"detachBeforeRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'beforeRendering' event of this <code>sap.ui.core.tmpl.TemplateControl<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'afterRendering' event of this <code>sap.ui.core.tmpl.TemplateControl<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"!category":"class","fireBeforeRendering":{"!description":"Fires event beforeRendering to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"createControl":{"!description":"compiles (creates and registers) a new control","!type":"fn(mSettings: Object, sParentPath?: String, bDoNotAdd?: Boolean, oView: sap.ui.core.mvc.View) -> sap.ui.core.Control","!category":"function"},"setTemplate":{"!description":"Sets the associated <code>template<\/code>.","!type":"fn(oTemplate: sap.ui.core.tmpl.Template) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'afterRendering' event of this <code>sap.ui.core.tmpl.TemplateControl<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.tmpl.TemplateControl<\/code> itself.\n\nFired when the Template Control has been (re-)rendered and its HTML is present in the DOM.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"createDOMElement":{"!description":"compiles (creates and registers) a new DOM element","!type":"fn(mSettings: Object, sParentPath?: String, bDoNotAdd?: Boolean) -> sap.ui.core.Control","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.TemplateControl.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control","fireAfterRendering":{"!description":"Fires event afterRendering to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.tmpl.TemplateControl","!category":"function"}},"sap.ui.test.matchers.Matcher":{"!description":"Matchers for Opa5 - needs to implement an isMatching function that returns a boolean and will get a control instance as parameter","!category":"class","isMatching":{"!description":"Checks if the matcher is matching - will get an instance of sap.ui.Control as parameter\nShould be overwritten by subclasses","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function"},"!proto":"sap.ui.base.ManagedObject"},"sap.ui.model.odata.CountMode":{"Inline":{"!description":"Count is retrieved by adding $inlinecount=allpages and is included in the data request","!type":"String","!category":"enum"},"InlineRepeat":{"!description":"Count is retrieved by adding $inlinecount=allpages and is included in every data request","!type":"String","!category":"enum"},"Both":{"!description":"Count is retrieved by a separate request upfront and inline with each data request","!type":"String","!category":"enum"},"!description":"Different modes for retrieving the count of collections","!category":"namespace","Request":{"!description":"Count is retrieved by sending a separate $count request, before requesting data","!type":"String","!category":"enum"},"None":{"!description":"Count is not requested from the server","!type":"String","!category":"enum"}},"sap.ui.model.CompositeBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.CompositeBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.model.CompositeBinding"},"sap.ui.model.resource":{"!description":"ResourceBundle-based DataBinding","ResourceModel":"sap.ui.model.resource.ResourceModel_obj","!category":"namespace"},"sap.ui.model.analytics.AnalyticalBinding":{"getPropertyHeading":{"!description":"Gets the label of a property with a given name.","!type":"fn(sPropertyName: String) -> String","!category":"function"},"hasChildren":{"!description":"Determines if the contexts in a specified group have further children. If so, \nany of these group contexts can be a parent context of a nested sub-group in\na subsequent aggregation level.","!type":"fn(oContext: sap.ui.model.Context, mParameters: map) -> Boolean","!category":"function"},"sort":{"!description":"Sets sorters for retrieving the entities in the bound OData entity set in a specific order.\n\nInvoking this function resets the state of the binding. Subsequent data requests such as calls to getNodeContexts() will\nneed to trigger OData requests in order to fetch the data that are in line with these sorters.","!type":"function sort() { [native code for Array.sort, arity=1] }\n, aSorter: sap.ui.model.Sorter | Array) -> sap.ui.model.analytics.AnalyticalBinding","!category":"function"},"getAnalyticalQueryResult":{"!description":"Gets analytical metadata for the bound OData entity set.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.QueryResult","!category":"function"},"getRootContexts":{"!description":"Gets the context for the root aggregation level representing the grand total for all bound measure properties.\n\nThe context is assigned to parent group ID <code>null<\/code>. If the binding is configured not to provide a grand total, \nthis context is empty. If data for this context is not locally available yet, an OData request will be triggered to load it.\n\nThis function must be called whenever the bound set of OData entities changes, e.g., by changing selected dimensions, \nmodifying filter conditions, etc.","!type":"fn(mParameters: map) -> Array","!category":"function"},"getGroupSize":{"!description":"Gets the total number of contexts contained in a group, if known.\n\nFor a given group, be aware that the group size might vary over time. In principle, this can happen if the \nbound set of OData entities includes measure properties with amount or quantity values. The AnalyticalBinding\nrecognizes situations where the OData service returns multiple entries for a single group entry due to the fact that a \nmeasure property cannot be aggregated properly, because an amount exists in multiple currencies or a quantity exists \nin multiple units. In such situations, the AnalyticalBinding substitutes these entries by a single representative, and\nthe group size gets reduced by the count of duplicate entries. Finally, since the Binding does not always fetch all children of\na group at once, but only a page with a certain range, such size changes might happen after every page access.","!type":"fn(oContext: sap.ui.model.Context, iLevel: integer) -> integer","!category":"function"},"getPropertyQuickInfo":{"!description":"Gets the quick info of a property with a given name.","!type":"fn(sPropertyName: String) -> String","!category":"function"},"getTotalSize":{"!description":"Gets the total number of entities in the bound OData entity set. \n\nCounting takes place at the lowest aggregation level defined by the possible value combinations for the complete set of  \ndimension properties included in the bound entity set. This means that intermediate aggregate entities with\nsub-totals at higher aggregation levels are not counted.","!type":"fn() -> integer","!category":"function"},"getDownloadUrl":{"!description":"Get a download URL with the specified format considering the\nsort/filter/custom parameters.\n\nThe download URL also takes into account the selected dimensions and measures,\ndepending on the given column definitions of the AnalyticalTable.\nThis is based on the visible/inResult flags of the columns, as well as integrity dependencies,\ne.g. for mandatory Unit properties.","!type":"fn(sFormat: String) -> String","!category":"function"},"getFilterablePropertyNames":{"!description":"Gets the names of the filterable properties in the bound OData entity set.","!type":"fn() -> Array","!category":"function"},"!category":"class","getNodeContexts":{"!description":"Gets child contexts for a specified parent context.\n\nContexts are returned in a stable order imposed by the \ndimension property that defines this aggregation level beneath the parent context: Either a sort order has been specified for this property, \nor the entries are returned in ascending order of the values of this dimension property by default.\n\nIf any of the requested data is missing, an OData request will be triggered to load it.","!type":"fn(mParameters: map) -> Array","!category":"function"},"isMeasure":{"!description":"Determines if a given name refers to a measure property","!type":"fn(sPropertyName: String) -> Boolean","!category":"function"},"hasMeasures":{"!description":"Determines if any of the properties included in the bound OData entity set is a measure property.","!type":"fn() -> Boolean","!category":"function"},"refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event if this is the case. For service side models this should refetch\nthe data from the service. To update a control, even if no data has been changed, e.g. to reset a control after failed validation, please use the parameter\nbForceUpdate.","!type":"fn(bForceUpdate?: Boolean)","!category":"function"},"updateAnalyticalInfo":{"!description":"Updates the binding's structure with new analytical information.\n\nAnalytical information is the mapping of UI columns to properties in the bound OData entity set. Every column object contains\nthe name of the bound property and in addition:\n<ol>\n  <li>A column bound to a dimension property has further boolean properties: \n    <ul>\n      <li>grouped: dimension will be used for building groups<\/li> \n      <li>visible: if the column is visible, values for the related property will be fetched from the OData service<\/li>\n      <li>inResult: if the column is not visible, but declared to be part of the result, values for the related property \n      will also be fetched from the OData service<\/li>\n    <\/ul>\n  <\/li>\n  <li>A column bound to a measure property has further boolean properties: \n    <ul>\n      <li>total: totals and sub-totals will be provided for the measure at all aggregation levels<\/li> \n    <\/ul>\n  <\/li>\n<\/ol>\n\nInvoking this function resets the state of the binding and subsequent data requests such as calls to getNodeContexts() will\nneed to trigger OData requests in order to fetch the data that are in line with this analytical information.","!type":"fn(aColumns: Array)","!category":"function"},"getGroupName":{"!description":"Gets a printable name for a group.\n\nThe printable name follows the pattern is <code>&lt;label&gt;:&lt;key-value&gt;[-&lt;text-value&gt;]<\/code>, \nwhere <code>label<\/code> is the label of the dimension property used at the aggregation level for the group,\n<code>key-value<\/code> is the key value of that dimension for the group, and <code>text-value<\/code> is the \nvalue of the associated text property, if it is also used in the binding. \n\nWhenever a formatter function has been defined for a column displaying the key or text of this dimension, the return value\nof this function is applied for the group name instead of the respective key or text value.","!type":"fn(oContext: sap.ui.model.Context, iLevel: integer) -> String","!category":"function"},"getDimensionDetails":{"!description":"Gets details about the dimension properties included in the bound OData entity set.","!type":"fn() -> map","!category":"function"},"getPropertyLabel":{"!description":"Gets the label of a property with a given name.","!type":"fn(sPropertyName: String) -> String","!category":"function"},"getAnalyticalInfoForColumn":{"!description":"Gets the analytical information for a column with a given name.","!type":"fn(sColumnName: undefined) -> Object","!category":"function"},"providesGrandTotal":{"!description":"Determines if the binding has been configured to provide a grand total for the selected measure properties.","!type":"fn() -> Boolean","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMeasureDetails":{"!description":"Gets details about the measure properties included in the bound OData entity set.","!type":"fn() -> map","!category":"function"},"getSortablePropertyNames":{"!description":"Gets the names of the sortable properties in the bound OData entity set.","!type":"fn() -> Array","!category":"function"},"getProperty":{"!description":"Gets the metadata of a property with a given name.","!type":"fn(sPropertyName: String) -> Object","!category":"function"},"loadGroups":{"!description":"Loads child contexts of multiple groups.","!type":"fn(mGroupIdRanges: map)","!category":"function"},"filter":{"!description":"Sets filters for matching only a subset of the entities in the bound OData entity set.\n\nInvoking this function resets the state of the binding. Subsequent data requests such as calls to getNodeContexts() will\nneed to trigger OData requests in order to fetch the data that are in line with these filters.","!type":"function filter() { [native code for Array.filter, arity=1] }\n, aFilter: [sap.ui.model.Filter], sFilterType?: sap.ui.model.FilterType) -> sap.ui.model.analytics.AnalyticalBinding","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.analytics.AnalyticalBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.TreeBinding","hasAvailableNodeContexts":{"!description":"Determines if the binding has the entries of a given aggregation level locally available.\n\nIf so, no further OData request is required to fetch any of them.","!type":"fn(oContext: sap.ui.model.Context, iLevel: integer) -> Boolean","!category":"function"}},"sap.ui.core.util.ExportCell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportCell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportCell"},"sap.ui.core.DeclarativeSupport_obj":{"!type":"fn()","prototype":"sap.ui.core.DeclarativeSupport"},"sap.ui.model.resource.ResourceModel":{"enhance":{"!description":"Enhances the resource model with a custom resource bundle. The resource model\ncan be enhanced with multiple resource bundles. The last enhanced resource\nbundle wins against the previous ones and the original ones. This function\ncan be called several times.","!type":"fn(oData: Object | jQuery.sap.util.ResourceBundle) -> Promise","!category":"function"},"!description":"Model implementation for resource bundles","getResourceBundle":{"!description":"Returns the resource bundle of this model","!type":"fn()","!category":"function"},"getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>","!type":"fn(sPath: String) -> Object","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.resource.ResourceModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.Model"},"sap.ui.core.UIArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.UIArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oCore: sap.ui.core.Core, oRootNode?: Object)","prototype":"sap.ui.core.UIArea"},"sap.ui.core.IntervalTrigger_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.IntervalTrigger with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(iInterval: Number)","prototype":"sap.ui.core.IntervalTrigger"},"sap.ui.model.ClientContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientContextBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: Object, mParameters?: Object)","prototype":"sap.ui.model.ClientContextBinding"},"sap.ui.test.matchers.PropertyStrictEquals":{"getValue":{"!description":"Getter for property <code>value<\/code>.\n\nThe value of the property that is used for matching.","!type":"fn() -> String","!category":"function"},"!description":"PropertyStrictEquals - checks if a property has the exact same value","getName":{"!description":"Getter for property <code>name<\/code>.\n\nThe Name of the property that is used for matching.","!type":"fn() -> String","!category":"function"},"!category":"class","setValue":{"!description":"Setter for property <code>value<\/code>.","!type":"fn(sValue: String) -> sap.ui.test.matchers.PropertyStrictEquals","!category":"function"},"setName":{"!description":"Setter for property <code>name<\/code>.","!type":"fn(sValue: String) -> sap.ui.test.matchers.PropertyStrictEquals","!category":"function"},"isMatching":{"!description":"Checks if the control has a property that matches the value","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function"},"!proto":"sap.ui.test.matchers.Matcher"},"sap.ui.core.AppCacheBuster":{"register":{"!description":"Registers an application. Loads the cachebuster index file from this\nlocations. All registered files will be considered by the cachebuster\nand the URLs will be prefixed with the timestamp of the index file.","!type":"fn(base: String)","!category":"function"},"normalizeURL":{"!description":"Normalizes the given URL and make it absolute.","!type":"fn(sUrl: String) -> String","!category":"function"},"handleURL":{"!description":"Callback function which can be overwritten to programmatically decide\nwhether to rewrite the given URL or not.","!type":"fn(sUrl: String) -> Boolean","!category":"function"},"!description":"The AppCacheBuster is used to hook into URL relevant functions in jQuery\nand SAPUI5 and rewrite the URLs with a timestamp segment. The timestamp\ninformation is fetched from the server and used later on for the URL\nrewriting.","!category":"namespace","convertURL":{"!description":"Converts the given URL if it matches a URL in the cachebuster index. \nIf not then the same URL will be returned. To prevent URLs from being\nmodified by the application cachebuster you can implement the function\n<code>sap.ui.core.AppCacheBuster.handleURL<\/code>.","!type":"fn(sUrl: String) -> String","!category":"function"}},"sap.ui.core.mvc.TemplateView":{"!description":"A view defined in a template.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.TemplateView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.mvc.View"},"sap.ui.model.analytics.odata4analytics.Parameter_obj":{"!type":"fn(oParameterization: sap.ui.model.analytics.odata4analytics.Parameterization, oProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.Parameter"},"sap.ui.model.type":{"Float":"sap.ui.model.type.Float_obj","FileSize":"sap.ui.model.type.FileSize_obj","Time":"sap.ui.model.type.Time_obj","DateTime":"sap.ui.model.type.DateTime_obj","Date":"sap.ui.model.type.Date_obj","String":"sap.ui.model.type.String_obj","!category":"namespace","Integer":"sap.ui.model.type.Integer_obj","Boolean":"sap.ui.model.type.Boolean_obj","Currency":"sap.ui.model.type.Currency_obj"},"sap.ui.model.odata.type.Int32":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Int32<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>number<\/code>.","getRange":{"!description":"Returns the type's supported range as object with properties <code>minimum<\/code> and\n<code>maximum<\/code>.","!type":"fn() -> Object","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Int32.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.Int"},"sap.ui.core.util.serializer.Serializer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.Serializer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oRootControl: sap.ui.core.Control | sap.ui.core.UIArea, serializeDelegate: Object, bSkipRoot: Boolean, fnSkipAggregations: booolean)","prototype":"sap.ui.core.util.serializer.Serializer"},"sap.ui.model.analytics.odata4analytics.Model_obj":{"!type":"fn(oModel: Object, aWorkaroundID: [String])","prototype":"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround"},"sap.ui.core.mvc.JSView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.JSView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.JSView"},"sap.ui.core.LocalBusyIndicator":{"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThis property is the height of the control that has to\nbe covered. With this height the position of the animation can be\nproperly set.\n\nDefault value is <code>100px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14.2 The LocalBusyIndicator Control is not needed anymore by the new implementation of the LBI. Hence, it is not used anymore.<br>The LocalBusyIndicator is a special version of the\nBusyIndicator. This one doesn't block the whole screen - it just\nblocks the corresponding control and puts a local animation over the\ncontrol. To use the functionality of this control the corresponding\ncontrol needs to be enabled via the 'LocalBusyIndicatorSupport'\naccordingly to the ListBox control (see the init-function of the\nListBox).","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThis property is the height of the control that has to\nbe covered. With this height the position of the animation can be\nproperly set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100px<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.LocalBusyIndicator","!category":"function"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThis property is the width of the control that has to\nbe covered. With this width the position of the animation can be\nproperly set.\n\nDefault value is <code>100px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThis property is the width of the control that has to\nbe covered. With this width the position of the animation can be\nproperly set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100px<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.LocalBusyIndicator","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.LocalBusyIndicator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"jQuery.sap.measure":{"remove":{"!description":"Removes a performance measure","!type":"fn(sId: String)","!category":"function"},"getAllInteractionMeasurements":{"!description":"Gets all interaction measurements","!type":"fn() -> [Object]","!category":"function"},"clearRequestTimings":{"!description":"Clears all request timings","!type":"fn()","!category":"function"},"add":{"!description":"Adds a performance measurement with all data\nThis is usefull to add external measurements (e.g. from a backend) to the common measurement UI","!type":"fn(sId: String, sInfo: String, iStart: Number, iEnd: Number, iTime: Number, iDuration: Number, aCategories?: [String | String]) -> Object","!category":"function"},"setRequestBufferSize":{"!description":"Sets the request buffer size for the interaction measurement","!type":"fn(iSize: integer)","!category":"function"},"clear":{"!description":"Clears all performance measurements","!type":"fn()","!category":"function"},"pause":{"!description":"Pauses a performance measure","!type":"fn(sId: String) -> Object","!category":"function"},"getActive":{"!description":"Gets the current state of the perfomance measurement functionality","!type":"fn() -> Boolean","!category":"function"},"endInteraction":{"!description":"End an interaction measurements","!type":"fn(bForce: Boolean)","!category":"function"},"!category":"namespace","setActive":{"!description":"Activates or deactivates the performance measure functionality\nOptionally a category or list of categories can be passed to restrict measurements to certain categories\nlike \"javascript\", \"require\", \"xmlhttprequest\", \"render\"","!type":"fn(bOn: Boolean, An: [String | String]) -> Boolean","!category":"function"},"unregisterMethod":{"!description":"Unregisters an average measurement for a given objects method","!type":"fn(sId: String, oObject: Object, sMethod: String) -> Boolean","!category":"function"},"filterMeasurements":{"!description":"Gets all performance measurements where a provided filter function returns true.\nThe filter function is called for every measurement and should return the measurement to be added.\nIf no filter function is provided an empty array is returned.\nTo filter for certain categories of measurements a fnFilter can be implemented like this\n<code>\nfunction(oMeasurement) {\n    return oMeasurement.categories.indexOf(\"rendering\") > -1 ? oMeasurement : null\n}<\/code>","!type":"fn(fnFilter: fn(), bCompleted?: Boolean) -> Object","!category":"function"},"end":{"!description":"Ends a performance measure","!type":"fn(sId: String) -> Object","!category":"function"},"getAllMeasurements":{"!description":"Gets all performance measurements","!type":"fn(bCompleted?: Boolean) -> Object","!category":"function"},"startInteraction":{"!description":"Start an interaction measurements","!type":"fn(sType: String, oSrcControl: Object)","!category":"function"},"unregisterAllMethods":{"!description":"Unregisters all average measurements","!type":"fn()","!category":"function"},"registerMethod":{"!description":"Registers an average measurement for a given objects method","!type":"fn(sId: String, oObject: Object, sMethod: String, aCategories?: [String]) -> Boolean","!category":"function"},"resume":{"!description":"Resumes a performance measure","!type":"fn(sId: String) -> Object","!category":"function"},"!description":"Namespace for the jQuery performance measurement plug-in provided by SAP SE.","getMeasurement":{"!description":"Gets a performance measure","!type":"fn(sId: String) -> Object","!category":"function"},"start":{"!description":"Starts a performance measure.\nOptionally a category or list of categories can be passed to allow filtering of measurements.","!type":"fn(sId: String, sInfo: String, aCategories?: [String | String]) -> Object","!category":"function"},"getLastInteractionMeasurement":{"!description":"Clears all interaction measurements","!type":"fn()","!category":"function"},"average":{"!description":"Starts an average performance measure.\nThe duration of this measure is an avarage of durations measured for each call.\nOptionally a category or list of categories can be passed to allow filtering of measurements.","!type":"fn(sId: String, sInfo: String, aCategories?: [String | String]) -> Object","!category":"function"},"getRequestTimings":{"!description":"Gets the request timings for the interaction measurement","!type":"fn() -> [Object]","!category":"function"}},"sap.ui.core.TitleLevel":{"H6":{"!description":"The Title is of level 6","!type":"String","!category":"enum"},"H5":{"!description":"The Title is of level 5","!type":"String","!category":"enum"},"H4":{"!description":"The Title is of level 4","!type":"String","!category":"enum"},"!description":"Level of a title.","H3":{"!description":"The Title is of level 3","!type":"String","!category":"enum"},"H2":{"!description":"The Title is of level 2","!type":"String","!category":"enum"},"H1":{"!description":"The Title is of level 1.","!type":"String","!category":"enum"},"Auto":{"!description":"The level of the title is choosen by the control rendering the title.","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.model.Filter":{"!description":"Filter for the list binding","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Filter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.util.serializer.delegate.XML_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.XML with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.serializer.delegate.Delegate.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sDefaultXmlNamespace?: String, fnGetControlId?: fn(), fnGetEventHandlerName?: fn(), fnMemorizePackage?: fn())","prototype":"sap.ui.core.util.serializer.delegate.XML"},"sap.ui.core.mvc.XMLView":{"registerPreprocessor":{"!description":"Register a preprocessor for all views of a specific type.\n\nThe preprocessor can be registered for several stages of view initialization, which are\ndependant from the view type, e.g. \"raw\", \"xml\" or already initialized \"controls\". For each\ntype one preprocessor is executed. If there is a preprocessor passed to or activated at the\nview instance already, that one is used.\n\nIt can be either a module name as string of an implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a\nfunction with a signature according to {@link sap.ui.core.mvc.View.Preprocessor.process}.\n\n<strong>Note<\/strong>: Preprocessors work only in async views and will be ignored when the view is instantiated\nin sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the\nbSyncSupport flag to true.","!type":"fn(sType: String, vPreprocessor: String | fn(), bSyncSupport: Boolean, bOnDemand?: Boolean, mSettings: Object)","!category":"function"},"!description":"A View defined using (P)XML and HTML markup.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.XMLView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.mvc.View"},"sap.ui.base.Interface":{"!description":"A class that creates an Interface for an existing class. If a class returns the interface in its constructor,\n       only the defined functions will be visible, no internals of the class can be accessed.","!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.core.Fragment":{"registerType":{"!description":"Registers a new Fragment type","!type":"fn(sType: String, oFragmentImpl: Object)","!category":"function"},"getType":{"!description":"Gets current value of property <code>type<\/code>.","!type":"fn() -> String","!category":"function"},"!description":"Fragments support the definition of light-weight stand-alone UI control trees.\nThis class acts as factory which returns the UI control tree defined inside the Fragments. When used within declarative Views,\nthe Fragment content is imported and seamlessly integrated into the View.\n\nFragments are used similar as sap.ui.core.mvc.Views, but Fragments do not have a Controller on their own (they may know one, though),\nthey are not a Control, they are not part of the UI tree and they have no representation in HTML.\nBy default, in contrast to declarative Views, they do not do anything to guarantee ID uniqueness.\n\nBut like Views they can be defined in several Formats (XML, declarative HTML, JavaScript; support for other types can be plugged in),\nthe declaration syntax is the same as in declarative Views and the name and location of the Fragment files is similar to Views.\nController methods can also be referenced in the declarations, but as Fragments do not have their own controllers,\nthis requires the Fragments to be used within a View which does have a controller.\nThat controller is used, then.\n\nDo not call the Fragment constructor directly!\n\n\nUse-cases for Fragments are e.g.:\n- Modularization of UIs without fragmenting the controller structure\n- Re-use of UI parts\n- 100%-declarative definition of Views","byId":{"!description":"Returns an Element/Control by its ID in the context of the Fragment with the given ID","!type":"fn(sFragmentId: String, sId: String)","!category":"function"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\n\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sType: String) -> sap.ui.core.Fragment","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Fragment.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"createId":{"!description":"Returns the ID which a Control with the given ID in the context of the Fragment with the given ID would have","!type":"fn(sFragmentId: String, sId: String)","!category":"function"},"!proto":"sap.ui.base.ManagedObject"},"sap.ui.core.tmpl.DOMAttribute":{"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nValue of the DOM attribute","!type":"fn() -> String","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nName of the DOM attribute","!type":"fn() -> String","!category":"function"},"!category":"class","setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nValue of the DOM attribute\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValue: String) -> sap.ui.core.tmpl.DOMAttribute","!category":"function"},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nName of the DOM attribute\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.core.tmpl.DOMAttribute","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.DOMAttribute.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.model.odata.v2.ODataListBinding":{"sort":{"!description":"Sorts the list.","!type":"function sort() { [native code for Array.sort, arity=1] }\n, aSorters: sap.ui.model.Sorter | Array) -> sap.ui.model.ListBinding","!category":"function"},"!description":"List binding implementation for oData format","getContexts":{"!description":"Return contexts for the list","!type":"fn(iStartIndex?: Number, iLength?: Number, iThreshold?: Number) -> [sap.ui.model.Context]","!category":"function"},"!category":"class","getLength":{"!description":"Return the length of the list.\n\nIn case the final length is unknown (e.g. when searching on a large dataset), this will\nreturn an estimated length.","!type":"fn() -> Number","!category":"function"},"refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event\nif this is the case. For server side models this should refetch the data from the server.\nTo update a control, even if no data has been changed, e.g. to reset a control after failed\nvalidation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate?: Boolean, sGroupId?: String)","!category":"function"},"filter":{"!description":"\nFilters the list.\n\nWhen using sap.ui.model.Filter the filters are first grouped according to their binding path.\nAll filters belonging to a group are ORed and after that the\nresults of all groups are ANDed.\nUsually this means, all filters applied to a single table column\nare ORed, while filters on different table columns are ANDed.","!type":"function filter() { [native code for Array.filter, arity=1] }\n, aFilters: [sap.ui.model.Filter[] | sap.ui.model.odata.Filter], sFilterType: sap.ui.model.FilterType) -> sap.ui.model.ListBinding","!category":"function"},"initialize":{"!description":"Initialize binding. Fires a change if data is already available ($expand) or a refresh.\nIf metadata is not yet available, do nothing, method will be called again when\nmetadata is loaded.","!type":"fn() -> sap.ui.model.odata.OdataListBinding","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataListBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.ListBinding"},"sap.ui.core.util.ExportTypeCSV_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportTypeCSV with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.ExportType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportTypeCSV"},"sap.ui.base.Object":{"destroy":{"!description":"Destructor method for objects","!type":"fn()","!category":"function"},"defineClass":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.1 Use the static <code>extend<\/code> method of the desired base class (e.g. {@link sap.ui.base.Object.extend})<br>Creates metadata for a given class and attaches it to the constructor and prototype of that class.\n\nAfter creation, metadata can be retrieved with getMetadata().\n\nThe static info can at least contain the following entries:\n<ul>\n<li>baseType: {string} fully qualified name of a base class or empty\n<li>publicMethods: {string} an array of method names that will be visible in the interface proxy returned by {@link #getInterface}\n<\/ul>","!type":"fn(sClassName: String, oStaticInfo: Object, FNMetaImpl?: fn()) -> sap.ui.base.Metadata","!category":"function"},"!description":"Base class for all SAPUI5 Objects","!category":"class","getInterface":{"!description":"Returns the public interface of the object.","!type":"fn() -> sap.ui.base.Interface","!category":"function"},"getMetadata":{"!description":"Returns the metadata for the class that this object belongs to.\n\nThis method is only defined when metadata has been declared by using {@link sap.ui.base.Object.defineClass} \nor {@link sap.ui.base.Object.extend}.","!type":"fn()","!category":"function"},"!proto":"Object"},"sap.ui.model.odata.ODataContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataContextBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: Object, mParameters?: Object)","prototype":"sap.ui.model.odata.ODataContextBinding"},"sap.ui.model.odata.type.Decimal":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Decimal<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>string<\/code>. It never uses exponential format (\"1e-5\").","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ndefined constraints.","!type":"fn(sValue: String)","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type. When formatting to \"string\" the type's\nconstraint <code>scale<\/code> is taken into account.","!type":"fn(sValue: String, sTargetType: String) -> Number | String","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to a decimal in\n<code>string<\/code> representation.","!type":"fn(vValue: String | Number, sSourceType: String) -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Decimal.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.model.analytics.odata4analytics.RecursiveHierarchy_obj":{"!type":"fn(oEntityType: EntityType, oNodeIDProperty: Object, oParentNodeIDProperty: Object, oNodeLevelProperty: Object, oNodeValueProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.RecursiveHierarchy"},"sap.ui.model.resource.ResourceModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.resource.ResourceModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oData: Object)","prototype":"sap.ui.model.resource.ResourceModel"},"jQuery.sap.log.Level":{"!description":"Enumeration of the configurable log levels that a Logger should persist to the log.\n\nOnly if the current LogLevel is higher than the level {@link jQuery.sap.log.Level} of the currently added log entry,\nthen this very entry is permanently added to the log. Otherwise it is ignored.","WARNING":{"!description":"Warning level. Use this for logging unwanted but foreseen situations","!type":"String","!category":"enum"},"ERROR":{"!description":"Error level. Use this for logging of erroneous but still recoverable situations","!type":"String","!category":"enum"},"!category":"namespace","FATAL":{"!description":"Fatal level. Use this for logging unrecoverable situations","!type":"String","!category":"enum"},"INFO":{"!description":"Info level. Use this for logging information of purely informative nature","!type":"String","!category":"enum"},"NONE":{"!description":"Do not log anything","!type":"String","!category":"enum"},"DEBUG":{"!description":"Debug level. Use this for logging information necessary for debugging","!type":"String","!category":"enum"},"TRACE":{"!description":"Trace level. Use this for tracing the program flow.","!type":"String","!category":"enum"}},"sap.ui.base.ObjectPool":{"!description":"Manages a pool of objects all of the same type;\nthe type has to be specified at pool construction time.\n\nMaintains a list of free objects of the given type.\nIf {@link sap.ui.base.ObjectPool.prototype.borrowObject} is called, an existing free object\nis taken from the pool and the <code>init<\/code> method is called on this\nobject.\n\nWhen no longer needed, any borrowed object should be returned to\nthe pool by calling {@link #returnObject}. At that point in time,\nthe reset method is called on the object and the object is added to the\nlist of free objects.\n\nSee {@link sap.ui.base.Poolable} for a description of the contract for poolable objects.\n\nExample:\n<pre>\n  this.oEventPool = new sap.ui.base.ObjectPool(sap.ui.base.Event);\n  var oEvent = this.oEventPool.borrowObject(iEventId, mParameters);\n<\/pre>","!category":"class","borrowObject":{"!description":"Borrows a free object from the pool. Any arguments to this method\nare forwarded to the init method of the borrowed object.","!type":"fn(any?: Object) -> Object","!category":"function"},"returnObject":{"!description":"Returns an object to the pool. The object must have been borrowed from this\npool beforehand. The reset method is called on the object before it is added\nto the set of free objects.","!type":"fn(oObject: Object)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.base.ObjectPool.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.HTML":{"getDomRef":{"!type":"fn(sSuffix?: String) -> Element","!category":"function"},"getContent":{"!description":"Gets current value of property <code>content<\/code>.\n\nHTML content to be displayed, defined as a string. \n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)<\/code>, so any \nrestrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are:\n<ul>\n<li>the content must be enclosed in tags, pure text is not supported. <\/li>\n<li>if the content contains script tags, they will be executed but they will not appear in the \n    resulting DOM tree. When the contained code tries to find the corresponding script tag, \n    it will fail.<\/li>\n<\/ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content \n(e.g. setContent(\"<div/><div/>\")), but this is not a guaranteed feature. The accepted content \nmight be restricted to single root nodes in future versions. To notify applications about this \nfact, a warning is written in the log when multiple root nodes are used.","!type":"fn() -> String","!category":"function"},"setDOMContent":{"!description":"Sets some new DOM content for this HTML control. The content will replace the existing content\nafter the next rendering. Properties are not modified, but preferDOM should be set to true.","!type":"fn(oDom: Element) -> sap.ui.core.HTML","!category":"function"},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nSpecifies whether the control is visible. Invisible controls are not rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.core.HTML","!category":"function"},"setContent":{"!description":"Sets a new value for property <code>content<\/code>.\n\nHTML content to be displayed, defined as a string. \n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)<\/code>, so any \nrestrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are:\n<ul>\n<li>the content must be enclosed in tags, pure text is not supported. <\/li>\n<li>if the content contains script tags, they will be executed but they will not appear in the \n    resulting DOM tree. When the contained code tries to find the corresponding script tag, \n    it will fail.<\/li>\n<\/ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content \n(e.g. setContent(\"<div/><div/>\")), but this is not a guaranteed feature. The accepted content \nmight be restricted to single root nodes in future versions. To notify applications about this \nfact, a warning is written in the log when multiple root nodes are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContent: String) -> sap.ui.core.HTML","!category":"function"},"getSanitizeContent":{"!description":"Gets current value of property <code>sanitizeContent<\/code>.\n\nWhether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setPreferDOM":{"!description":"Sets a new value for property <code>preferDOM<\/code>.\n\nWhether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true):\n<ul>\n<li>for the initial rendering: when an HTML control is added to an UIArea for the first time \n    and if the root node of that UIArea contained DOM content with the same id as the HTML \n    control, then that content will be used for rendering instead of any specified string \n    content<\/li>\n<li>any follow-up rendering: when an HTML control is rendered for the second or any later \n    time and the preferDOM flag is set, then the DOM from the first rendering is preserved \n    and not replaced by the string content<\/li>\n<\/ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bPreferDOM: Boolean) -> sap.ui.core.HTML","!category":"function"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies whether the control is visible. Invisible controls are not rendered.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"Embeds standard HTML in a SAPUI5 control tree.\n\nSecurity Hint: By default, the HTML content (property 'content') is not sanitized and therefore \nopen to XSS attacks. Applications that want to show user defined input in an HTML control, should \neither sanitize the content on their own or activate automatic sanitizing through the \n{@link #setSanitizeContent sanitizeContent} property.\n\nAlthough this control inherits the <code>tooltip<\/code> aggregation/property and the \n<code>hasStyleClass<\/code>, <code>addStyleClass<\/code>, <code>removeStyleClass<\/code> and \n<code>toggleStyleClass<\/code> methods from its base class, it doesn't support them. \nInstead, the defined HTML content can contain a tooltip (title attribute) or custom CSS classes.\n\nFor further hints about usage restrictions for this control, see also the documentation of the \n<code>content<\/code> property.","detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'afterRendering' event of this <code>sap.ui.core.HTML<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.HTML","!category":"function"},"!category":"class","getPreferDOM":{"!description":"Gets current value of property <code>preferDOM<\/code>.\n\nWhether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true):\n<ul>\n<li>for the initial rendering: when an HTML control is added to an UIArea for the first time \n    and if the root node of that UIArea contained DOM content with the same id as the HTML \n    control, then that content will be used for rendering instead of any specified string \n    content<\/li>\n<li>any follow-up rendering: when an HTML control is rendered for the second or any later \n    time and the preferDOM flag is set, then the DOM from the first rendering is preserved \n    and not replaced by the string content<\/li>\n<\/ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setSanitizeContent":{"!description":"Sets a new value for property <code>sanitizeContent<\/code>.\n\nWhether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSanitizeContent: Boolean) -> sap.ui.core.HTML","!category":"function"},"attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'afterRendering' event of this <code>sap.ui.core.HTML<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.HTML<\/code> itself.\n\nFired after the HTML control has been rendered. Allows to manipulate the resulting DOM.\n\nWhen the control doesn't have string content and no preserved DOM existed for this control, \nthen this event will fire, but there won't be a DOM node for this control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.HTML","!category":"function"},"!proto":"sap.ui.core.Control","fireAfterRendering":{"!description":"Fires event afterRendering to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'isPreservedDOM' of type <code>boolean<\/code>Whether the current DOM of the control has been preserved (true) or not (e.g. \nrendered from content property or it is an empty HTML control).<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.HTML","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.HTML.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.odata.type":{"Double":"sap.ui.model.odata.type.Double_obj","Int64":"sap.ui.model.odata.type.Int64_obj","ODataType":"sap.ui.model.odata.type.ODataType_obj","Int32":"sap.ui.model.odata.type.Int32_obj","DateTimeOffset":"sap.ui.model.odata.type.DateTimeOffset_obj","Boolean":"sap.ui.model.odata.type.Boolean_obj","Single":"sap.ui.model.odata.type.Single_obj","Byte":"sap.ui.model.odata.type.Byte_obj","DateTimeBase":"sap.ui.model.odata.type.DateTimeBase_obj","Guid":"sap.ui.model.odata.type.Guid_obj","!description":"The types in this namespace are {@link sap.ui.model.SimpleType simple types} corresponding\nto the\n<a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\nOData primitive types<\/a>.\n\nThey can be used in any place where simple types are allowed (and the model representation\nmatches), but they are of course most valuable in bindings to an {@link\nsap.ui.model.odata.v2.ODataModel ODataModel}.\n\n<b>Example:<\/b>\n<pre>\n  &lt;Label text=\"ID\"/&gt;\n  &lt;Input value=\"{path: 'id', type: 'sap.ui.model.odata.type.String',\n      constraints: {nullable: false, maxLength: 10}}\"/&gt;\n  &lt;Label text=\"valid through\"/&gt;\n  &lt;Input value=\"{path: 'validThrough', type: 'sap.ui.model.odata.type.DateTime',\n      constraints: {displayFormat: 'Date'}}\"/&gt;\n<\/pre>\n\nAll types support formatting from the representation used in ODataModel (\"model format\") to\nvarious representations used by UI elements (\"target type\") and vice versa. Additionally they\nsupport validating a given value against the type's constraints.\n\nThe following target types may be supported:\n<table>\n<tr><th>Type<\/th><th>Description<\/th><\/tr>\n<tr><td><code>string<\/code><\/td><td>The value is converted to a <code>string<\/code>, so that it\ncan be displayed in an input field. Supported by all types.<\/td><\/tr>\n<tr><td><code>boolean<\/code><\/td><td>The value is converted to a <code>Boolean<\/code>, so that\nit can be displayed in a checkbox. Only supported by\n{@link sap.ui.model.odata.type.Boolean}.<\/td><\/tr>\n<tr><td><code>int<\/code><\/td><td>The value is converted to an integer (as <code>number<\/code>).\nMay cause truncation of decimals and overruns. Supported by all numeric types.<\/td><\/tr>\n<tr><td><code>float<\/code><\/td><td>The value is converted to a <code>number<\/code>. Supported by\nall numeric types.<\/td><\/tr>\n<tr><td><code>any<\/code><\/td><td>A technical format. The value is simply passed through. Only\nsupported by <code>format<\/code>, not by <code>parse<\/code>. Supported by all types.<\/td><\/tr>\n<\/table>\n\nAll constraints may be given as strings besides their natural types (e.g.\n<code>nullable: \"false\"<\/code> or <code>maxLength: \"10\"<\/code>). This makes the life of\ntemplate processors easier.\n\n<b>Handling of <code>null<\/code><\/b>:\n\nAll types handle <code>null<\/code> in the same way. When formatting to <code>string<\/code>, it\nis simply passed through (and <code>undefined<\/code> becomes <code>null<\/code>, too). When\nparsing from <code>string<\/code>, it is also passed through.  Additionally,\n{@link sap.ui.model.type.odata.String String} and {@link sap.ui.model.type.odata.Guid Guid}\nconvert the empty string to <code>null<\/code> when parsing. <code>validate<\/code> decides based\non the constraint <code>nullable<\/code>: If <code>false<\/code>, <code>null<\/code> is not\naccepted and leads to a (locale-dependent) <code>ParseException<\/code>.\n\nThis ensures that the user cannot clear an input field bound to an attribute with non-nullable\ntype. However it does not ensure that the user really entered something if the field was empty\nbefore.","Time":"sap.ui.model.odata.type.Time_obj","DateTime":"sap.ui.model.odata.type.DateTime_obj","Decimal":"sap.ui.model.odata.type.Decimal_obj","Int16":"sap.ui.model.odata.type.Int16_obj","String":"sap.ui.model.odata.type.String_obj","!category":"namespace","SByte":"sap.ui.model.odata.type.SByte_obj","Int":"sap.ui.model.odata.type.Int_obj"},"sap.ui.model.odata.ODataMetadata":{"fireFailed":{"!description":"Fire event failed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function"},"attachFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'failed' event of this <code>sap.ui.model.odata.ODataMetadata<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function"},"loaded":{"!description":"Returns a promise for the loaded state of the metadata","!type":"fn() -> Promise","!category":"function"},"attachLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'loaded' event of this <code>sap.ui.model.odata.ODataMetadata<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function"},"getUseBatch":{"!description":"Get the the use-batch extension value if any","!type":"fn() -> Boolean","!category":"function"},"fireLoaded":{"!description":"Fire event loaded to attached listeners.","!type":"fn() -> sap.ui.model.odata.ODataMetadata","!category":"function"},"getServiceMetadata":{"!description":"Return the metadata object","!type":"fn() -> Object","!category":"function"},"!description":"Implementation to access oData metadata","isFailed":{"!description":"Checks whether metadata loading has already failed","!type":"fn() -> Boolean","!category":"function"},"!category":"class","detachLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'loaded' event of this <code>sap.ui.model.odata.ODataMetadata<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function"},"refresh":{"!description":"Refreshes the metadata creating a new request to the server.\nReturns a new promise which can be resolved or rejected depending on the metadata loading state.","!type":"fn() -> Promise","!category":"function"},"isLoaded":{"!description":"Checks whether metadata is available","!type":"fn() -> Boolean","!category":"function"},"!proto":"sap.ui.base.EventProvider","detachFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'failed' event of this <code>sap.ui.model.odata.ODataMetadata<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataMetadata.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.tmpl.DOMElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.DOMElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.DOMElement"},"sap.ui.core.LocaleData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.LocaleData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oLocale: sap.ui.core.Locale)","prototype":"sap.ui.core.LocaleData"},"sap.ui.test.Opa":{"emptyQueue":{"!description":"Waits until all waitFor calls are done.","!type":"fn() -> jQuery.promise","!category":"function"},"!description":"One Page Acceptance testing.","waitFor":{"!description":"Queues up a waitFor command for Opa.\nThe Queue will not be emptied until {@link sap.ui.test.Opa#.emptyQueue} is called.\nIf you are using {@link sap.ui.test.opaQunit}, emptyQueue will be called by the wrapped tests.\n\nIf you are using Opa5, waitFor takes additional parameters.\nThey can be found here: {@link sap.ui.test.Opa5#waitFor}.\nWaits for a check condition to return true. Then a success function will be called.\nIf check does not return true until timeout is reached, an error function will be called.","!type":"fn(options: Object) -> jQuery.promise","!category":"function"},"!category":"class","resetConfig":{"!description":"Reset Opa.config to its default values\nAll of the global values can be overwritten in an individual waitFor call.\n\ndefaults are :\n<ul>\n\t\t<li>arrangements: a new Opa instance<\/li>\n\t\t<li>actions: a new Opa instance<\/li>\n\t\t<li>assertions: a new Opa instance<\/li>\n\t\t<li>timeout : 15 seconds, is increased to 5 minutes if running in debug mode e.g. with URL parameter sap-ui-debug=true<\/li>\n\t\t<li>pollingInterval: 400 milliseconds<\/li>\n<\/ul>","!type":"fn()","!category":"function"},"extendConfig":{"!description":"Extends and overwrites default values of the Opa.config","!type":"fn(options: Object)","!category":"function"},"getContext":{"!description":"Gives access to a singleton object you can save values in.\nsame as {@link sap.ui.test.Opa#getContext}","!type":"fn() -> Object","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.routing.Target_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Target with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oOptions: Object, oViews: sap.ui.core.routing.Views, oParent?: sap.ui.core.routing.Target)","prototype":"sap.ui.core.routing.Target"},"sap.ui.model.ClientTreeBindingAdapter_obj":{"!type":"fn()","prototype":"sap.ui.model.ClientTreeBindingAdapter"},"sap.ui.core.util.ExportCell":{"!description":"Contains content that can be used to export data. Used in {@link sap.ui.core.util.ExportColumn ExportColumn} / {@link sap.ui.core.util.Export Export}.","getContent":{"!description":"Gets current value of property <code>content<\/code>.\n\nCell content.","!type":"fn() -> String","!category":"function"},"!category":"class","setContent":{"!description":"Sets a new value for property <code>content<\/code>.\n\nCell content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContent: String) -> sap.ui.core.util.ExportCell","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportCell.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.Device.support":{"orientation":{"!description":"If this flag is set to <code>true<\/code>, the used browser natively supports the <code>orientationchange<\/code> event.\n\n<b>Note:<\/b> The {@link sap.ui.Device.orientation orientation event} of the device API can also be used when there is no native support.","!type":"Boolean","!category":"enum"},"!description":"Contains information about detected capabilities of the used browser or device.","touch":{"!description":"If this flag is set to <code>true<\/code>, the used browser supports touch events.\n\n<b>Note:<\/b> This flag indicates whether the used browser supports touch events or not.\nThis does not necessarily mean that the used device has a touchable screen.","!type":"Boolean","!category":"enum"},"!category":"namespace","pointer":{"!description":"If this flag is set to <code>true<\/code>, the used browser supports pointer events.","!type":"Boolean","!category":"enum"},"matchmedia":{"!description":"If this flag is set to <code>true<\/code>, the used browser natively supports media queries via JavaScript.\n\n<b>Note:<\/b> The {@link sap.ui.Device.media media queries API} of the device API can also be used when there is no native support.","!type":"Boolean","!category":"enum"},"matchmedialistener":{"!description":"If this flag is set to <code>true<\/code>, the used browser natively supports events of media queries via JavaScript.\n\n<b>Note:<\/b> The {@link sap.ui.Device.media media queries API} of the device API can also be used when there is no native support.","!type":"Boolean","!category":"enum"},"websocket":{"!description":"If this flag is set to <code>true<\/code>, the used browser supports web sockets.","!type":"Boolean","!category":"enum"},"retina":{"!description":"If this flag is set to <code>true<\/code>, the device has a display with a high resolution.","!type":"Boolean","!category":"enum"}},"sap.ui.model.odata.Filter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use the sap.ui.model.Filter instead (@link: sap.ui.model.Filter).<br>Filter for the list binding","!category":"class","convert":{"!description":"Converts the <code>sap.ui.model.odata.Filter<\/code> into a \n<code>sap.ui.model.Filter<\/code>.","!type":"fn() -> sap.ui.model.Filter","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.Filter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.odata.OperationMode":{"!description":"Different modes for executing service operations (filtering, sorting)","Auto":{"!description":"With OperationMode \"Auto\", operations are either processed on the client or on the server, depending on the given binding threshold.\nPlease be aware, that the combination of OperationMode.Auto and CountMode.None is not supported.\n\nThere are two possibilities which can happen, when using the \"Auto\" mode, depending on the configured \"CountMode\":\n1. CountMode \"Request\" and \"Both\"\nInitially the binding will issue a $count request without any filters/sorters.\na) If the count is lower or equal to the threshold, the binding will behave like in operation mode \"Client\", and a data request for all entries is issued.\nb) If the count exceeds the threshold, the binding will behave like in operation mode \"Server\".\n\n2. CountModes \"Inline\" or \"InlineRepeat\"\nThe initial request tries to fetch as many entries as the configured threshold, without any filters/sorters. In addition a $inlinecount is added.\nThe binding assumes, that the threshold given by the application can be met. If this is not the case additional data requests might be needed.\nSo the application has to have the necessary confidence that the threshold is high enough to make sure, that the data is not requested twice.\n\na) If this request returns fewer (or just as many) entries as the threshold, the binding will behave exactly like when using \nthe \"Client\" operation mode. Initially configured filters/sorters will be applied afterwards on the client.\nb) If the $inlinecount is higher than the threshold, the binding will behave like in operation mode \"Server\". In this case a new data request\ncontaining the initially set filters/sorters will be issued.","!type":"String","!category":"enum"},"!category":"namespace","Server":{"!description":"Operations are executed on the Odata service, by appending corresponding URL parameters ($filter, $orderby).\nEach change in filtering or sorting is triggering a new request to the server.","!type":"String","!category":"enum"},"Client":{"!description":"Operations are executed on the client, all entries must be avilable to be able to do so.\nThe initial request fetches the complete collection, filtering and sorting does not trigger further requests","!type":"String","!category":"enum"}},"sap.ui.core.IShrinkable":{"!description":"Interface for the controls which are suitable to shrink. \n\nThis means the control should still look fine when it gets smaller than its normal size,\ne.g. Text controls which can show ellipsis in case of shrink.\n\nNote: This marker interface can be implemented by controls to give a hint to the container. \nThe control itself does not need to implement anything. A parent control that respects this interface \nwill apply the \"flex-shrink\" as a CSS property which determines how much the item will shrink relative \nto the rest of the items in the container when negative free space is distributed.","!category":"static class"},"sap.ui.model.Sorter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Sorter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sPath: String, bDescending?: Boolean, vGroup: Boolean | fn())","prototype":"sap.ui.model.Sorter"},"sap.ui.model.message":{"!description":"Message DataBinding","MessageModel":"sap.ui.model.message.MessageModel_obj","!category":"namespace"},"sap.ui.model.odata.type.Int16":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Int16<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>number<\/code>.","getRange":{"!description":"Returns the type's supported range as object with properties <code>minimum<\/code> and\n<code>maximum<\/code>.","!type":"fn() -> Object","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Int16.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.Int"},"sap.ui.core.ImeMode":{"Active":{"!description":"IME is used for entering characters.","!type":"String","!category":"enum"},"!description":"State of the Input Method Editor (IME) for the control. \n\nDepending on its value, it allows users to enter and edit for example Chinese characters.","Inactive":{"!description":"IME is not used for entering characters.","!type":"String","!category":"enum"},"Disabled":{"!description":"IME is disabled.","!type":"String","!category":"enum"},"Auto":{"!description":"The value is automatically computed by the user agent.","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.core.LocaleData":{"getTerritories":{"!description":"Get locale specific territory names","!type":"fn() -> Object","!category":"function"},"getNumberSymbol":{"!description":"Get number symbol \"decimal\", \"group\", \"plusSign\", \"minusSign\", \"percentSign\"","!type":"fn(sType: String) -> String","!category":"function"},"getCurrencySymbol":{"!description":"Returns the currency symbol for the specified currency, if no symbol is found the ISO 4217 currency code is returned","!type":"fn(sCurrency: String) -> String","!category":"function"},"getCalendarWeek":{"!description":"Returns the defined pattern for representing the calendar week number.","!type":"fn(sStyle: String, iWeekNumber: Number) -> String","!category":"function"},"getWeekendEnd":{"!description":"Returns the last day of a weekend for the given locale. \n\nDays are encoded in the same way as for {@link #getFirstDayOfWeek}.\n\nAll week data information in the CLDR is provides for territories (countries).\nIf the locale of this LocaleData doesn't contain country information (e.g. if it \ncontains only a language), then the \"likelySubtag\" information of the CLDR  \nis taken into account to guess the \"most likely\" territory for the locale.","!type":"fn() -> Number","!category":"function"},"getEra":{"!description":"Returns the era name.","!type":"fn(sStyle: String, iIndex?: Number, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function"},"getDecimalPattern":{"!description":"Get decimal format pattern","!type":"fn() -> String","!category":"function"},"getFirstDayOfWeek":{"!description":"Returns the day that usually is regarded as the first day \nof a week in the current locale. Days are encoded as integer\nwhere sunday=0, monday=1 etc.\n\n\nAll week data information in the CLDR is provides for territories (countries).\nIf the locale of this LocaleData doesn't contain country information (e.g. if it \ncontains only a language), then the \"likelySubtag\" information of the CLDR  \nis taken into account to guess the \"most likely\" territory for the locale.","!type":"fn() -> Number","!category":"function"},"getDayPeriods":{"!description":"Get day periods in width \"narrow\", \"abbreviated\" or \"wide\"","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function"},"getMonths":{"!description":"Get month names in width \"narrow\", \"abbreviated\" or \"wide\"","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function"},"getDatePattern":{"!description":"Get date pattern in style \"short\", \"medium\", \"long\" or \"full\"","!type":"fn(sStyle: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function"},"getScripts":{"!description":"Get locale specific script names","!type":"fn() -> Object","!category":"function"},"getDays":{"!description":"Get day names in width \"narrow\", \"abbreviated\" or \"wide\"","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function"},"getCurrencyPattern":{"!description":"Get currency format pattern","!type":"fn(sContext: String) -> String","!category":"function"},"!category":"class","getRelativeDay":{"!description":"Returns the relative day resource pattern (like \"Today\", \"Yesterday\", \"{0} days ago\") based on the given\ndifference of days (0 means today, 1 means tommorrow, -1 means yesterday, ...).","!type":"fn(iDiff: Number) -> String","!category":"function"},"getDateTimePattern":{"!description":"Get datetime pattern in style \"short\", \"medium\", \"long\" or \"full\"","!type":"fn(sStyle: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function"},"getRelativeSecond":{"!description":"Returns the relative resource pattern with unit 'second' (like now, \"in {0} seconds\", \"{0} seconds ago\" under locale 'en') based on the given\ndifference value (0 means now, positive value means in the future and negative value means in the past).","!type":"fn(iDiff: Number) -> String","!category":"function"},"getRelativeMonth":{"!description":"Returns the relative month resource pattern (like \"This month\", \"Last month\", \"{0} months ago\") based on the given\ndifference of months (0 means this month, 1 means next month, -1 means last month, ...).","!type":"fn(iDiff: Number) -> String","!category":"function"},"getQuartersStandAlone":{"!description":"Get stand alone quarter names in width \"narrow\", \"abbreviated\" or \"wide\"","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function"},"getOrientation":{"!description":"Get orientation (left-to-right or right-to-left)","!type":"fn() -> String","!category":"function"},"getCurrencyCodeBySymbol":{"!description":"Returns the currency code which is corresponded with the given currency symbol.","!type":"fn(sCurrencySymbol: String) -> String","!category":"function"},"getRelativeHour":{"!description":"Returns the relative resource pattern with unit 'hour' (like \"in {0} hour(s)\", \"{0} hour(s) ago\" under locale 'en') based on the given\ndifference value (positive value means in the future and negative value means in the past).\n\nThere's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeMinute or getRelativeSecond\nfunction to format the difference using unit 'minute' or 'second'.","!type":"fn(iDiff: Number) -> String | null","!category":"function"},"getRelativeMinute":{"!description":"Returns the relative resource pattern with unit 'minute' (like \"in {0} minute(s)\", \"{0} minute(s) ago\" under locale 'en') based on the given\ndifference value (positive value means in the future and negative value means in the past).\n\nThere's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeSecond\nfunction to format the difference using unit 'second'.","!type":"fn(iDiff: Number) -> String | null","!category":"function"},"getLanguages":{"!description":"Get locale specific language names","!type":"fn() -> Object","!category":"function"},"getPercentPattern":{"!description":"Get percent format pattern","!type":"fn() -> String","!category":"function"},"getPreferredCalendarType":{"!description":"Returns the preferred calendar type for the current locale which exists in {@link sap.ui.core.CalendarType}\n\nreturns {sap.ui.core.CalendarType} the preferred calendar type","!type":"fn()","!category":"function"},"getRelativeYear":{"!description":"Returns the relative year resource pattern (like \"This year\", \"Last year\", \"{0} year ago\") based on the given\ndifference of years (0 means this year, 1 means next year, -1 means last year, ...).","!type":"fn(iDiff: Number) -> String","!category":"function"},"getQuarters":{"!description":"Get quarter names in width \"narrow\", \"abbreviated\" or \"wide\"","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function"},"!description":"Data provides access to locale-specific data, like date formats, number formats, currencies, etc.","getDecimalFormat":{"!description":"Returns the short decimal formats (like 1K, 1M....)","!type":"fn(sStyle: String, sNumber: String, sPlural: String) -> String","!category":"function"},"getRelativeWeek":{"!description":"Returns the relative week resource pattern (like \"This week\", \"Last week\", \"{0} weeks ago\") based on the given\ndifference of weeks (0 means this week, 1 means next week, -1 means last week, ...).","!type":"fn(iDiff: Number) -> String","!category":"function"},"getWeekendStart":{"!description":"Returns the first day of a weekend for the given locale. \n\nDays are encoded in the same way as for {@link #getFirstDayOfWeek}.\n\nAll week data information in the CLDR is provides for territories (countries).\nIf the locale of this LocaleData doesn't contain country information (e.g. if it \ncontains only a language), then the \"likelySubtag\" information of the CLDR  \nis taken into account to guess the \"most likely\" territory for the locale.","!type":"fn() -> Number","!category":"function"},"getDaysStandAlone":{"!description":"Get stand alone day names in width \"narrow\", \"abbreviated\" or \"wide\"","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function"},"getTimePattern":{"!description":"Get time pattern in style \"short\", \"medium\", \"long\" or \"full\"","!type":"fn(sStyle: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function"},"getMonthsStandAlone":{"!description":"Get stand alone month names in width \"narrow\", \"abbreviated\" or \"wide\"","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function"},"getCurrencyDigits":{"!description":"Returns the number of digits of the specified currency","!type":"fn(sCurrency: String) -> Number","!category":"function"},"getIntervalPattern":{"!description":"Returns the interval format with the given Id (see CLDR documentation for valid Ids)\nor the fallback format if no interval format with that Id is known.\n\nThe empty Id (\"\") might be used to retrieve the interval format fallback.","!type":"fn(sId: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function"},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.LocaleData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.analytics.odata4analytics.QueryResult":{"getModel":{"!description":"Get the analytical model containing the entity set for this query result","!type":"fn() -> Object","!category":"function"},"getEntityType":{"!description":"Get the entity type defining the type of this query result in the OData\nmodel","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntityType","!category":"function"},"getParameterization":{"!description":"Get the parameterization of this query result","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Parameterization","!category":"function"},"getAllMeasures":{"!description":"Get all measures included in this query result","!type":"fn() -> Object","!category":"function"},"getTotaledPropertiesListProperty":{"!description":"Get property holding the totaled property list","!type":"fn() -> Object","!category":"function"},"findDimensionByPropertyName":{"!description":"Find dimension by property name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Dimension","!category":"function"},"findMeasureByPropertyName":{"!description":"Find measure by property name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Measure","!category":"function"},"getAllDimensionNames":{"!description":"Get the names of all dimensions included in the query result","!type":"fn() -> array(string)","!category":"function"},"getEntitySet":{"!description":"Get the entity set representing this query result in the OData model","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntitySet","!category":"function"},"findDimensionByName":{"!description":"Find dimension by name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Dimension","!category":"function"},"!description":"Representation of an entity type annotated with\n       sap:semantics=\"aggregate\".","findMeasureByName":{"!description":"Find measure by name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Measure","!category":"function"},"getAllDimensions":{"!description":"Get all dimensions included in this query result","!type":"fn() -> Object","!category":"function"},"getAllMeasureNames":{"!description":"Get the names of all measures included in the query result","!type":"fn() -> array(string)","!category":"function"},"getName":{"!description":"Get the name of the query result","!type":"fn() -> String","!category":"function"},"!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.core.routing.History":{"getPreviousHash":{"!description":"gets the previous hash in the history - if the last direction was Unknown or there was no navigation yet, undefined will be returned","!type":"fn() -> String","!category":"function"},"getDirection":{"!description":"Determines what the navigation direction for a newly given hash would be\nIt will say Unknown if there is a history foo - bar (current history) - foo\nIf you now ask for the direction of the hash \"foo\" you get Unknown because it might be backwards or forwards.\nFor hash replacements, the history stack will be replaced at this position for the history.","!type":"fn(sNewHash?: String) -> sap.ui.core.routing.HistoryDirection","!category":"function"},"!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.core.BarColor":{"POSITIVE":{"!description":"Color: green (#b5e7a8)","!type":"String","!category":"enum"},"!description":"Configuration options for the colors of a progress bar","!category":"static class","CRITICAL":{"!description":"Color: yellow (#faf2b0)","!type":"String","!category":"enum"},"NEUTRAL":{"!description":"Color: blue (#b8d0e8)","!type":"String","!category":"enum"},"NEGATIVE":{"!description":"Color: red (#ff9a90)","!type":"String","!category":"enum"}},"sap.ui.model.odata.type.Guid_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Guid with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Guid"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI_obj":{"!type":"fn(sURI: String)","prototype":"sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI"},"sap.ui.model.odata.type.Int64":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Int64<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>string<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ndefined constraints.","!type":"fn(sValue: String)","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(sValue: String, sTargetType: String) -> Number | String","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to an Int64 in\n<code>string<\/code> representation.","!type":"fn(vValue: String | Number, sSourceType: String) -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Int64.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel_obj":{"!type":"fn(oModel: Object)","prototype":"sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel"},"sap.ui.core.search.OpenSearchProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.search.OpenSearchProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.search.SearchProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.search.OpenSearchProvider"},"sap.ui.core.ID":{"!description":"A string type representing an Id or a name.","!category":"namespace"},"sap.ui.core.search.SearchProvider":{"!description":"Abstract base class for all SearchProviders which can be e.g. attached to a SearchField. Do not create instances of this class, but use a concrete sub class instead.","!category":"class","suggest":{"!description":"Call this function to get suggest values from the search provider.\nThe given callback function is called with the suggest value (type 'string', 1st parameter)\nand an array of the suggestions (type '[string]', 2nd parameter).","!type":"fn(sValue: String, fnCallback: fn())","!category":"function"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon of the Search Provider\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.ui.core.search.SearchProvider","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon of the Search Provider","!type":"fn() -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.search.SearchProvider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.model":{"SimpleType":"sap.ui.model.SimpleType_obj","ClientModel":"sap.ui.model.ClientModel_obj","CompositeBinding":"sap.ui.model.CompositeBinding_obj","odata":"sap.ui.model.odata","Model":"sap.ui.model.Model_obj","Type":"sap.ui.model.Type_obj","type":"sap.ui.model.type","DataState":"sap.ui.model.DataState_obj","ParseException":{"!description":"ParseException class\n\nThis exception is thrown, when a parse error occurs while converting a\nstring value to a specific property type in the model.","!type":"fn()","!category":"function"},"MULTI_SELECTION":{"!description":"SelectionMode: Multi Selection","!type":"String","!category":"enum"},"Context":"sap.ui.model.Context_obj","json":"sap.ui.model.json","SINGLE_SELECTION":{"!description":"SelectionMode: Single Selection","!type":"String","!category":"enum"},"!category":"namespace","FilterOperator":"sap.ui.model.FilterOperator","ListBinding":"sap.ui.model.ListBinding_obj","Binding":"sap.ui.model.Binding_obj","TreeBindingAdapter":"sap.ui.model.TreeBindingAdapter_obj","ClientTreeBindingAdapter":"sap.ui.model.ClientTreeBindingAdapter_obj","control":"sap.ui.model.control","PropertyBinding":"sap.ui.model.PropertyBinding_obj","SelectionModel":"sap.ui.model.SelectionModel_obj","TreeBindingCompatibilityAdapter":"sap.ui.model.TreeBindingCompatibilityAdapter_obj","FormatException":{"!description":"FormatException class\n\nThis exception is thrown, when an error occurs while trying to convert a value of the model to\na specific property value in the UI.","!type":"fn()","!category":"function"},"ValidateException":{"!description":"ValidateException class\n\nThis exception is thrown, when a validation error occurs while checking the\ndefined constraints for a type.","!type":"fn()","!category":"function"},"resource":"sap.ui.model.resource","xml":"sap.ui.model.xml","TreeBindingUtils":"sap.ui.model.TreeBindingUtils","TreeBinding":"sap.ui.model.TreeBinding_obj","analytics":"sap.ui.model.analytics","message":"sap.ui.model.message","Filter":"sap.ui.model.Filter_obj","ClientContextBinding":"sap.ui.model.ClientContextBinding_obj","!description":"sap.ui.model.TreeBindingUtils Utility Class","ChangeReason":"sap.ui.model.ChangeReason","Sorter":"sap.ui.model.Sorter_obj","CompositeType":"sap.ui.model.CompositeType_obj","BindingMode":"sap.ui.model.BindingMode","FilterType":"sap.ui.model.FilterType","ContextBinding":"sap.ui.model.ContextBinding_obj","MetaModel":"sap.ui.model.MetaModel_obj"},"sap.ui.base.Object_obj":{"extend":{"!description":"Creates a subclass of class sap.ui.base.Object with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain three kinds of informations:\n<ul>\n<li><code>metadata:<\/code> an (optional) object literal with metadata about the class.\nThe information in the object literal will be wrapped by an instance of {@link sap.ui.base.Metadata Metadata}\nand might contain the following information\n<ul>\n<li><code>interfaces:<\/code> {string[]} (optional) set of names of implemented interfaces (defaults to no interfaces)<\/li>\n<li><code>publicMethods:<\/code> {string[]} (optional) list of methods that should be part of the public\nfacade of the class<\/li>\n<li><code>abstract:<\/code> {boolean} (optional) flag that marks the class as abstract (purely informational, defaults to false)<\/li>\n<li><code>final:<\/code> {boolean} (optional) flag that marks the class as final (defaults to false)<\/li>\n<\/ul>\nSubclasses of sap.ui.base.Object can enrich the set of supported metadata (e.g. see {@link sap.ui.core.Element.extend}).\n<\/li>\n\n<li><code>constructor:<\/code> a function that serves as a constructor function for the new class.\nIf no constructor function is given, the framework creates a default implementation that delegates all\nits arguments to the constructor function of the base class.\n<\/li>\n\n<li><i>any-other-name:<\/i> any other property in the <code>oClassInfo<\/code> is copied into the prototype\nobject of the newly created class. Callers can thereby add methods or properties to all instances of the\nclass. But be aware that the given values are shared between all instances of the class. Usually, it doesn't\nmake sense to use primitive values here other than to declare public constants.\n<\/li>\n\n<\/ul>\n\nThe prototype object of the newly created class uses the same prototype as instances of the base class\n(prototype chaining).\n\nA metadata object is always created, even if there is no <code>metadata<\/code> entry in the <code>oClassInfo<\/code>\nobject. A getter for the metadata is always attached to the prototype and to the class (constructor function)\nitself.\n\nLast but not least, with the third argument <code>FNMetaImpl<\/code> the constructor of a metadata class\ncan be specified. Instances of that class will be used to represent metadata for the newly created class\nand for any subclass created from it. Typically, only frameworks will use this parameter to enrich the\nmetadata for a new class hierarchy they introduce (e.g. {@link sap.ui.core.Element.extend Element}).","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.base.Object"},"jQuery.sap.history":{"setDefaultHandler":{"!description":"Set the default handler which will be called when there's an empty hash in the url.","!type":"fn(fn: fn())","!category":"function"},"addHistory":{"!description":"This function adds a history record. It will not trigger the related handler of the routes, the changes have to be done by the\ndeveloper. Normally, a history record should be added when changes are done already.","!type":"fn(sIdf: String, oStateData: Object, bBookmarkable: Boolean, bVirtual?: Boolean) -> String","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.19.1 Please use {@link sap.ui.core.routing.Route} instead.<br>Enables the back and forward buttons in browser to navigate back or forth through the browser history stack.<br/><br/>\n\nIt also supports adding virtual history which used only to mark some intermediate state in order to navigate back to the previous state. \nAnd this state will be skipped from the browser history stack immediately after a new history state is added to the history stack after this state <br/><br/>\n\nBy providing the hash saved from the return value of calling jQuery.sap.history.addHistory, jQuery.sap.history.backToHash will navigate back directly to the\nhistory state with the same hash. <br/><br/>\n\nPlease use jQuery.sap.history.back() to go one step back in the history stack instead of using window.history.back(), because it handles the empty history stack\nsituation and will call the defaultHandler for this case. <br/><br/>\n\n\nExample for the usage of history handling:\n<pre>\n\t//Initialization\n\tjQuery.sap.history({\n\t\troutes: [], //please refer to the jQuery.sap.history function comment for the format. \n\t\tdefaultHandler: function(){\n\t\t\t//code here\n\t\t}\n\t});\n  \n\t//add history\n\tvar hash = jQuery.sap.history.addHistory(\"IDENTIFIER\", jsonData);\n  \n\t//add virtual history\n\tjQuery.sap.history.addVirtualHistory();\n  \n\t//back to hash\n\tjQuery.sap.history.backToHash(hash);\n  \n\t//back one step along the history stack\n\tjQuery.sap.history.back();\n<\/pre>","!category":"class","backToHash":{"!description":"This function calculate the number of back steps to the specific sHash passed as parameter,\nand then go back to the history state with this hash.","!type":"fn(sHash: String)","!category":"function"},"back":{"!description":"This function navigates back through the history stack. The number of steps is set by the parameter iSteps. It also handles the situation when it's called while there's nothing in the history stack.\nNormally this happens when the application is restored from the bookmark. If there's nothing in the history stack, the default handler will be called with NavType jQuery.sap.history.NavType.Back.","!type":"fn(iSteps?: Number)","!category":"function"},"addRoute":{"!description":"Adds a route to the history handling.","!type":"fn(sIdf: String, fn: fn(), oThis?: Object) -> Object","!category":"function"},"backThroughPath":{"!description":"This function will navigate back to the recent history state which has the sPath identifier. It is usually used to navigate back along one\nspecific route and jump over the intermediate history state if there are any.","!type":"fn(sPath: String)","!category":"function"},"addVirtualHistory":{"!description":"This function adds a virtual history record based on the current hash. A virtual record is only for marking the current state of the application, \nand when the back button clicked it will return to the previous state. It is used when the marked state shouldn't be seen by the user when user click\nthe back or forward button of the browser. For example, when showing a context menu a virtual history record should be added and this record will be skipped\nwhen user navigates back and it will return directly to the previous history record. If you avoid adding the virtual history record, it will return to one\nhistory record before the one your virtual record is based on. That's why virtual record is necessary.","!type":"fn()","!category":"function"},"!proto":"Object"},"sap.ui.model.odata.type.Int64_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int64 with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints: Object)","prototype":"sap.ui.model.odata.type.Int64"},"sap.ui.core.routing":{"Target":"sap.ui.core.routing.Target_obj","History":"sap.ui.core.routing.History_obj","Views":"sap.ui.core.routing.Views_obj","!category":"namespace","HistoryDirection":"sap.ui.core.routing.HistoryDirection","Router":"sap.ui.core.routing.Router_obj","Route":"sap.ui.core.routing.Route_obj","Targets":"sap.ui.core.routing.Targets_obj","HashChanger":"sap.ui.core.routing.HashChanger_obj"},"sap":{"ui":"sap.ui","sap":"sap","!description":"Root namespace for JavaScript functionality provided by SAP SE.\n\nThe <code>sap<\/code> namespace is automatically registered with the\nOpenAjax hub if it exists.","!category":"namespace"},"sap.ui.core.History":{"!description":"History handles the history of certain controls (e.g. sap.ui.commons.SearchField).","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.History.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.Fragment_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Fragment with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.Fragment"},"sap.ui.core.util.ExportRow":{"indexOfCell":{"!description":"Checks for the provided <code>sap.ui.core.util.ExportCell<\/code> in the aggregation named <code>cells<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oCell: sap.ui.core.util.ExportCell) -> Number","!category":"function"},"getCells":{"!description":"Gets content of aggregation <code>cells<\/code>.\n\nCells for the Export.","!type":"fn() -> [sap.ui.core.util.ExportCell]","!category":"function"},"!description":"Internally used in {@link sap.ui.core.util.Export Export}.","insertCell":{"!description":"Inserts a cell into the aggregation named <code>cells<\/code>.","!type":"fn(oCell: sap.ui.core.util.ExportCell, iIndex: Number) -> sap.ui.core.util.ExportRow","!category":"function"},"destroyCells":{"!description":"Destroys all the cells in the aggregation\nnamed <code>cells<\/code>.","!type":"fn() -> sap.ui.core.util.ExportRow","!category":"function"},"addCell":{"!description":"Adds some cell into the aggregation named <code>cells<\/code>.","!type":"fn(oCell: sap.ui.core.util.ExportCell) -> sap.ui.core.util.ExportRow","!category":"function"},"!category":"class","removeAllCells":{"!description":"Removes all the controls in the aggregation named <code>cells<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.util.ExportCell]","!category":"function"},"removeCell":{"!description":"Removes a cell from the aggregation named <code>cells<\/code>.","!type":"fn(vCell: Number | String | sap.ui.core.util.ExportCell) -> sap.ui.core.util.ExportCell","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportRow.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.ManagedObject"},"sap.ui.base.Poolable":{"!description":"Contract for objects that can be pooled by ObjectPool","!category":"static class"},"sap.ui.core.routing.Views_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Views with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oOptions: Object)","prototype":"sap.ui.core.routing.Views"},"sap.ui.core.util.serializer.ViewSerializer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.ViewSerializer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oRootControl: sap.ui.core.Control | sap.ui.core.UIArea, oWindow?: Object, sDefaultXmlNamespace?: String)","prototype":"sap.ui.core.util.serializer.ViewSerializer"},"sap.ui.core.delegate.ItemNavigation_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.delegate.ItemNavigation with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oDomRef: Element, aItemDomRefs: [Element], bNotInTabChain?: Boolean)","prototype":"sap.ui.core.delegate.ItemNavigation"},"sap.ui.model.odata.type.ODataType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.ODataType with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.ODataType"},"sap.ui.model.analytics.odata4analytics.Dimension":{"getAllAttributeNames":{"!description":"Get the names of all attributes included in this dimension","!type":"fn() -> array(string)","!category":"function"},"getTextProperty":{"!description":"Get text property related to this dimension","!type":"fn() -> Object","!category":"function"},"hasMasterData":{"!description":"Get indicator whether or not master data is available for this dimension","!type":"fn() -> Boolean","!category":"function"},"getContainingQueryResult":{"!description":"Get query result containing this dimension","!type":"fn() -> sap.ui.model.analytics.odata4analytics.QueryResult","!category":"function"},"getSuperOrdinateDimension":{"!description":"Get super-ordinate dimension","!type":"fn() -> Object","!category":"function"},"getLabelText":{"!description":"Get label","!type":"fn() -> String","!category":"function"},"findAttributeByName":{"!description":"Find attribute by name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Dimension","!category":"function"},"getMasterDataEntitySet":{"!description":"Get master data entity set for this dimension","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntitySet","!category":"function"},"!description":"Representation of a property annotated with\n       sap:aggregation-role=\"dimension\".","getHierarchy":{"!description":"Get associated hierarchy","!type":"fn() -> Object","!category":"function"},"getAllAttributes":{"!description":"Get all attributes of this dimension","!type":"fn() -> Object","!category":"function"},"getName":{"!description":"Get the name of the dimension","!type":"fn() -> String","!category":"function"},"!category":"class","getKeyProperty":{"!description":"Get the key property","!type":"fn() -> Object","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.Device.resize":{"height":{"!description":"The current height of the document's window in pixels.","!type":"integer","!category":"enum"},"!description":"Common API for document window size change notifications across all platforms.","detachHandler":{"!description":"Removes a previously attached event handler from the resize events.\n\nThe passed parameters must match those used for registration with {@link #attachHandler} beforehand.","!type":"fn(fnFunction: fn(), oListener?: Object, sName: String, fnFunction: fn(), oListener?: Object, fnFunction: fn(), oListener?: Object)","!category":"function"},"width":{"!description":"The current width of the document's window in pixels.","!type":"integer","!category":"enum"},"!category":"namespace","attachHandler":{"!description":"Registers the given event handler to resize change events of the document's window.\n\nThe event is fired whenever the document's window size changes.\n\nThe event handler is called with a single argument: a map <code>mParams<\/code> which provides the following information:\n<ul>\n<li><code>mParams.height<\/code>: The height of the document's window in pixels.<\/li>\n<li><code>mParams.width<\/code>: The width of the document's window in pixels.<\/li>\n<\/ul>","!type":"fn(fnFunction: fn(), oListener?: Object, sName: String, fnFunction: fn(), oListener?: Object, fnFunction: fn(), oListener?: Object)","!category":"function"}},"sap.ui.model.xml":{"!description":"XML-based DataBinding","XMLModel":"sap.ui.model.xml.XMLModel_obj","!category":"namespace"},"sap.ui.model.odata.type.Time_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Time with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Time"},"sap.ui.core.message.MessageParser":{"getProcessor":{"!description":"Returns the registered processor on which the events for message handling can be fired","!type":"fn() -> sap.ui.message.MessageProcessor","!category":"function"},"!description":"This is an abstract base class for MessageParser objects.","!category":"class","parse":{"!description":"Abstract parse method must be implemented in the inheriting class.","!type":"fn()","!category":"function"},"setProcessor":{"!description":"This method is used by the model to register itself as MessageProcessor for this parser","!type":"fn(oProcessor: sap.ui.message.MessageProcessor) -> sap.ui.message.MessagePaser","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.MessageParser.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.test.Opa5":{"waitFor":{"!description":"Same as the waitFor method of Opa. Also allows you to specify additional parameters:","!type":"fn(oOptions: Object) -> jQuery.promise","!category":"function"},"iTeardownMyAppFrame":{"!description":"Removes the IFrame from the dom and removes all the references on its objects","!type":"fn() -> jQuery.promise","!category":"function"},"resetConfig":{"!description":"Reset Opa.config to its default values\nsee {@link sap.ui.test.Opa5#waitFor} for the description\nDefault values for OPA5 are:\n<ul>\n\t<li>viewNamespace: empty string<\/li>\n\t<li>arrangements: instance of OPA5<\/li>\n\t<li>actions: instance of OPA5<\/li>\n\t<li>assertions: instance of OPA5<\/li>\n\t<li>visible: true<\/li>\n<\/ul>","!type":"fn()","!category":"function"},"getWindow":{"!description":"Returns the window object of the iframe or the current window. If the iframe is not loaded it will return null.","!type":"fn() -> oWindow","!category":"function"},"getContext":{"!description":"Gives access to a singleton object you can save values in.\nsee {@link sap.ui.test.Opa#.getContext} for the description","!type":"fn() -> Object","!category":"function"},"createPageObjects":{"!description":"Create a page object configured as arrangement, action and assertion to the Opa.config.\nUse it to structure your arrangement, action and assertion based on parts of the screen to avoid name clashes and help structuring your tests.","!type":"fn(mPageObjects: map) -> map","!category":"function"},"getHashChanger":{"!description":"Returns Hashchanger object of the iframe. If the iframe is not loaded it will return null.","!type":"fn() -> sap.ui.core.routing.HashChanger","!category":"function"},"getJQuery":{"!description":"Returns the jQuery object of the iframe. If the iframe is not loaded it will return null.","!type":"fn() -> jQuery","!category":"function"},"getUtils":{"!description":"Returns qunit utils object of the iframe. If the iframe is not loaded it will return null.","!type":"fn() -> sap.ui.test.qunit","!category":"function"},"emptyQueue":{"!description":"Waits until all waitFor calls are done\nsee {@link sap.ui.test.Opa#.emptyQueue} for the description","!type":"fn() -> jQuery.promise","!category":"function"},"!description":"UI5 extension of the OPA framework","iStartMyAppInAFrame":{"!description":"Starts an app in an IFrame. Only works reliably if running on the same server.","!type":"fn(sSource: String, iTimeout?: integer, sSource: String, iTimeout?: Number) -> jQuery.promise","!category":"function"},"!category":"class","getPlugin":{"!description":"Returns the opa plugin used for retrieving controls. If an iframe is used it will return the iFrame's plugin.","!type":"fn() -> sap.ui.test.OpaPlugin","!category":"function"},"extendConfig":{"!description":"Extends the default config of Opa\nsee {@link sap.ui.test.Opa#extendConfig}","!type":"fn()","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.routing.History_obj":{"!type":"fn(oHashChanger: sap.ui.core.routing.HashChanger)","prototype":"sap.ui.core.routing.History"},"sap.ui.core.format.NumberFormat_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.format.NumberFormat with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object)","prototype":"sap.ui.core.format.NumberFormat"},"sap.ui.model.type.String_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.String with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.String"},"sap.ui.core.delegate.ScrollEnablement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.delegate.ScrollEnablement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oControl: sap.ui.core.Control, sScrollContentDom: String, oConfig: Object)","prototype":"sap.ui.core.delegate.ScrollEnablement"},"sap.ui.model.odata.ODataMetaModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMetaModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.MetaModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oMetadata: sap.ui.model.odata.ODataMetadata, oAnnotations?: sap.ui.model.odata.ODataAnnotations, oODataModelInterface?: Object)","prototype":"sap.ui.model.odata.ODataMetaModel"},"sap.ui.test.matchers.AggregationFilled_obj":{"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.AggregationFilled"},"sap.ui.core.LabelEnablement":{"getReferencingLabels":{"!description":"Returns an array of ids of the labels referencing the given element","!type":"fn(oElement: sap.ui.core.Element) -> [String]","!category":"function"},"!description":"Helper functionality for enhancement of a Label with common label functionality.","isRequired":{"!description":"Returns <code>true<\/code> when the given control is required (property 'required') or one of its referencing labels, <code>false<\/code> otherwise.","!type":"fn(oElement: sap.ui.core.Element) -> Boolean","!category":"function"},"!category":"namespace","enrich":{"!description":"This function should be called on a label control to enrich it's functionality.\n\n<b>Usage:<\/b>\nThe function can be called with a control prototype:\n<code>\nsap.ui.core.LabelEnablement.enrich(my.Label.prototype);\n<\/code>\nOr the function can be called on instance level in the init function of a label control:\n<code>\nmy.Label.prototype.init: function(){\n   sap.ui.core.LabelEnablement.enrich(this);\n}\n<\/code>\n\n<b>Preconditions:<\/b>\nThe given control must implement the interface sap.ui.core.Label and have an association 'labelFor' with cardinality 0..1.\nThis function extends existing API functions. Ensure not to override this extensions AFTER calling this function.\n\n<b>What does this function do?<\/b>\n\nA mechanismn is added that ensures that a bidirectional reference between the label and it's labeled control is established:\nThe label references the labeled control via the html 'for' attribute (@see sap.ui.core.LabelEnablement#writeLabelForAttribute).\nIf the labeled control supports the aria-labelledby attribute. A reference to the label is added automatically.\n\nIn addition an alternative to apply a for reference without influencing the labelFor association of the API is applied (e.g. used by Form).\nFor this purpose the functions setAlternativeLabelFor and getLabelForRendering are added.","!type":"fn(oControl: sap.ui.core.Control)","!category":"function"},"writeLabelForAttribute":{"!description":"Helper function for the label control to render the html 'for' attribute. This function should be called\nat the desired location in the renderer code of the label control.","!type":"fn(oRenderManager: sap.ui.core.RenderManager, oLabel: sap.ui.core.Label)","!category":"function"}},"sap.ui.test.matchers.AggregationContainsPropertyEqual":{"setPropertyName":{"!description":"Setter for property <code>propertyName<\/code>.","!type":"fn(sName: String) -> sap.ui.test.matchers.AggregationContainsPropertyEqual","!category":"function"},"setPropertyValue":{"!description":"Setter for property <code>propertyValue<\/code>.","!type":"fn(sPropertyValue: String) -> sap.ui.test.matchers.AggregationContainsPropertyEqual","!category":"function"},"getAggregationName":{"!description":"Getter for property <code>aggregationName<\/code>.\n\nThe Name of the aggregation that is used for matching","!type":"fn() -> String","!category":"function"},"!description":"AggregationContainsPropertyEqual - checks if an aggregation contains at least one item that has a Property set to a certain value","getPropertyName":{"!description":"Getter for property <code>propertyName<\/code>.\n\nThe Name of the property that is used for matching","!type":"fn() -> String","!category":"function"},"!category":"class","setAggregationName":{"!description":"Setter for property <code>aggregationName<\/code>.","!type":"fn(sName: String) -> sap.ui.test.matchers.AggregationContainsPropertyEqual","!category":"function"},"getPropertyValue":{"!description":"Getter for property <code>propertyValue<\/code>.\n\nThe value of the Property that is used for matching","!type":"fn() -> String","!category":"function"},"isMatching":{"!description":"Checks if the control has a filled aggregation with at least one control that have a property equaling propertyName/Value","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function"},"!proto":"sap.ui.test.matchers.Matcher"},"jQuery.sap.util.ResourceBundle":{"!description":"Contains locale-specific texts.\n\nIf you need a locale-specific text within your application, you can use the\nresource bundle to load the locale-specific file from the server and access\nthe texts of it.\n\nUse {@link jQuery.sap.resources} to create an instance of jQuery.sap.util.ResourceBundle.\nThere you have to specify the URL to the base .properties file of a bundle\n(.properties without any locale information, e.g. \"mybundle.properties\"), and optionally\na locale. The locale is defined as a string of the language and an optional country code\nseparated by underscore (e.g. \"en_GB\" or \"fr\"). If no locale is passed, the default\nlocale is \"en\" if the SAPUI5 framework is not available. Otherwise the default locale is taken from\nthe SAPUI5 configuration.\n\nWith the getText() method of the resource bundle, a locale-specific string value\nfor a given key will be returned.\n\nWith the given locale, the ResourceBundle requests the locale-specific properties file\n(e.g. \"mybundle_fr_FR.properties\"). If no file is found for the requested locale or if the file\ndoes not contain a text for the given key, a sequence of fall back locales is tried one by one.\nFirst, if the locale contains a region information (fr_FR), then the locale without the region is\ntried (fr). If that also can't be found or doesn't contain the requested text, the english file\nis used (en - assuming that most development projects contain at least english texts).\nIf that also fails, the file without locale (base URL of the bundle) is tried.\n\nIf none of the requested files can be found or none of them contains a text for the given key,\nthen the key itself is returned as text.\n\nException: Fallback for \"zh_HK\" is \"zh_TW\" before zh.","!category":"static class"},"sap.ui.model.TreeBindingCompatibilityAdapter_obj":{"!type":"fn()","prototype":"sap.ui.model.TreeBindingCompatibilityAdapter"},"sap.ui.core.routing.Targets_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Targets with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oOptions: Object)","prototype":"sap.ui.core.routing.Targets"},"sap.ui.core.BusyIndicator":{"!description":"Provides methods to show or hide a waiting animation covering the whole page and blocking user interaction.","hide":{"!description":"Removes the BusyIndicator from the screen","!type":"fn()","!category":"function"},"detachClose":{"!description":"Unregisters a handler for the \"close\" event","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.BusyIndicator","!category":"function"},"detachOpen":{"!description":"Unregisters a handler for the \"open\" event","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.BusyIndicator","!category":"function"},"!category":"namespace","show":{"!description":"Displays the BusyIndicator and starts blocking all user input.\nThis only happens after some delay and if after that delay the BusyIndicator.hide() has not yet been called in the meantime.\nThere is a certain default value for the delay, but that one can be overridden.","!type":"fn(iDelay?: Number)","!category":"function"},"attachOpen":{"!description":"Registers a handler for the \"open\" event.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.core.BusyIndicator","!category":"function"},"attachClose":{"!description":"Registers a handler for the \"close\" event","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.core.BusyIndicator","!category":"function"}},"sap.ui.core.routing.Views":{"fireCreated":{"!description":"Fire event created to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Views","!category":"function"},"!category":"class","attachCreated":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'created' event of this <code>sap.ui.core.routing.Views<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Views","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Views.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"detachCreated":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'created' event of this <code>sap.ui.core.routing.Views<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Views","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.test.matchers.AggregationContainsPropertyEqual_obj":{"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.AggregationContainsPropertyEqual"},"jQuery.sap.KeyCodes":{"NUMPAD_6":{"!description":"NUMPAD_6 : Number","!type":"Number","!category":"enum"},"ARROW_RIGHT":{"!description":"ARROW_RIGHT : Number","!type":"Number","!category":"enum"},"NUMPAD_7":{"!description":"NUMPAD_7 : Number","!type":"Number","!category":"enum"},"NUMPAD_8":{"!description":"NUMPAD_8 : Number","!type":"Number","!category":"enum"},"NUMPAD_9":{"!description":"NUMPAD_9 : Number","!type":"Number","!category":"enum"},"NUMPAD_2":{"!description":"NUMPAD_2 : Number","!type":"Number","!category":"enum"},"NUMPAD_3":{"!description":"NUMPAD_3 : Number","!type":"Number","!category":"enum"},"NUMPAD_4":{"!description":"NUMPAD_4 : Number","!type":"Number","!category":"enum"},"NUMPAD_5":{"!description":"NUMPAD_5 : Number","!type":"Number","!category":"enum"},"EQUALS":{"!description":"EQUALS : Number","!type":"Number","!category":"enum"},"BREAK":{"!description":"BREAK : Number","!type":"Number","!category":"enum"},"PAGE_UP":{"!description":"PAGE_UP : Number","!type":"Number","!category":"enum"},"F11":{"!description":"F11 : Number","!type":"Number","!category":"enum"},"F12":{"!description":"F12 : Number","!type":"Number","!category":"enum"},"OPEN_BRACKET":{"!description":"OPEN_BRACKET : Number","!type":"Number","!category":"enum"},"F10":{"!description":"F10 : Number","!type":"Number","!category":"enum"},"BACKSPACE":{"!description":"BACKSPACE : Number","!type":"Number","!category":"enum"},"ESCAPE":{"!description":"ESCAPE : Number","!type":"Number","!category":"enum"},"INSERT":{"!description":"INSERT : Number","!type":"Number","!category":"enum"},"F8":{"!description":"F8 : Number","!type":"Number","!category":"enum"},"DIGIT_0":{"!description":"DIGIT_0 : Number","!type":"Number","!category":"enum"},"NUMPAD_ASTERISK":{"!description":"NUMPAD_ASTERISK : Number","!type":"Number","!category":"enum"},"F9":{"!description":"F9 : Number","!type":"Number","!category":"enum"},"DIGIT_1":{"!description":"DIGIT_1 : Number","!type":"Number","!category":"enum"},"F6":{"!description":"F6 : Number","!type":"Number","!category":"enum"},"F7":{"!description":"F7 : Number","!type":"Number","!category":"enum"},"NUMPAD_MINUS":{"!description":"NUMPAD_MINUS : Number","!type":"Number","!category":"enum"},"F1":{"!description":"F1 : Number","!type":"Number","!category":"enum"},"F5":{"!description":"F5 : Number","!type":"Number","!category":"enum"},"F4":{"!description":"F4 : Number","!type":"Number","!category":"enum"},"F3":{"!description":"F3 : Number","!type":"Number","!category":"enum"},"F2":{"!description":"F2 : Number","!type":"Number","!category":"enum"},"D":{"!description":"D : Number","!type":"Number","!category":"enum"},"E":{"!description":"E : Number","!type":"Number","!category":"enum"},"F":{"!description":"F : Number","!type":"Number","!category":"enum"},"G":{"!description":"G : Number","!type":"Number","!category":"enum"},"A":{"!description":"A : Number","!type":"Number","!category":"enum"},"NUMPAD_PLUS":{"!description":"NUMPAD_PLUS : Number","!type":"Number","!category":"enum"},"B":{"!description":"B : Number","!type":"Number","!category":"enum"},"CONTROL":{"!description":"CONTROL : Number","!type":"Number","!category":"enum"},"C":{"!description":"C : Number","!type":"Number","!category":"enum"},"L":{"!description":"L : Number","!type":"Number","!category":"enum"},"M":{"!description":"M : Number","!type":"Number","!category":"enum"},"N":{"!description":"N : Number","!type":"Number","!category":"enum"},"O":{"!description":"O : Number","!type":"Number","!category":"enum"},"H":{"!description":"H : Number","!type":"Number","!category":"enum"},"I":{"!description":"I : Number","!type":"Number","!category":"enum"},"J":{"!description":"J : Number","!type":"Number","!category":"enum"},"K":{"!description":"K : Number","!type":"Number","!category":"enum"},"U":{"!description":"U : Number","!type":"Number","!category":"enum"},"T":{"!description":"T : Number","!type":"Number","!category":"enum"},"W":{"!description":"W : Number","!type":"Number","!category":"enum"},"V":{"!description":"V : Number","!type":"Number","!category":"enum"},"Q":{"!description":"Q : Number","!type":"Number","!category":"enum"},"SEMICOLON":{"!description":"SEMICOLON : Number","!type":"Number","!category":"enum"},"DELETE":{"!description":"DELETE : Number","!type":"Number","!category":"enum"},"P":{"!description":"P : Number","!type":"Number","!category":"enum"},"S":{"!description":"S : Number","!type":"Number","!category":"enum"},"R":{"!description":"R : Number","!type":"Number","!category":"enum"},"!category":"namespace","Y":{"!description":"Y : Number","!type":"Number","!category":"enum"},"X":{"!description":"X : Number","!type":"Number","!category":"enum"},"Z":{"!description":"Z : Number","!type":"Number","!category":"enum"},"NUMPAD_COMMA":{"!description":"NUMPAD_COMMA : Number","!type":"Number","!category":"enum"},"ARROW_LEFT":{"!description":"ARROW_LEFT : Number","!type":"Number","!category":"enum"},"!description":"Enumeration of key codes.","END":{"!description":"END : Number","!type":"Number","!category":"enum"},"NUMPAD_1":{"!description":"NUMPAD_1 : Number","!type":"Number","!category":"enum"},"NUMPAD_0":{"!description":"NUMPAD_0 : Number","!type":"Number","!category":"enum"},"BACKSLASH":{"!description":"BACKSLASH : Number","!type":"Number","!category":"enum"},"SCROLL_LOCK":{"!description":"SCROLL_LOCK : Number","!type":"Number","!category":"enum"},"CAPS_LOCK":{"!description":"CAPS_LOCK : Number","!type":"Number","!category":"enum"},"ARROW_DOWN":{"!description":"ARROW_DOWN : Number","!type":"Number","!category":"enum"},"SLEEP":{"!description":"SLEEP : Number","!type":"Number","!category":"enum"},"SHIFT":{"!description":"SHIFT : Number","!type":"Number","!category":"enum"},"SPACE":{"!description":"SPACE : Number","!type":"Number","!category":"enum"},"NUMPAD_SLASH":{"!description":"NUMPAD_SLASH : Number","!type":"Number","!category":"enum"},"NUM_LOCK":{"!description":"NUM_LOCK : Number","!type":"Number","!category":"enum"},"TURN_OFF":{"!description":"TURN_OFF : Number","!type":"Number","!category":"enum"},"SINGLE_QUOTE":{"!description":"SINGLE_QUOTE : Number","!type":"Number","!category":"enum"},"SLASH":{"!description":"SLASH : Number","!type":"Number","!category":"enum"},"ALT":{"!description":"ALT : Number","!type":"Number","!category":"enum"},"COMMA":{"!description":"COMMA : Number","!type":"Number","!category":"enum"},"PIPE":{"!description":"PIPE : Number","!type":"Number","!category":"enum"},"PLUS":{"!description":"PLUS : Number","!type":"Number","!category":"enum"},"CONTEXT_MENU":{"!description":"CONTEXT_MENU : Number","!type":"Number","!category":"enum"},"DOT":{"!description":"DOT : Number","!type":"Number","!category":"enum"},"ARROW_UP":{"!description":"ARROW_UP : Number","!type":"Number","!category":"enum"},"TAB":{"!description":"TAB : Number","!type":"Number","!category":"enum"},"MINUS":{"!description":"MINUS : Number","!type":"Number","!category":"enum"},"DIGIT_2":{"!description":"DIGIT_2 : Number","!type":"Number","!category":"enum"},"DIGIT_3":{"!description":"DIGIT_3 : Number","!type":"Number","!category":"enum"},"PAGE_DOWN":{"!description":"PAGE_DOWN : Number","!type":"Number","!category":"enum"},"DIGIT_4":{"!description":"DIGIT_4 : Number","!type":"Number","!category":"enum"},"DIGIT_5":{"!description":"DIGIT_5 : Number","!type":"Number","!category":"enum"},"PRINT":{"!description":"PRINT : Number","!type":"Number","!category":"enum"},"DIGIT_6":{"!description":"DIGIT_6 : Number","!type":"Number","!category":"enum"},"DIGIT_7":{"!description":"DIGIT_7 : Number","!type":"Number","!category":"enum"},"DIGIT_8":{"!description":"DIGIT_8 : Number","!type":"Number","!category":"enum"},"DIGIT_9":{"!description":"DIGIT_9 : Number","!type":"Number","!category":"enum"},"GREAT_ACCENT":{"!description":"GREAT_ACCENT : Number","!type":"Number","!category":"enum"},"ENTER":{"!description":"ENTER : Number","!type":"Number","!category":"enum"},"WINDOWS":{"!description":"WINDOWS : Number","!type":"Number","!category":"enum"},"HOME":{"!description":"HOME : Number","!type":"Number","!category":"enum"}},"sap.ui.core.OpenState":{"OPEN":{"!description":"Open and currently not changing states.","!type":"String","!category":"enum"},"CLOSED":{"!description":"Closed and currently not changing states.","!type":"String","!category":"enum"},"!description":"Defines the different possible states of an element that can be open or closed and does not only \ntoggle between these states, but also spends some time in between (e.g. because of an animation).","!category":"static class","OPENING":{"!description":"Already left the CLOSED state, is not OPEN yet, but in the process of getting OPEN.","!type":"String","!category":"enum"},"CLOSING":{"!description":"Still open, but in the process of going to the CLOSED state.","!type":"String","!category":"enum"}},"sap.ui.model.odata.v2.ODataTreeBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataTreeBinding with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, aFilters?: [sap.ui.model.Filter], mParameters?: Object, aSorters?: [sap.ui.model.Sorter])","prototype":"sap.ui.model.odata.v2.ODataTreeBinding"},"sap.ui.core.routing.Router":{"stop":{"!description":"Stops to listen to the hashChange of the browser.<\/br>\nIf you want the router to start again, call initialize again.","!type":"fn() -> sap.ui.core.routing.Router","!category":"function"},"setView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined @since 1.28 use {@link #getViews} instead.<br>Adds or overwrites a view in the viewcache of the router, the viewname serves as a key","!type":"fn(sViewName: String, oView: sap.ui.core.mvc.View) -> sap.ui.core.routing.Router","!category":"function"},"attachBypassed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'bypassed' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\nThe event will get fired, if none of the routes of the routes is matching. <br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function"},"addRoute":{"!description":"Adds a route to the router","!type":"fn(oConfig: Object, oParent: sap.ui.core.routing.Route)","!category":"function"},"destroy":{"!description":"Removes the router from the hash changer @see sap.ui.core.routing.HashChanger","!type":"fn() -> sap.ui.core.routing.Router","!category":"function"},"detachBypassed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'bypassed' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\nThe event will get fired, if none of the routes of the routes is matching. <br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function"},"fireBypassed":{"!description":"Fire event bypassed to attached listeners.\nThe event will get fired, if none of the routes of the routes is matching. <br/>","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function"},"!category":"class","detachRoutePatternMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'routePatternMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\nThis event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function"},"fireRoutePatternMatched":{"!description":"Fire event routePatternMatched to attached listeners.\nThis event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function"},"navTo":{"!description":"Navigates to a specific route defining a set of parameters. The Parameters will be URI encoded - the characters ; , / ? : @ & = + $ are reserved and will not be encoded.\nIf you want to use special characters in your oParameters, you have to encode them (encodeURIComponent).","!type":"fn(sName: String, oParameters: Object, bReplace: Boolean) -> sap.ui.core.routing.Router","!category":"function"},"parse":{"!description":"Will trigger routing events + place targets for routes matching the string","!type":"fn(sNewHash: String)","!category":"function"},"detachRouteMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'routeMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function"},"initialize":{"!description":"Attaches the router to the hash changer @see sap.ui.core.routing.HashChanger","!type":"fn() -> sap.ui.core.routing.Router","!category":"function"},"fireRouteMatched":{"!description":"Fire event routeMatched to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function"},"getViews":{"!description":"Returns the views instance created by the router","!type":"fn() -> sap.ui.core.routing.Views","!category":"function"},"getView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined @since 1.28.1 use {@link #getViews} instead.<br>Returns a cached view for a given name or creates it if it does not yet exists","!type":"fn(sViewName: String, sViewType: String, sViewId: String) -> sap.ui.core.mvc.View","!category":"function"},"register":{"!description":"Registers the router to access it from another context. Use sap.ui.routing.Router.getRouter() to receive the instance","!type":"fn(sName: String)","!category":"function"},"attachRouteMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'routeMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function"},"fireViewCreated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined @since 1.28 use {@link #getViews} instead.<br>Fire event viewCreated to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function"},"getTargets":{"!description":"Returns the instance of Targets, if you pass a targets config to the router","!type":"fn() -> sap.ui.core.routing.Targets | undefined","!category":"function"},"attachRoutePatternMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'routePatternMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\nThis event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function"},"getRouter":{"!description":"Get a registered router","!type":"fn(sName: String) -> sap.ui.core.routing.Router","!category":"function"},"getURL":{"!description":"Returns the URL for the route and replaces the placeholders with the values in oParameters","!type":"fn(sName: String, oParameters: Object) -> String","!category":"function"},"detachViewCreated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined @since 1.28 use {@link #getViews} instead.<br>Detach event-handler <code>fnFunction<\/code> from the 'viewCreated' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function"},"attachViewCreated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined @since 1.28 use {@link #getViews} instead.<br>Attach event-handler <code>fnFunction<\/code> to the 'viewCreated' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function"},"!proto":"sap.ui.base.EventProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Router.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getRoute":{"!description":"Returns the Route with a name, if no route is found undefined is returned","!type":"fn(sName: String) -> sap.ui.core.routing.Route","!category":"function"}},"sap.ui.core.Configuration":{"getNumberSymbol":{"!description":"Returns the currently set number symbol of the given type or undefined if no symbol has been defined.","!type":"fn()","!category":"function"},"getLegacyTimeFormat":{"!description":"Returns the currently set legacy ABAP time format (its id) or undefined if none has been set.","!type":"fn()","!category":"function"},"setLegacyNumberFormat":{"!description":"Allows to specify one of the legacy ABAP number format.\n\nThis method will modify the 'group' and 'decimal' symbols. When called with a null\nor undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy number format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"setLegacyDateFormat":{"!description":"Allows to specify one of the legacy ABAP date formats.\n\nThis method modifies the date patterns for 'short' and 'medium' style with the corresponding ABAP\nformat. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy date format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.\n\nNote: those date formats that are not based on the Gregorian calendar (Japanese date formats '7', '8' and '9',\nIslamic date formats 'A' and 'B' and Iranian date format 'C') are not yet supported by UI5. They are accepted\nby this method for convenience (user settings from ABAP system can be used without filtering), but they are\nignored. Instead, the formats from the current format locale will be used and a warning will be logged.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"getFormatLocale":{"!description":"Returns the locale to be used for formatting.\n\nIf no such locale has been defined, this method falls back to the language,\nsee {@link sap.ui.core.Configuration#getLanguage Configuration.getLanguage()}.\n\nIf any user preferences for date, time or number formatting have been set,\nand if no format locale has been specified, then a special private use subtag\nis added to the locale, indicating to the framework that these user preferences\nshould be applied.","!type":"fn() -> sap.ui.core.Locale","!category":"function"},"getLegacyDateFormat":{"!description":"Returns the currently set legacy ABAP date format (its id) or undefined if none has been set.","!type":"fn()","!category":"function"},"getLegacyNumberFormat":{"!description":"Returns the currently set legacy ABAP number format (its id) or undefined if none has been set.","!type":"fn()","!category":"function"},"setLegacyTimeFormat":{"!description":"Allows to specify one of the legacy ABAP time formats.\n\nThis method sets the time patterns for 'short' and 'medium' style to the corresponding ABAP\nformats and sets the day period texts to \"AM\"/\"PM\" or \"am\"/\"pm\" respectively. When called\nwith a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy time format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"!description":"Collects and stores the configuration of the current environment.\n\nThe Configuration is initialized once when the {@link sap.ui.core.Core} is created.\nThere are different ways to set the environment configuration (in ascending priority):\n<ol>\n<li>System defined defaults\n<li>Server wide defaults, read from /sap-ui-config.json\n<li>Properties of the global configuration object window[\"sap-ui-config\"]\n<li>A configuration string in the data-sap-ui-config attribute of the bootstrap tag\n<li>Individual data-sap-ui-xyz attributes of the bootstrap tag\n<li>Using URL parameters\n<li>Setters in this Configuration object (only for some parameters)\n<\/ol>\n\nThat is, attributes of the DOM reference override the system defaults, URL parameters\noverride the DOM attributes (where empty URL parameters set the parameter back to its\nsystem default). Calling setters at runtime will override any previous settings\ncalculated during object creation.\n\nThe naming convention for parameters is:\n<ul>\n<li>in the URL : sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"\n<li>in the DOM : data-sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"\n<\/ul>\nwhere <i>PARAMETER-NAME<\/i> is the name of the parameter in lower case.\n\nValues of boolean parameters are case insensitive where \"true\" and \"x\" are interpreted as true.","setLegacyDateCalendarCustomizing":{"!description":"Allows to specify the customizing data for Islamic calendar support","!type":"fn(aMappings: [Object]) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"getDatePattern":{"!description":"Returns the currently set date pattern or undefined if no pattern has been defined.","!type":"fn()","!category":"function"},"setNumberSymbol":{"!description":"Defines the string to be used for the given number symbol.\nCalling this method with a null or undefined symbol removes a previously set symbol string.\nNote that an empty string is explicitly allowed.\n\nIf a symbol is defined, it will be preferred over symbols derived from the current locale.\n\nSee class {@link sap.ui.core.format.NumberFormat} for details about the symbols.\n\nAfter changing the number symbol, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sStyle: String, sSymbol: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"!category":"class","setTimePattern":{"!description":"Defines the preferred format pattern for the given time format style.\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the time pattern, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sStyle: String, sPattern: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"getLegacyDateCalendarCustomizing":{"!description":"Returns the currently set customizing data for Islamic calendar support","!type":"fn() -> [Object]","!category":"function"},"getTimePattern":{"!description":"Returns the currently set time pattern or undefined if no pattern has been defined.","!type":"fn()","!category":"function"},"setDatePattern":{"!description":"Defines the preferred format pattern for the given date format style.\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the date pattern, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(sStyle: String, sPattern: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"setFirstDayOfWeek":{"!description":"Defines the day used as the first day of the week.\nThe day is set as an integer value between 0 (Sunday) and 6 (Saturday).\nCalling this method with a null or undefined symbol removes a previously set value.\n\nIf a value is defined, it will be preferred over values derived from the current locale.\n\nUsually in the US the week starts on Sunday while in most European countries on Monday.\nThere are special cases where you want to have the first day of week set independent of the\nuser locale.\n\nAfter changing the first day of week, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.","!type":"fn(iValue: Number) -> sap.ui.core.Configuration.FormatSettings","!category":"function"},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Configuration.FormatSettings.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.analytics.odata4analytics":{"QueryResult":"sap.ui.model.analytics.odata4analytics.QueryResult_obj","DimensionMemberSetRequest":"sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest_obj","QueryResultRequest":"sap.ui.model.analytics.odata4analytics.QueryResultRequest_obj","Model":"sap.ui.model.analytics.odata4analytics.Model_obj","ParameterizationRequest":"sap.ui.model.analytics.odata4analytics.ParameterizationRequest_obj","SortOrder":"sap.ui.model.analytics.odata4analytics.SortOrder","EntitySet":"sap.ui.model.analytics.odata4analytics.EntitySet_obj","RecursiveHierarchy":"sap.ui.model.analytics.odata4analytics.RecursiveHierarchy_obj","Parameterization":"sap.ui.model.analytics.odata4analytics.Parameterization_obj","Dimension":"sap.ui.model.analytics.odata4analytics.Dimension_obj","DimensionAttribute":"sap.ui.model.analytics.odata4analytics.DimensionAttribute_obj","Measure":"sap.ui.model.analytics.odata4analytics.Measure_obj","SortExpression":"sap.ui.model.analytics.odata4analytics.SortExpression_obj","!description":"<strong style=\"color: red;\">Experimental! <\/strong>","ReferenceWithWorkaround":"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround_obj","ReferenceByModel":"sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel_obj","ParameterValueSetRequest":"sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest_obj","!category":"namespace","EntityType":"sap.ui.model.analytics.odata4analytics.EntityType_obj","FilterExpression":"sap.ui.model.analytics.odata4analytics.FilterExpression_obj","ReferenceByURI":"sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI_obj","Parameter":"sap.ui.model.analytics.odata4analytics.Parameter_obj","includeDimensionTextAttributes":{"!description":"Specify which components of the dimension shall be included in the value\nset.","!type":"fn(bIncludeText: undefined, bIncludeAttributes: undefined)","!category":"function"}},"jQuery.Event_obj":{"!type":"fn()","prototype":"jQuery.Event"},"sap.ui.model.analytics.odata4analytics.RecursiveHierarchy":{"getNodeLevelProperty":{"!description":"Get the property holding the level of the hierarchy node","!type":"fn() -> Object","!category":"function"},"!description":"Representation of a recursive hierarchy.","getParentNodeIDProperty":{"!description":"Get the property holding the parent node ID of the hierarchy node","!type":"fn() -> Object","!category":"function"},"isRecursiveHierarchy":{"!description":"Get indicator if this is a recursive hierarchy","!type":"fn() -> Boolean","!category":"function"},"!category":"class","getNodeIDProperty":{"!description":"Get the property holding the node ID of the hierarchy node","!type":"fn() -> Object","!category":"function"},"isLeveledHierarchy":{"!description":"Get indicator if this is a leveled hierarchy","!type":"fn() -> Boolean","!category":"function"},"getNodeValueProperty":{"!description":"Get the property holding the value that is structurally organized by the\nhierarchy","!type":"fn() -> Object","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.CSSColor":{"!description":"A string type that represents CSS color values.\n\nAllowed values are CSS hex colors like \"#666666\" or \"#fff\", RGB/HSL values like \"rgb(0,0,0)\"\nor \"hsla(50%,10%,30%,0.5)\" as well as CSS color names like \"green\" and \"darkblue\" and special\nvalues like \"inherit\" and \"transparent\".\n\nThe empty string is also allowed and has the same effect as setting no color.","!category":"namespace"},"sap.ui.core.Wrapping":{"Off":{"!description":"Wrapping shall not be allowed.","!type":"String","!category":"enum"},"!description":"Configuration options for text wrapping.","Hard":{"!description":"Inserts actual line breaks in the text at the wrap point.","!type":"String","!category":"enum"},"!category":"static class","Soft":{"!description":"The text is actually on the same line but displayed within several lines.","!type":"String","!category":"enum"},"None":{"!description":"The standard browser behavior is considered for wrapping.","!type":"String","!category":"enum"}},"sap.ui.core.Percentage":{"!description":"A string type that represents a percentage value.","!category":"namespace"},"sap.ui.core.TooltipBase":{"getOpenDuration":{"!description":"Gets current value of property <code>openDuration<\/code>.\n\nOptional. Open Duration in milliseconds.\n\nDefault value is <code>200<\/code>.","!type":"fn() -> Number","!category":"function"},"setMyPosition":{"!description":"Sets a new value for property <code>myPosition<\/code>.\n\nOptional. My position defines which position on the extended tooltip being positioned to align with the target control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>begin top<\/code>.","!type":"fn(sMyPosition: sap.ui.core.Dock) -> sap.ui.core.TooltipBase","!category":"function"},"setCloseDelay":{"!description":"Sets a new value for property <code>closeDelay<\/code>.\n\nClosing delay of the tooltip in milliseconds\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!type":"fn(iCloseDelay: Number) -> sap.ui.core.TooltipBase","!category":"function"},"getMyPosition":{"!description":"Gets current value of property <code>myPosition<\/code>.\n\nOptional. My position defines which position on the extended tooltip being positioned to align with the target control.\n\nDefault value is <code>begin top<\/code>.","!type":"fn() -> sap.ui.core.Dock","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.core.TooltipBase","!category":"function"},"setAtPosition":{"!description":"Sets a new value for property <code>atPosition<\/code>.\n\nOptional. At position defines which position on the target control to align the positioned tooltip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>begin bottom<\/code>.","!type":"fn(sAtPosition: sap.ui.core.Dock) -> sap.ui.core.TooltipBase","!category":"function"},"setCloseDuration":{"!description":"Sets a new value for property <code>closeDuration<\/code>.\n\nOptional. Close Duration in milliseconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200<\/code>.","!type":"fn(iCloseDuration: Number) -> sap.ui.core.TooltipBase","!category":"function"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getCollision":{"!description":"Gets current value of property <code>collision<\/code>.\n\nOptional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.\n\nDefault value is <code>flip<\/code>.","!type":"fn() -> sap.ui.core.Collision","!category":"function"},"setCollision":{"!description":"Sets a new value for property <code>collision<\/code>.\n\nOptional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>flip<\/code>.","!type":"fn(sCollision: sap.ui.core.Collision) -> sap.ui.core.TooltipBase","!category":"function"},"!category":"class","getOpenDelay":{"!description":"Gets current value of property <code>openDelay<\/code>.\n\nOpening delay of the tooltip in milliseconds\n\nDefault value is <code>500<\/code>.","!type":"fn() -> Number","!category":"function"},"fireClosed":{"!description":"Fires event closed to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.TooltipBase","!category":"function"},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'closed' event of this <code>sap.ui.core.TooltipBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.TooltipBase<\/code> itself.\n\nThis event is fired when the Tooltip has been closed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.TooltipBase","!category":"function"},"setOpenDuration":{"!description":"Sets a new value for property <code>openDuration<\/code>.\n\nOptional. Open Duration in milliseconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200<\/code>.","!type":"fn(iOpenDuration: Number) -> sap.ui.core.TooltipBase","!category":"function"},"setOpenDelay":{"!description":"Sets a new value for property <code>openDelay<\/code>.\n\nOpening delay of the tooltip in milliseconds\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>500<\/code>.","!type":"fn(iOpenDelay: Number) -> sap.ui.core.TooltipBase","!category":"function"},"!description":"Abstract class that can be extended in order to implement any extended tooltip. For example, RichTooltip Control is based on it. It provides the opening/closing behavior and the main \"text\" property.","setOffset":{"!description":"Sets a new value for property <code>offset<\/code>.\n\nOptional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10 3<\/code>.","!type":"fn(sOffset: String) -> sap.ui.core.TooltipBase","!category":"function"},"getCloseDelay":{"!description":"Gets current value of property <code>closeDelay<\/code>.\n\nClosing delay of the tooltip in milliseconds\n\nDefault value is <code>100<\/code>.","!type":"fn() -> Number","!category":"function"},"getOffset":{"!description":"Gets current value of property <code>offset<\/code>.\n\nOptional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".\n\nDefault value is <code>10 3<\/code>.","!type":"fn() -> String","!category":"function"},"getAtPosition":{"!description":"Gets current value of property <code>atPosition<\/code>.\n\nOptional. At position defines which position on the target control to align the positioned tooltip.\n\nDefault value is <code>begin bottom<\/code>.","!type":"fn() -> sap.ui.core.Dock","!category":"function"},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'closed' event of this <code>sap.ui.core.TooltipBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.TooltipBase","!category":"function"},"getCloseDuration":{"!description":"Gets current value of property <code>closeDuration<\/code>.\n\nOptional. Close Duration in milliseconds.\n\nDefault value is <code>200<\/code>.","!type":"fn() -> Number","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.TooltipBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.core.Configuration.FormatSettings_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Configuration.FormatSettings with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.Configuration"},"sap.ui.core.mvc.View":{"getController":{"!description":"Returns the view's Controller instance or null for a controller-less View.","!type":"fn() -> Object","!category":"function"},"fireBeforeExit":{"!description":"Fires event beforeExit to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.mvc.View","!category":"function"},"getViewData":{"!description":"Returns user specific data object","!type":"fn() -> Object","!category":"function"},"detachAfterInit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'afterInit' event of this <code>sap.ui.core.mvc.View<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.mvc.View","!category":"function"},"getControllerName":{"!description":"An (optional) method to be implemented by Views. When no controller instance is given at View instantiation time\nAND this method exists and returns the (package and class) name of a controller, the View tries to load and\ninstantiate the controller and to connect it to itself.","!type":"fn() -> String","!category":"function"},"attachAfterInit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'afterInit' event of this <code>sap.ui.core.mvc.View<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.mvc.View<\/code> itself.\n\nFired when the View has parsed the UI description and instantiated the contained controls (/control tree).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.mvc.View","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.core.mvc.View","!category":"function"},"getDisplayBlock":{"!description":"Gets current value of property <code>displayBlock<\/code>.\n\nWhether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"byId":{"!description":"Returns an Element by its id in the context of the View.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function"},"detachBeforeRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'beforeRendering' event of this <code>sap.ui.core.mvc.View<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.mvc.View","!category":"function"},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'afterRendering' event of this <code>sap.ui.core.mvc.View<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.mvc.View","!category":"function"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.mvc.View","!category":"function"},"createId":{"!description":"Convert the given view local Element id to a globally unique id\nby prefixing it with the view Id.","!type":"fn(sId: String) -> String","!category":"function"},"fireAfterRendering":{"!description":"Fires event afterRendering to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.mvc.View","!category":"function"},"runPreprocessor":{"!description":"Executes a registered preprocessor at a specified hook.","!type":"fn(sType: String, vSource: Object | String | Element, bSync?: Boolean) -> Promise | Object | String | element","!category":"function"},"clone":{"!description":"Override clone method to avoid conflict between generic cloning of content\nand content creation as defined by the UI5 Model View Controller lifecycle.\n\nFor more details see the development guide section about Model View Controller in UI5.","!type":"fn(sIdSuffix?: String, aLocalIds?: [String]) -> sap.ui.core.Element","!category":"function"},"registerPreprocessor":{"!description":"Register a preprocessor for all views of a specific type.\n\nThe preprocessor can be registered for several stages of view initialization, which are\ndependant from the view type, e.g. \"raw\", \"xml\" or already initialized \"controls\". For each\ntype one preprocessor is executed. If there is a preprocessor passed to or activated at the\nview instance already, that one is used.\n\nIt can be either a module name as string of an implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a\nfunction with a signature according to {@link sap.ui.core.mvc.View.Preprocessor.process}.\n\n<strong>Note<\/strong>: Preprocessors only work in async views and will be ignored when the view is instantiated\nin sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the\nbSyncSupport flag to true.","!type":"fn(sType: String, vPreprocessor: String | fn(), sViewType: String, bSyncSupport: Boolean, bOnDemand?: Boolean, mSettings: Object)","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.core.mvc.View","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nChild Controls of the view","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getViewName":{"!description":"Gets current value of property <code>viewName<\/code>.\n\nName of the View","!type":"fn() -> String","!category":"function"},"setDisplayBlock":{"!description":"Sets a new value for property <code>displayBlock<\/code>.\n\nWhether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplayBlock: Boolean) -> sap.ui.core.mvc.View","!category":"function"},"setViewName":{"!description":"Sets a new value for property <code>viewName<\/code>.\n\nName of the View\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sViewName: String) -> sap.ui.core.mvc.View","!category":"function"},"fireAfterInit":{"!description":"Fires event afterInit to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.mvc.View","!category":"function"},"process":{"!description":"Processing method that must be implemented by a Preprocessor.","!type":"fn(vSource: Object, oViewInfo: Object, mSettings: Object) -> Object | Promise","!category":"function"},"loaded":{"!description":"Creates a Promise representing the state of the view initialization.\n\nFor views that are loading asynchronously (by setting async=true) this Promise is created by view\ninitialization. Synchronously loading views get wrapped in an immediately resolving Promise.","!type":"fn() -> Promise","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.core.mvc.View","!category":"function"},"attachBeforeRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'beforeRendering' event of this <code>sap.ui.core.mvc.View<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.mvc.View<\/code> itself.\n\nFired before this View is re-rendered. Use to unbind event handlers from HTML elements etc.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.mvc.View","!category":"function"},"!description":"A base class for Views.\n\nIntroduces the relationship to a Controller, some basic visual appearance settings like width and height\nand provides lifecycle events.","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.mvc.View","!category":"function"},"attachBeforeExit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'beforeExit' event of this <code>sap.ui.core.mvc.View<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.mvc.View<\/code> itself.\n\nFired when the view has received the request to destroy itself, but before it has destroyed anything.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.mvc.View","!category":"function"},"fireBeforeRendering":{"!description":"Fires event beforeRendering to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.core.mvc.View","!category":"function"},"attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'afterRendering' event of this <code>sap.ui.core.mvc.View<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.mvc.View<\/code> itself.\n\nFired when the View has been (re-)rendered and its HTML is present in the DOM.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.mvc.View","!category":"function"},"detachBeforeExit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'beforeExit' event of this <code>sap.ui.core.mvc.View<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.mvc.View","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.View.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.core.Title_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Title with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Title"},"sap.ui.core.CustomData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.CustomData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.CustomData"},"sap.ui.model.ListBinding":{"detachFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event.<br>Detach event-handler <code>fnFunction<\/code> from the 'filter' event of this <code>sap.ui.model.ListBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"sort":{"!description":"Sorts the list according to the sorter object","!type":"function sort() { [native code for Array.sort, arity=1] }\n, aSorters: sap.ui.model.Sorter | Array) -> sap.ui.model.ListBinding","!category":"function"},"detachSort":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event.<br>Detach event-handler <code>fnFunction<\/code> from the 'sort' event of this <code>sap.ui.model.ListBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"getContexts":{"!description":"Returns an array of binding contexts for the bound target list.\n\n<strong>Note:<\/strong>The public usage of this method is deprecated, as calls from outside of controls will lead\nto unexpected side effects. For avoidance use {@link sap.ui.model.ListBinding.prototype.getCurrentContexts}\ninstead.","!type":"fn(iStartIndex?: Number, iLength?: Number) -> [sap.ui.model.Context]","!category":"function"},"isGrouped":{"!description":"Indicates whether grouping is enabled for the binding.\nGrouping is enabled for a list binding, if at least one sorter exists on the binding and the first sorter\nis a grouping sorter.","!type":"fn() -> Boolean","!category":"function"},"attachFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event. It now contains a parameter (reason : \"filter\") when a filter event is fired.<br>Attach event-handler <code>fnFunction<\/code> to the 'filter' event of this <code>sap.ui.model.ListBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"!description":"The ListBinding is a specific binding for lists in the model, which can be used\nto populate Tables or ItemLists.","isLengthFinal":{"!description":"Returns whether the length which can be retrieved using getLength() is a known, final length,\nor an preliminary or estimated length which may change if further data is requested.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","attachSort":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event. It now contains a parameter (reason : \"sort\") when a sorter event is fired.<br>Attach event-handler <code>fnFunction<\/code> to the 'sort' event of this <code>sap.ui.model.ListBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function"},"getGroup":{"!description":"Gets the group for the given context.\nMust only be called if isGrouped() returns that grouping is enabled for this binding. The grouping will be \nperformed using the first sorter (in case multiple sorters are defined).","!type":"fn(oContext: sap.ui.model.Context) -> Object","!category":"function"},"getDistinctValues":{"!description":"Returns list of distinct values for the given relative binding path","!type":"fn(sPath: String) -> Array","!category":"function"},"getLength":{"!description":"Returns the number of entries in the list. This might be an estimated or preliminary length, in case\nthe full length is not known yet, see method isLengthFinal().","!type":"fn() -> Number","!category":"function"},"filter":{"!description":"Filters the list according to the filter definitions","!type":"function filter() { [native code for Array.filter, arity=1] }\n, aFilters: [Object], sFilterType: sap.ui.model.FilterType) -> sap.ui.model.ListBinding","!category":"function"},"getCurrentContexts":{"!description":"Returns an array of currently used binding contexts of the bound control\n\nThis method does not trigger any data requests from the backend or delta calculation, but just returns the context\narray as last requested by the control. This can be used by the application to get access to the data currently\ndisplayed by a list control.","!type":"fn() -> [sap.ui.model.Context]","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ListBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.Binding"},"sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest":{"setSortExpression":{"!description":"Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the sort object maintained by this request.","!type":"fn(oSorter: sap.ui.model.analytics.odata4analytics.SortExpression)","!category":"function"},"includeParameterText":{"!description":"Specify which components of the parameter shall be included in the value\nset.","!type":"fn(bIncludeText: undefined)","!category":"function"},"getSortExpression":{"!description":"Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.SortExpression","!category":"function"},"!description":"Creation of URIs for fetching a query parameter value set.","setFilterExpression":{"!description":"Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the filter object maintained by this request.","!type":"fn(oFilter: sap.ui.model.analytics.odata4analytics.FilterExpression)","!category":"function"},"!category":"class","getFilterExpression":{"!description":"Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function"},"getURIQueryOptionValue":{"!description":"Get the value of an query option for the OData request URI corresponding\nto this request.","!type":"fn(sQueryOptionName: String) -> String","!category":"function"},"getURIToParameterValueSetEntries":{"!description":"Get the unescaped URI to fetch the parameter value set.","!type":"fn(sServiceRootURI: String) -> String","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.routing.Target":{"destroy":{"!description":"Destroys the target, will be called by {@link sap.m.routing.Targets} don't call this directly.","!type":"fn() -> sap.ui.core.routing.Target","!category":"function"},"fireDisplay":{"!description":"Fire event created to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Target","!category":"function"},"attachDisplay":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'display' event of this <code>sap.ui.core.routing.Target<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Target","!category":"function"},"detachDisplay":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'display' event of this <code>sap.ui.core.routing.Target<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Target","!category":"function"},"!category":"class","display":{"!description":"Creates a view and puts it in an aggregation of a control that has been defined in the {@link #constructor}.","!type":"fn(vData?: *)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Target.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.core.VariantLayoutData":{"destroyMultipleLayoutData":{"!description":"Destroys all the multipleLayoutData in the aggregation\nnamed <code>multipleLayoutData<\/code>.","!type":"fn() -> sap.ui.core.VariantLayoutData","!category":"function"},"!description":"Allows to add multiple LayoutData to one control in case that a easy switch of layouts (e.g. in a Form) is needed.","!category":"class","removeAllMultipleLayoutData":{"!description":"Removes all the controls in the aggregation named <code>multipleLayoutData<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.LayoutData]","!category":"function"},"addMultipleLayoutData":{"!description":"Adds some multipleLayoutData into the aggregation named <code>multipleLayoutData<\/code>.","!type":"fn(oMultipleLayoutData: sap.ui.core.LayoutData) -> sap.ui.core.VariantLayoutData","!category":"function"},"removeMultipleLayoutData":{"!description":"Removes a multipleLayoutData from the aggregation named <code>multipleLayoutData<\/code>.","!type":"fn(vMultipleLayoutData: Number | String | sap.ui.core.LayoutData) -> sap.ui.core.LayoutData","!category":"function"},"indexOfMultipleLayoutData":{"!description":"Checks for the provided <code>sap.ui.core.LayoutData<\/code> in the aggregation named <code>multipleLayoutData<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oMultipleLayoutData: sap.ui.core.LayoutData) -> Number","!category":"function"},"getMultipleLayoutData":{"!description":"Gets content of aggregation <code>multipleLayoutData<\/code>.\n\nAllows multiple LayoutData.","!type":"fn() -> [sap.ui.core.LayoutData]","!category":"function"},"insertMultipleLayoutData":{"!description":"Inserts a multipleLayoutData into the aggregation named <code>multipleLayoutData<\/code>.","!type":"fn(oMultipleLayoutData: sap.ui.core.LayoutData, iIndex: Number) -> sap.ui.core.VariantLayoutData","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.VariantLayoutData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.LayoutData"},"sap.ui.core.routing.Route":{"destroy":{"!description":"Destroys a route","!type":"fn() -> sap.ui.core.routing.Route","!category":"function"},"attachMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'matched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Route","!category":"function"},"detachMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'matched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Route","!category":"function"},"getPattern":{"!description":"Return the pattern of the route. If there are multiple patterns, the first pattern is returned","!type":"fn() -> String","!category":"function"},"detachPatternMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'patternMatched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Route","!category":"function"},"!category":"class","getURL":{"!description":"Returns the URL for the route and replaces the placeholders with the values in oParameters","!type":"fn(oParameters: Object) -> String","!category":"function"},"attachPatternMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'patternMatched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Route","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Route.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.base.EventProvider":{"destroy":{"!description":"Cleans up the internal structures and removes all event handlers.\n\nThe object must not be used anymore after destroy was called.","!type":"fn()","!category":"function"},"detachEvent":{"!description":"Removes a previously attached event handler from the event with the given identifier.\n\nThe passed parameters must match those used for registration with {@link #attachEvent} beforehand.","!type":"fn(sEventId: String, fnFunction: fn(), oListener?: Object) -> sap.ui.base.EventProvider","!category":"function"},"!description":"Provides eventing capabilities for objects like attaching or detaching event handlers for events which are notified when events are fired.","hasListeners":{"!description":"Returns whether there are any registered event handlers for the event with the given identifier.","!type":"fn(sEventId: String) -> Boolean","!category":"function"},"!category":"class","getEventingParent":{"!description":"Returns the parent in the eventing hierarchy of this object.\n\nPer default this returns null, but if eventing is used in objects, which are hierarchically\nstructured, this can be overwritten to make the object hierarchy visible to the eventing and\nenables the use of event bubbling within this object hierarchy.","!type":"fn() -> sap.ui.base.EventProvider","!category":"function"},"toString":{"!description":"Returns a string representation of this object.\n\nIn case there is no class or id information, a simple static string is returned.\nSubclasses should override this method.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function"},"attachEventOnce":{"!description":"Attaches an event handler, called one time only, to the event with the given identifier.\n\nWhen the event occurs, the handler function is called and the handler registration is automatically removed afterwards.","!type":"fn(sEventId: String, oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.EventProvider","!category":"function"},"fireEvent":{"!description":"Fires an {@link sap.ui.base.Event event} with the given settings and notifies all attached event handlers.","!type":"fn(sEventId: String, mParameters?: Object, bAllowPreventDefault?: Boolean, bEnableEventBubbling?: Boolean) -> sap.ui.base.EventProvider | Boolean","!category":"function"},"attachEvent":{"!description":"Attaches an event handler to the event with the given identifier.","!type":"fn(sEventId: String, oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.EventProvider","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.base.EventProvider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.util.Export":{"generate":{"!description":"Generates the file content and returns a Promise\nwith the instance as context (this).<br>\nThe promise will be resolved with the generated content\nas a string.\n\n<p><b>Please note: The return value was changed from jQuery Promises to standard ES6 Promises.\njQuery specific Promise methods ('done', 'fail', 'always', 'pipe' and 'state') are still available but should not be used.\nPlease use only the standard methods 'then' and 'catch'!<\/b><\/p>","!type":"fn() -> Promise","!category":"function"},"removeAllColumns":{"!description":"Removes all the controls in the aggregation named <code>columns<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.util.ExportColumn]","!category":"function"},"unbindColumns":{"!description":"Unbinds aggregation <code>columns<\/code> from model data.","!type":"fn() -> sap.ui.core.util.Export","!category":"function"},"getColumns":{"!description":"Gets content of aggregation <code>columns<\/code>.\n\nColumns for the Export.","!type":"fn() -> [sap.ui.core.util.ExportColumn]","!category":"function"},"removeColumn":{"!description":"Removes a column from the aggregation named <code>columns<\/code>.","!type":"fn(vColumn: Number | String | sap.ui.core.util.ExportColumn) -> sap.ui.core.util.ExportColumn","!category":"function"},"bindRows":{"!description":"Binds aggregation <code>rows<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.core.util.Export","!category":"function"},"destroyColumns":{"!description":"Destroys all the columns in the aggregation\nnamed <code>columns<\/code>.","!type":"fn() -> sap.ui.core.util.Export","!category":"function"},"insertRow":{"!description":"Inserts a row into the aggregation named <code>rows<\/code>.","!type":"fn(oRow: sap.ui.core.util.ExportRow, iIndex: Number) -> sap.ui.core.util.Export","!category":"function"},"getExportType":{"!description":"Gets content of aggregation <code>exportType<\/code>.\n\nType that generates the content.","!type":"fn() -> sap.ui.core.util.ExportType","!category":"function"},"destroyExportType":{"!description":"Destroys the exportType in the aggregation\nnamed <code>exportType<\/code>.","!type":"fn() -> sap.ui.core.util.Export","!category":"function"},"setExportType":{"!description":"Sets the aggregated <code>exportType<\/code>.","!type":"fn(oExportType: sap.ui.core.util.ExportType) -> sap.ui.core.util.Export","!category":"function"},"!category":"class","getRows":{"!description":"Gets content of aggregation <code>rows<\/code>.\n\nRows of the Export.","!type":"fn() -> [sap.ui.core.util.ExportRow]","!category":"function"},"addRow":{"!description":"Adds some row into the aggregation named <code>rows<\/code>.","!type":"fn(oRow: sap.ui.core.util.ExportRow) -> sap.ui.core.util.Export","!category":"function"},"removeRow":{"!description":"Removes a row from the aggregation named <code>rows<\/code>.","!type":"fn(vRow: Number | String | sap.ui.core.util.ExportRow) -> sap.ui.core.util.ExportRow","!category":"function"},"unbindRows":{"!description":"Unbinds aggregation <code>rows<\/code> from model data.","!type":"fn() -> sap.ui.core.util.Export","!category":"function"},"removeAllRows":{"!description":"Removes all the controls in the aggregation named <code>rows<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.util.ExportRow]","!category":"function"},"destroyRows":{"!description":"Destroys all the rows in the aggregation\nnamed <code>rows<\/code>.","!type":"fn() -> sap.ui.core.util.Export","!category":"function"},"indexOfRow":{"!description":"Checks for the provided <code>sap.ui.core.util.ExportRow<\/code> in the aggregation named <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRow: sap.ui.core.util.ExportRow) -> Number","!category":"function"},"indexOfColumn":{"!description":"Checks for the provided <code>sap.ui.core.util.ExportColumn<\/code> in the aggregation named <code>columns<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oColumn: sap.ui.core.util.ExportColumn) -> Number","!category":"function"},"!description":"Export provides the possibility to generate a list of data in a specific format / type, e.g. CSV to use it in other programs / applications.","addColumn":{"!description":"Adds some column into the aggregation named <code>columns<\/code>.","!type":"fn(oColumn: sap.ui.core.util.ExportColumn) -> sap.ui.core.util.Export","!category":"function"},"insertColumn":{"!description":"Inserts a column into the aggregation named <code>columns<\/code>.","!type":"fn(oColumn: sap.ui.core.util.ExportColumn, iIndex: Number) -> sap.ui.core.util.Export","!category":"function"},"saveFile":{"!description":"Generates the file content, triggers a download / save action and\nreturns a Promise with the instance as context (this).<br>\nThe promise will be resolved with the generated content\nas a string.\n<p><b>For information about browser support, see <code>sap.ui.core.util.File.save<\/code><\/b><\/p>\n\n<p><b>Please note: The return value was changed from jQuery Promises to standard ES6 Promises.\njQuery specific Promise methods ('done', 'fail', 'always', 'pipe' and 'state') are still available but should not be used.\nPlease use only the standard methods 'then' and 'catch'!<\/b><\/p>","!type":"fn(sFileName?: String) -> Promise","!category":"function"},"bindColumns":{"!description":"Binds aggregation <code>columns<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.core.util.Export","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.Export.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.model.odata.Filter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.Filter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sPath: String, aValues: [Object], bAND?: Boolean)","prototype":"sap.ui.model.odata.Filter"},"sap.ui.core.format.DateFormat":{"getDateTimeInstance":{"!description":"Get a datetime instance of the DateFormat, which can be used for formatting.","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.DateFormat","!category":"function"},"getTimeInstance":{"!description":"Get a time instance of the DateFormat, which can be used for formatting.","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.DateFormat","!category":"function"},"!description":"The DateFormat is a static class for formatting and parsing date and time values according\nto a set of format options.\n\nSupported format options are pattern based on Unicode LDML Date Format notation.\nIf no pattern is specified a default pattern according to the locale settings is used.","getDateInstance":{"!description":"Get a date instance of the DateFormat, which can be used for formatting.","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.DateFormat","!category":"function"},"!category":"class","format":{"!description":"Format a date according to the given format options.","!type":"fn(oDate: Date, bUTC: Boolean) -> String","!category":"function"},"parse":{"!description":"Parse a string which is formatted according to the given format options.","!type":"fn(sValue: String, bUTC: Boolean, bStrict: Boolean) -> Date","!category":"function"},"!proto":"sap.ui.base.Object"},"jQuery.sap.log.LogLevel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.1.2 To streamline the Logging API a bit, the separation between Level and LogLevel has been given up.\nUse the (enriched) enumeration {@link jQuery.sap.log.Level} instead.<br>Enumeration of levels that can be used in a call to {@link jQuery.sap.log.Logger#setLevel}(iLevel, sComponent).","!category":"namespace"},"sap.ui.core.UIArea":{"removeDependent":{"!description":"Removes a dependent from the aggregation named <code>dependents<\/code>.","!type":"fn(vDependent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"destroyDependents":{"!description":"Destroys all the dependents in the aggregation\nnamed <code>dependents<\/code>.","!type":"fn() -> sap.ui.core.UIArea","!category":"function"},"addDependent":{"!description":"Adds some dependent into the aggregation named <code>dependents<\/code>.","!type":"fn(oDependent: sap.ui.core.Control) -> sap.ui.core.UIArea","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"indexOfDependent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>dependents<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oDependent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getEventingParent":{"!description":"Returns the Core's event provider as new eventing parent to enable control event bubbling to the core to ensure compatibility with the core validation events.","!type":"fn() -> sap.ui.base.EventProvider","!category":"function"},"getUIArea":{"!description":"Returns this UI area. Needed to stop recursive calls from an element to its parent.","!type":"fn() -> sap.ui.core.UIArea","!category":"function"},"setRootNode":{"!description":"Allows setting the Root Node hosting this instance of <code>UIArea<\/code>.<br/> The Dom Ref must have an Id that\nwill be used as Id for this instance of <code>UIArea<\/code>.","!type":"fn(oRootNode: Object)","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.core.UIArea","!category":"function"},"getRootNode":{"!description":"Returns the Root Node hosting this instance of <code>UIArea<\/code>.","!type":"fn() -> Element","!category":"function"},"insertDependent":{"!description":"Inserts a dependent into the aggregation named <code>dependents<\/code>.","!type":"fn(oDependent: sap.ui.core.Control, iIndex: Number) -> sap.ui.core.UIArea","!category":"function"},"!category":"class","setRootControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use functions <code>removeAllContent<\/code> and <code>addContent<\/code> instead<br>Sets the root control to be displayed in this UIArea.\n\nFirst, all old content controls (if any) will be detached from this UIArea (e.g. their parent\nrelationship to this UIArea will be cut off). Then the parent relationship for the new\ncontent control (if not empty) will be set to this UIArea and finally, the UIArea will\nbe marked for re-rendering.\n\nThe real re-rendering happens whenever the re-rendering is called. Either implicitly\nat the end of any control event or by calling sap.ui.getCore().applyChanges().","!type":"fn(oRootControl: sap.ui.base.Interface | sap.ui.core.Control)","!category":"function"},"isInvalidateSuppressed":{"!description":"Returns whether rerendering is currently suppressed on this UIArea","!type":"fn()","!category":"function"},"getId":{"!description":"Returns this <code>UIArea<\/code>'s id (as determined from provided RootNode).","!type":"fn() -> String | null","!category":"function"},"removeAllDependents":{"!description":"Removes all the controls in the aggregation named <code>dependents<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"unlock":{"!description":"Un-Locks this instance of UIArea.\n\nRerendering and eventing will now be enabled again.","!type":"fn()","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.core.UIArea","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent that is displayed in the UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"lock":{"!description":"Locks this instance of UIArea.\n\nRerendering and eventing will not be active as long as no\n{@link #unlock} is called.","!type":"fn()","!category":"function"},"invalidate":{"!description":"Will be used as end-point for invalidate-bubbling from controls up their hierarchy.<br/> Triggers re-rendering of\nthe UIAreas content.","!type":"fn()","!category":"function"},"isLocked":{"!description":"Returns the locked state of the <code>sap.ui.core.UIArea<\/code>","!type":"fn() -> Boolean","!category":"function"},"isActive":{"!description":"Checks whether the control is still valid (is in the DOM)","!type":"fn() -> Boolean","!category":"function"},"!description":"An area in a page that hosts a tree of UI elements.\n\nProvides means for event-handling, rerendering, etc.\n\nSpecial aggregation \"dependents\" is connected to the lifecycle management and databinding,\nbut not rendered automatically and can be used for popups or other dependent controls. This allows\ndefinition of popup controls in declarative views and enables propagation of model and context\ninformation to them.","insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.core.UIArea","!category":"function"},"getRootControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use function <code>getContent<\/code> instead<br>Returns the content control of this <code>UIArea<\/code> at the specified index.\nIf no index is given the first content control is returned.","!type":"fn(idx: Number) -> sap.ui.core.Control","!category":"function"},"getDependents":{"!description":"Gets content of aggregation <code>dependents<\/code>.\n\nDependent objects whose lifecycle is bound to the UIarea but which are not automatically rendered by the UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.UIArea.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getBindingContext":{"!description":"Provide getBindingContext, as UIArea can be parent of an element.","!type":"fn() -> null","!category":"function"},"!proto":"sap.ui.base.ManagedObject"},"sap.ui.model.odata.ODataContextBinding":{"!description":"The ContextBinding is a specific binding for a setting context for the model","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.ContextBinding":{"!description":"The ContextBinding is a specific binding for a setting context for the model","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.Binding"},"sap.ui.test.matchers.Properties":{"!description":"Properties - checks if a control's properties have the following values","!category":"class","!proto":"sap.ui.base.Object"},"sap.ui.core.EventBus_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.EventBus with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.EventBus"},"sap.ui.core.routing.HashChanger_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.HashChanger with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn()","prototype":"sap.ui.core.routing.HashChanger"},"sap.ui.core.UIComponent_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.UIComponent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.UIComponent"},"sap.ui.model.odata.type.DateTimeBase":{"!description":"This is an abstract base class for the <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\nOData primitive types<\/a> <code>Edm.DateTime<\/code> and <code>Edm.DateTimeOffset<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the\ndefined constraints.","!type":"fn(oValue: Date)","!category":"function"},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(oValue: Date, sTargetType: String) -> String | Date","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value to JavaScript <code>Date<\/code>.","!type":"fn(sValue: String, sSourceType: String) -> Date","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.DateTimeBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.core.tmpl.Template":{"declareControl":{"!description":"Declares a new control based on this template and returns the created \nclass / constructor function. The class is based on the information coming \nfrom the abstract functions <code>createMetadata<\/code> and \n<code>createRenderer<\/code>.","!type":"fn(sControl: String) -> fn()","!category":"function"},"placeAt":{"!description":"Creates an anonymous TemplateControl for the Template and places the control \ninto the specified DOM element.","!type":"fn(oRef: String | DomRef, oContext?: Object, vPosition?: String | Number, bInline: Boolean) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getContent":{"!description":"Gets current value of property <code>content<\/code>.\n\nThe Template definition as a String.","!type":"fn() -> String","!category":"function"},"byId":{"!description":"Returns the registered template for the given id, if any.","!type":"fn(sId: String) -> sap.ui.core.tmpl.Template","!category":"function"},"!category":"class","createControl":{"!description":"Creates an anonymous TemplateControl for the Template.","!type":"fn(sId: String, oContext?: Object, oView: sap.ui.core.mvc.View) -> sap.ui.core.tmpl.TemplateControl","!category":"function"},"setContent":{"!description":"Sets a new value for property <code>content<\/code>.\n\nThe Template definition as a String.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContent: String) -> sap.ui.core.tmpl.Template","!category":"function"},"parsePath":{"!description":"parses the given path and extracts the model and path","!type":"fn(sPath: String) -> Object","!category":"function"},"getInterface":{"!type":"fn()","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.Template.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.ManagedObject"},"sap.ui.model.ChangeReason":{"Sort":{"!description":"The list was sorted","!type":"String","!category":"enum"},"Filter":{"!description":"The List was filtered","!type":"String","!category":"enum"},"!description":"Change Reason for ListBinding/TreeBinding.","Context":{"!description":"The list context has changed","!type":"String","!category":"enum"},"Change":{"!description":"The list has changed","!type":"String","!category":"enum"},"Refresh":{"!description":"The list was refreshed","!type":"String","!category":"enum"},"!category":"namespace","Collapse":{"!description":"The tree node was collapsed","!type":"String","!category":"enum"},"Expand":{"!description":"The tree node was expanded","!type":"String","!category":"enum"}},"sap.ui.model.json":{"JSONModel":"sap.ui.model.json.JSONModel_obj","!description":"JSON-based DataBinding","!category":"namespace"},"sap.ui.core.routing.Route_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Route with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(The: sap.ui.core.routing.Router, oConfig: Object, oParent?: sap.ui.core.routing.Route)","prototype":"sap.ui.core.routing.Route"},"sap.ui.Device.browser":{"mozilla":{"!description":"If this flag is set to <code>true<\/code>, a browser featuring a Mozilla engine is used.","!type":"Boolean","!category":"enum"},"edge":{"!description":"If this flag is set to <code>true<\/code>, the Microsoft Edge browser is used.","!type":"Boolean","!category":"enum"},"firefox":{"!description":"If this flag is set to <code>true<\/code>, the Mozilla Firefox browser is used.","!type":"Boolean","!category":"enum"},"msie":{"!description":"If this flag is set to <code>true<\/code>, the Microsoft Internet Explorer browser is used.","!type":"Boolean","!category":"enum"},"webkit":{"!description":"If this flag is set to <code>true<\/code>, a browser featuring a Webkit engine is used.","!type":"Boolean","!category":"enum"},"BROWSER":"sap.ui.Device.browser.BROWSER","chrome":{"!description":"If this flag is set to <code>true<\/code>, the Google Chrome browser is used.","!type":"Boolean","!category":"enum"},"webview":{"!description":"If this flag is set to <code>true<\/code>, the Safari browser runs in webview mode on iOS.\n\n<b>Note:<\/b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected,\ntechnically not a standard Safari is used. There might be slight differences in behavior and detection, e.g.\nthe availability of {@link sap.ui.Device.browser#version}.","!type":"Boolean","!category":"enum"},"versionStr":{"!description":"The version of the browser as <code>string<\/code>.\n\nMight be empty if no version can be determined.","!type":"String","!category":"enum"},"version":{"!description":"The version of the browser as <code>float<\/code>.\n\nMight be <code>-1<\/code> if no version can be determined.","!type":"Number","!category":"enum"},"fullscreen":{"!description":"If this flag is set to <code>true<\/code>, the Safari browser runs in standalone fullscreen mode on iOS.\n\n<b>Note:<\/b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected,\ntechnically not a standard Safari is used. There might be slight differences in behavior and detection, e.g.\nthe availability of {@link sap.ui.Device.browser#version}.","!type":"Boolean","!category":"enum"},"!description":"Contains information about the used browser.","name":{"!description":"The name of the browser.","!type":"String","!category":"enum"},"safari":{"!description":"If this flag is set to <code>true<\/code>, the Apple Safari browser is used.\n\n<b>Note:<\/b>\nThis flag is also <code>true<\/code> when the standalone (fullscreen) mode or webview is used on iOS devices.\nPlease also note the flags {@link sap.ui.Device.browser#fullscreen} and {@link sap.ui.Device.browser#webview}.","!type":"Boolean","!category":"enum"},"!category":"namespace","internet_explorer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.browser.msie} instead.<br>If this flag is set to <code>true<\/code>, the Microsoft Internet Explorer browser is used.","!type":"Boolean","!category":"enum"},"mobile":{"!description":"If this flag is set to <code>true<\/code>, the mobile variant of the browser is used.\n\n<b>Note:<\/b> This information might not be available for all browsers.","!type":"Boolean","!category":"enum"}},"sap.ui.core.Item_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Item with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Item"},"sap.ui.model.analytics.odata4analytics.FilterExpression_obj":{"!type":"fn(oModel: Object, oSchema: Object, oEntityType: sap.ui.model.analytics.odata4analytics.EntityType)","prototype":"sap.ui.model.analytics.odata4analytics.FilterExpression"},"sap.ui.model.CompositeType":{"!description":"This is an abstract base class for composite types. Composite types have multiple input values and know\nhow to merge/split them upon formatting/parsing the value. Typical use case a currency or amount values.\n\nSubclasses of CompositeTypes can define boolean properties in the constructor:\n- bUseRawValues: the format and parse method will handle raw model values, types of embedded bindings are ignored\n- bParseWithValues: the parse method call will include the current binding values as a third parameter","validateValue":{"!description":"Validate whether a given value in model representation is valid and meets the\ndefined constraints (if any).","!type":"fn(aValues: Array)","!category":"function"},"formatValue":{"!description":"Format the given set of values in model representation to an output value in the given\ninternal type. This happens according to the format options, if target type is 'string'.\nIf aValues is not defined or null, null will be returned.","!type":"fn(aValues: Array, sInternalType: String) -> Object","!category":"function"},"!category":"class","parseValue":{"!description":"Parse a value of an internal type to the expected set of values of the model type.","!type":"fn(oValue: Object, sInternalType: String, aCurrentValues: Array) -> Array","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.CompositeType.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.SimpleType"},"sap.ui.core.util.serializer.ViewSerializer":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.ViewSerializer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.EventProvider"},"sap.ui.model.Type":{"!description":"This is an abstract base class for type objects.","getName":{"!description":"Returns the name of this type.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Type.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.core.Scrolling":{"!description":"Defines the possible values for horizontal and vertical scrolling behavior.","Auto":{"!description":"A scroll bar is shown if the content requires more space than the given space (rectangle) provides.","!type":"String","!category":"enum"},"!category":"static class","Hidden":{"!description":"No scroll bar is shown, and the content stays in the given rectangle.","!type":"String","!category":"enum"},"None":{"!description":"No scroll bar provided even if the content is larger than the available space.","!type":"String","!category":"enum"},"Scroll":{"!description":"A scroll bar is always shown even if the space is large enough for the current content.","!type":"String","!category":"enum"}},"jQuery.sap.util":{"UriParameters":"jQuery.sap.util.UriParameters","ResourceBundle":"jQuery.sap.util.ResourceBundle","!category":"namespace","Properties":"jQuery.sap.util.Properties"},"sap.ui.model.analytics.v2.BatchResponseCollector_obj":{"!type":"fn(mParams?: Object)","prototype":"sap.ui.model.analytics.v2.BatchResponseCollector"},"sap.ui.model.type.Integer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Integer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Integer"},"sap.ui.test.OpaPlugin":{"resetHash":{"!description":"Sets the hash to the empty hash.","!type":"fn()","!category":"function"},"!description":"A Plugin to search UI5 controls.","getMatchingControls":{"!description":"Tries to find a control depending on the options provided.","!type":"fn(oOptions: Object) -> sap.ui.core.Element","!category":"function"},"!category":"class","getControlInView":{"!description":"Gets a control inside of the view (same as calling oView.byId)\nIf no id is provided, it will return all the controls inside of a view (also nested views and their children).<br/>\neg : { id : \"foo\" } will search globally for a control with the id foo<br/>\neg : { id : \"foo\" , viewName : \"bar\" } will search for a control with the id foo inside the view with the name bar<br/>\neg : { viewName : \"bar\" } will return all the controls inside the view with the name bar<br/>\neg : { viewName : \"bar\", controlType : sap.m.Button } will return all the Buttons inside a view with the name bar<br/>\neg : { viewName : \"bar\", viewNamespace : \"baz.\" } will return all the Controls in the view with the name baz.bar<br/>","!type":"fn(oOptions: Object) -> [sap.ui.core.Element | sap.ui.core.Element]","!category":"function"},"getAllControls":{"!description":"Gets all the controls of a certain type that are currently instantiated.","!type":"fn(fnConstructorType?: fn()) -> Array","!category":"function"},"getView":{"!description":"Returns the view with a specific name","!type":"fn(sViewName: String) -> sap.ui.core.mvc.View","!category":"function"},"getControlByGlobalId":{"!description":"Returns a control by its id\naccepts an object with an id property the id can be\nwill check a control type also, if defined\n<ul>\n\t<li>a single string - function will return the control instance or undefined<\/li>\n\t<li>an array of strings - function will return an array of found controls or an empty array<\/li>\n\t<li>a regexp - function will return an array of found controls or an empty array<\/li>\n<\/ul>","!type":"fn(oOptions: undefined) -> [sap.ui.core.Element]","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.OpaPlugin.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.Context":{"getModel":{"!description":"Getter for model","!type":"fn() -> sap.ui.core.Model","!category":"function"},"!description":"The Context is a pointer to an object in the model data, which is used to \nallow definition of relative bindings, which are resolved relative to the\ndefined object.\nContext elements are created either by the ListBinding for each list entry\nor by using createBindingContext.","getProperty":{"!description":"Gets the property with the given relative binding path","!type":"fn(sPath: String) -> Object","!category":"function"},"getPath":{"!description":"Getter for path of the context itself or a subpath","!type":"fn(sPath: String) -> String","!category":"function"},"!category":"class","getObject":{"!description":"Gets the (model dependent) object the context points to or the object with the given relative binding path","!type":"fn(sPath: String) -> Object","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Context.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.odata.type.Decimal_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Decimal with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Decimal"},"sap.ui.test.matchers.AggregationLengthEquals_obj":{"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.AggregationLengthEquals"},"sap.ui.core.tmpl.Template_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.Template with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.Template"},"sap.ui.core.mvc.JSView":{"!description":"A View defined/constructed by JavaScript code.","getAutoPrefixId":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn() -> Boolean","!category":"function"},"createContent":{"!description":"A method to be implemented by JSViews, returning the View UI.\nWhile for declarative View types like XMLView or JSONView the user interface definition is declared in a separate file,\nJSViews programmatically construct the UI. This happens in the createContent method which every JSView needs to implement.\nThe View implementation can construct the complete UI in this method - or only return the root control and create the rest of the UI lazily later on.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.JSView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.mvc.View"},"sap.ui.model.type.DateTime_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.DateTime with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.Date.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.DateTime"},"sap.ui.model.ClientModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oData: Object)","prototype":"sap.ui.model.ClientModel"},"sap.ui.core.ScrollBar":{"fireScroll":{"!description":"Fires event scroll to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'action' of type <code>sap.ui.core.ScrollBarAction<\/code>Actions are: Click on track, button, drag of thumb, or mouse wheel click.<\/li>\n<li>'forward' of type <code>boolean<\/code>Direction of scrolling: back (up) or forward (down).<\/li>\n<li>'newScrollPos' of type <code>int<\/code>Current Scroll position either in pixels or in steps.<\/li>\n<li>'oldScrollPos' of type <code>int<\/code>Old Scroll position - can be in pixels or in steps.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.ScrollBar","!category":"function"},"getScrollPosition":{"!description":"Gets current value of property <code>scrollPosition<\/code>.\n\nScroll position in steps or pixels.","!type":"fn() -> Number","!category":"function"},"setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nSize of the Scrollbar (in pixels).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSize: sap.ui.core.CSSSize) -> sap.ui.core.ScrollBar","!category":"function"},"getContentSize":{"!description":"Gets current value of property <code>contentSize<\/code>.\n\nSize of the scrollable content (in pixels).","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setScrollPosition":{"!description":"Sets a new value for property <code>scrollPosition<\/code>.\n\nScroll position in steps or pixels.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iScrollPosition: Number) -> sap.ui.core.ScrollBar","!category":"function"},"detachScroll":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'scroll' event of this <code>sap.ui.core.ScrollBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ScrollBar","!category":"function"},"unbind":{"!description":"Unbinds the mouse wheel scroll event of the control that has the scrollbar","!type":"fn(oOwnerDomRef: String)","!category":"function"},"!description":"The ScrollBar control can be used for virtual scrolling of a certain area.\nThis means: to simulate a very large scrollable area when technically the area is small and the control takes care of displaying the respective part only. E.g. a Table control can take care of only rendering the currently visible rows and use this ScrollBar control to make the user think he actually scrolls through a long list.","setSteps":{"!description":"Sets a new value for property <code>steps<\/code>.\n\nNumber of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iSteps: Number) -> sap.ui.core.ScrollBar","!category":"function"},"getSteps":{"!description":"Gets current value of property <code>steps<\/code>.\n\nNumber of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically.","!type":"fn() -> Number","!category":"function"},"!category":"class","pageDown":{"!description":"Page Down is used to scroll one page forward.","!type":"fn()","!category":"function"},"attachScroll":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'scroll' event of this <code>sap.ui.core.ScrollBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.core.ScrollBar<\/code> itself.\n\nScroll event.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ScrollBar","!category":"function"},"getVertical":{"!description":"Gets current value of property <code>vertical<\/code>.\n\nOrientation. Defines if the Scrollbar is vertical or horizontal.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"pageUp":{"!description":"Page Up is used to scroll one page back.","!type":"fn()","!category":"function"},"bind":{"!description":"Binds the mouse wheel scroll event of the control that has the scrollbar to the scrollbar itself.","!type":"fn(oOwnerDomRef: String)","!category":"function"},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nSize of the Scrollbar (in pixels).","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setVertical":{"!description":"Sets a new value for property <code>vertical<\/code>.\n\nOrientation. Defines if the Scrollbar is vertical or horizontal.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVertical: Boolean) -> sap.ui.core.ScrollBar","!category":"function"},"setContentSize":{"!description":"Sets a new value for property <code>contentSize<\/code>.\n\nSize of the scrollable content (in pixels).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContentSize: sap.ui.core.CSSSize) -> sap.ui.core.ScrollBar","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ScrollBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.core.InvisibleText":{"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe text of the InvisibleText.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"toStatic":{"!description":"Adds <code>this<\/code> control into the static, hidden area UI area container.","!type":"fn() -> sap.ui.core.InvisibleControl","!category":"function"},"!description":"An InvisibleText is used to bring hidden texts to the UI for screen reader support. The hidden text can e.g. be referenced\nin the ariaLabelledBy or ariaDescribedBy associations of other controls.\n\nThe inherited properties busy, busyIndicatorDelay and visible and the aggregation tooltip is not supported by this control.","setTooltip":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Tooltip is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleControl","!category":"function"},"setVisible":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Property visible is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleControl","!category":"function"},"!category":"class","setBusyIndicatorDelay":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Local BusyIndicator is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleControl","!category":"function"},"setBusy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Local BusyIndicator is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleControl","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe text of the InvisibleText.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.core.InvisibleText","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.InvisibleText.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.model.Context_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Context with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: Object)","prototype":"sap.ui.model.Context"},"sap.ui.test.Opa_obj":{"!type":"fn(extensionObject?: Object)","prototype":"sap.ui.test.Opa"},"jQuery.sap.log":{"getLog":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.1.2 To avoid confusion with getLogger, this method has been renamed to {@link jQuery.sap.log.getLogEntries}.<br>Retrieves the currently recorded log entries.","!type":"fn()","!category":"function"},"setLevel":{"!description":"Defines the maximum jQuery.sap.log.Level of log entries that will be recorded.\nLog entries with a higher (less important) log level will be omitted from the log.\nWhen a component name is given, the log level will be configured for that component\nonly, otherwise the log level for the default component of this logger is set.\nFor the global logger, the global default level is set.\n\n<b>Note<\/b>: Setting a global default log level has no impact on already defined\ncomponent log levels. They always override the global default log level.","!type":"fn(iLogLevel: jQuery.sap.log.Level, sComponent?: String) -> jQuery.sap.log","!category":"function"},"LogLevel":"jQuery.sap.log.LogLevel","error":{"!description":"Creates a new error-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"getLogEntries":{"!description":"Returns the logged entries recorded so far as an array.\n\nLog entries are plain JavaScript objects with the following properties\n<ul>\n<li>timestamp {number} point in time when the entry was created\n<li>level {int} LogLevel level of the entry\n<li>message {string} message text of the entry\n<\/ul>","!type":"fn() -> [Object]","!category":"function"},"trace":{"!description":"Creates a new trace-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"fatal":{"!description":"Creates a new fatal-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"removeLogListener":{"!description":"Allows to remove a registered LogListener.","!type":"fn(oListener: Object) -> jQuery.sap.log","!category":"function"},"getLogger":{"!description":"Returns a {@link jQuery.sap.log.Logger} for the given component.\n\nThe method might or might not return the same logger object across multiple calls.\nWhile loggers are assumed to be light weight objects, consumers should try to\navoid redundant calls and instead keep references to already retrieved loggers.\n\nThe optional second parameter <code>iDefaultLogLevel<\/code> allows to specify\na default log level for the component. It is only applied when no log level has been\ndefined so far for that component (ignoring inherited log levels). If this method is\ncalled multiple times for the same component but with different log levels,\nonly the first call one might be taken into account.","!type":"fn(sComponent: String, iDefaultLogLevel?: Number) -> jQuery.sap.log.Logger","!category":"function"},"debug":{"!description":"Creates a new debug-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"isLoggable":{"!description":"Checks whether logging is enabled for the given log level,\ndepending on the currently effective log level for the given component.\n\nIf no component is given, the default component of this logger will be taken into account.","!type":"fn(iLevel?: Number, sComponent?: String) -> Boolean","!category":"function"},"Logger":"jQuery.sap.log.Logger_obj","info":{"!description":"Creates a new info-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"},"!description":"A Logging API for JavaScript.\n\nProvides methods to manage a client-side log and to create entries in it. Each of the logging methods\n{@link jQuery.sap.log.#debug}, {@link jQuery.sap.log.#info}, {@link jQuery.sap.log.#warning},\n{@link jQuery.sap.log.#error} and {@link jQuery.sap.log.#fatal} creates and records a log entry,\ncontaining a timestamp, a log level, a message with details and a component info.\nThe log level will be one of {@link jQuery.sap.log.Level} and equals the name of the concrete logging method.\n\nBy using the {@link jQuery.sap.log#setLevel} method, consumers can determine the least important\nlog level which should be recorded. Less important entries will be filtered out. (Note that higher numeric\nvalues represent less important levels). The initially set level depends on the mode that UI5 is running in.\nWhen the optimized sources are executed, the default level will be {@link jQuery.sap.log.Level.ERROR}.\nFor normal (debug sources), the default level is {@link jQuery.sap.log.Level.DEBUG}.\n\nAll logging methods allow to specify a <b>component<\/b>. These components are simple strings and\ndon't have a special meaning to the UI5 framework. However they can be used to semantically group\nlog entries that belong to the same software component (or feature). There are two APIs that help\nto manage logging for such a component. With <code>{@link jQuery.sap.log.getLogger}(sComponent)<\/code>,\none can retrieve a logger that automatically adds the given <code>sComponent<\/code> as component\nparameter to each log entry, if no other component is specified. Typically, JavaScript code will\nretrieve such a logger once during startup and reuse it for the rest of its lifecycle.\nSecond, the {@link jQuery.sap.log.Logger#setLevel}(iLevel, sComponent) method allows to set the log level\nfor a specific component only. This allows a more fine granular control about the created logging entries.\n{@link jQuery.sap.log.Logger.getLevel} allows to retrieve the currently effective log level for a given\ncomponent.\n\n{@link jQuery.sap.log#getLog} returns an array of the currently collected log entries.\n\nFurthermore, a listener can be registered to the log. It will be notified whenever a new entry\nis added to the log. The listener can be used for displaying log entries in a separate page area,\nor for sending it to some external target (server).","addLogListener":{"!description":"Allows to add a new LogListener that will be notified for new log entries.\nThe given object must provide method <code>onLogEntry<\/code> and can also be informed\nabout <code>onDetachFromLog<\/code> and <code>onAttachToLog<\/code>","!type":"fn(oListener: Object) -> jQuery.sap.log","!category":"function"},"!category":"namespace","Level":"jQuery.sap.log.Level","getLevel":{"!description":"Returns the log level currently effective for the given component.\nIf no component is given or when no level has been configured for a\ngiven component, the log level for the default component of this logger is returned.","!type":"fn(sComponent?: String) -> Number","!category":"function"},"warning":{"!description":"Creates a new warning-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function"}},"sap.ui.model.odata.type.Boolean":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Boolean<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>boolean<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the given\nconstraints.","!type":"fn(bValue: Boolean)","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"formatValue":{"!description":"Formats the given boolean value to the given target type.","!type":"fn(bValue: Boolean, sTargetType: String) -> Boolean | String","!category":"function"},"!category":"class","parseValue":{"!description":"Parses the given value from the given type to a boolean.","!type":"fn(vValue: Boolean | String, sSourceType: String) -> Boolean","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Boolean.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.ODataType"},"sap.ui.core.Toolbar":{"!description":"\n\tMarker interface for toolbar controls.","!category":"static class"},"sap.ui.core.LayoutData":{"!description":"A layout data base type.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.LayoutData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.core.LayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.LayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.LayoutData"},"sap.ui.core.VariantLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.VariantLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.VariantLayoutData"},"sap.ui.model.analytics.odata4analytics.DimensionAttribute_obj":{"!type":"fn(oQueryResult: sap.ui.model.analytics.odata4analytics.QueryResult, oProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.DimensionAttribute"},"sap.ui.core.RenderManager":{"addClass":{"!description":"Adds a class to the class collection if the name is not empty or null.\nThe class collection is flushed if it is written to the buffer using {@link #writeClasses}","!type":"fn(sName: String) -> sap.ui.core.RenderManager","!category":"function"},"writeAttributeEscaped":{"!description":"Writes the attribute and its value into the HTML\n\nThe value is properly escaped to avoid XSS attacks.","!type":"fn(sName: String, vValue: Object) -> sap.ui.core.RenderManager","!category":"function"},"renderControl":{"!description":"Turns the given control into its HTML representation and appends it to the\nrendering buffer.\n\nIf the given control is undefined or null, then nothing is rendered.","!type":"fn(oControl: sap.ui.core.Control)","!category":"function"},"writeClasses":{"!description":"Writes and flushes the class collection (all CSS classes added by \"addClass()\" since the last flush).\nAlso writes the custom style classes added by the application with \"addStyleClass(...)\". Custom classes are\nadded by default from the currently rendered control. If an oElement is given, this Element's custom style\nclasses are added instead. If oElement === false, no custom style classes are added.","!type":"fn(oElement?: sap.ui.core.Element | Boolean) -> sap.ui.core.RenderManager","!category":"function"},"destroy":{"!description":"Cleans up the resources associated with this instance.\nAfter the instance has been destroyed, it must not be used anymore.\nApplications should call this function if they don't need the instance any longer.","!type":"fn()","!category":"function"},"createInvisiblePlaceholderId":{"!description":"Creates the ID to be used for the invisible Placeholder DOM element.\nThis method can be used to get direct access to the placeholder DOM element.\nAlso statically available as RenderManager.createInvisiblePlaceholderId()","!type":"fn(oElement: sap.ui.core.Element) -> String","!category":"function"},"writeAttribute":{"!description":"Writes the attribute and its value into the HTML","!type":"fn(sName: String, value: String | Number | Boolean) -> sap.ui.core.RenderManager","!category":"function"},"addStyle":{"!description":"Adds a style property to the style collection if the value is not empty or null\nThe style collection is flushed if it is written to the buffer using {@link #writeStyle}","!type":"fn(sName: String, value: String | Number | Number) -> sap.ui.core.RenderManager","!category":"function"},"writeAcceleratorKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not implemented - DO NOT USE<br>undefined","!type":"fn() -> sap.ui.core.RenderManager","!category":"function"},"getHTML":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.15.0 Use <code>flush()<\/code> instead render content outside the rendering phase.<br>Renders the given {@link sap.ui.core.Control} and finally returns\nthe content of the rendering buffer.\nEnsures the buffer is restored to the state before calling this method.","!type":"fn(oControl: sap.ui.core.Control) -> String","!category":"function"},"!category":"class","write":{"!description":"Write the given texts to the buffer","!type":"fn(sText: String | Number) -> sap.ui.core.RenderManager","!category":"function"},"writeInvisiblePlaceholderData":{"!description":"Writes necessary invisible control/element placeholder data into the HTML.\n\nControls should only use this method if they can't live with the standard 'visible=false' implementation of the RenderManager which\nrenders dummy HTMLSpanElement for better re-rendering performance. Even though HTML5 error tolerance accepts this for most of the cases and\nthese dummy elements are not in the render tree of the Browser, controls may need to generate a valid and semantic HTML output when the\nrendered HTMLSpanElement is not an allowed element(e.g. &lt;span&gt; element within the &lt;tr&gt; or &lt;li&gt; group).\n\nThe caller needs to start an opening HTML tag, then call this method, then complete the opening and closing tag.\n<pre>\noRenderManager.write(\"<tr\");\noRenderManager.writeInvisiblePlaceholderData(oControl);\noRenderManager.write(\"><\/tr>\");\n<\/pre>","!type":"fn(oElement: sap.ui.core.Element) -> sap.ui.core.RenderManager","!category":"function"},"writeStyles":{"!description":"Writes and flushes the style collection","!type":"fn() -> sap.ui.core.RenderManager","!category":"function"},"preserveContent":{"!description":"Collects descendants of the given root node that need to be preserved before the root node\nis wiped out. The \"to-be-preserved\" nodes are moved to a special, hidden 'preserve' area.\n\nA node is declared \"to-be-preserved\" when it has the <code>data-sap-ui-preserve<\/code>\nattribute set. When the optional parameter <code>bPreserveNodesWithId<\/code> is set to true,\nthen nodes with an id are preserved as well and their <code>data-sap-ui-preserve<\/code> attribute\nis set automatically. This option is used by UIAreas when they render for the first time and\nsimplifies the handling of predefined HTML content in a web page.\n\nThe \"to-be-preserved\" nodes are searched with a depth first search and moved to the 'preserve'\narea in the order that they are found. So for direct siblings the order should be stable.","!type":"fn(oRootNode: Element, bPreserveRoot?: Boolean, bPreserveNodesWithId?: Boolean)","!category":"function"},"writeEscaped":{"!description":"Escape text for HTML and write it to the buffer","!type":"fn(sText: String, bLineBreaks: Boolean) -> sap.ui.core.RenderManager","!category":"function"},"findPreservedContent":{"!description":"Searches \"to-be-preserved\" nodes for the given control id.","!type":"fn(sId: String) -> jQuery","!category":"function"},"writeAccessibilityState":{"!description":"Writes the accessibility state (see WAI-ARIA specification) of the provided element into the HTML\nbased on the element's properties and associations.\n\nThe ARIA properties are only written when the accessibility feature is activated in the UI5 configuration.\n\nThe following properties/values to ARIA attribute mappings are done (if the element does have such properties):\n<code>editable===false<\/code> => <code>aria-readonly=\"true\"<\/code>\n<code>enabled===false<\/code> => <code>aria-disabled=\"true\"<\/code>\n<code>visible===false<\/code> => <code>aria-hidden=\"true\"<\/code>\n<code>required===true<\/code> => <code>aria-required=\"true\"<\/code>\n<code>selected===true<\/code> => <code>aria-selected=\"true\"<\/code>\n<code>checked===true<\/code> => <code>aria-checked=\"true\"<\/code>\n\nIn case of the required attribute also the Label controls which referencing the given element in their 'for' relation\nare taken into account to compute the <code>aria-required<\/code> attribute.\n\nAdditionally the association <code>ariaDescribedBy<\/code> and <code>ariaLabelledBy<\/code> are used to write\nthe id lists of the ARIA attributes <code>aria-describedby<\/code> and <code>aria-labelledby<\/code>.\n\nLabel controls which referencing the given element in their 'for' relation are automatically added to the\n<code>aria-labelledby<\/code> attributes.\n\nNote: This function is only a heuristic of a control property to ARIA attribute mapping. Control developers\nhave to check whether it fullfills their requirements. In case of problems (for example the RadioButton has a\n<code>selected<\/code> property but must provide an <code>aria-checked<\/code> attribute) the auto-generated\nresult of this function can be influenced via the parameter <code>mProps<\/code> as described below.\n\nThe parameter <code>mProps<\/code> can be used to either provide additional attributes which should be added and/or\nto avoid the automatic generation of single ARIA attributes. The 'aria-' prefix will be prepended automatically to the keys\n(Exception: Attribute 'role' does not get the prefix 'aria-').\n\nExamples:\n<code>{hidden : true}<\/code> results in <code>aria-hidden=\"true\"<\/code> independent of the precense or absence of\nthe visibility property.\n<code>{hidden : null}<\/code> ensures that no <code>aria-hidden<\/code> attribute is written independent of the precense\nor absence of the visibility property.\nThe function behaves in the same way for the associations <code>ariaDescribedBy<\/code> and <code>ariaLabelledBy<\/code>.\nTo append additional values to the auto-generated <code>aria-describedby<\/code> and <code>aria-labelledby<\/code> attributes\nthe following format can be used:\n<code>{describedby : {value: \"id1 id2\", append: true}}<\/code> => <code>aria-describedby=\"ida idb id1 id2\"<\/code> (assuming that \"ida idb\"\nis the auto-generated part based on the association <code>ariaDescribedBy<\/code>).","!type":"fn(oElement?: sap.ui.core.Element, mProps?: Object) -> sap.ui.core.RenderManager","!category":"function"},"getPreserveAreaRef":{"!description":"Returns the hidden area reference belonging to this window instance.","!type":"fn() -> Element","!category":"function"},"render":{"!description":"Renders the given control to the provided DOMNode.\n\nIf the control is already rendered in the provided DOMNode the DOM of the control is replaced. If the control\nis already rendered somewhere else the current DOM of the control is removed and the new DOM is appended\nto the provided DOMNode.\n\nThis function must not be called within control renderers.","!type":"fn(oControl: sap.ui.core.Control, oTargetDomNode: Element)","!category":"function"},"getRenderer":{"!description":"Returns the renderer class for a given control instance","!type":"fn(oControl: sap.ui.core.Control, oControl: sap.ui.core.Control) -> fn()","!category":"function"},"cleanupControlWithoutRendering":{"!description":"Cleans up the rendering state of the given control with rendering it.\n\nA control is responsible for the rendering of all its child controls.\nBut in some cases it makes sense that a control does not render all its\nchildren based on a filter condition. For example a Carousel control only renders\nthe current visible parts (and maybe some parts before and after the visible area)\nfor performance reasons.\nIf a child was rendered but should not be rendered anymore because the filter condition\ndoes not apply anymore this child must be cleaned up correctly (e.g deregistering eventhandlers, ...).\n\nThe following example shows how renderControl and cleanupControlWithoutRendering should\nbe used:\n\nrender = function(rm, ctrl){\n  //...\n  var aAggregatedControls = //...\n  for(var i=0; i<aAgrregatedControls.length; i++){\n  \tif(//... some filter expression){\n        rm.renderControl(aAggregatedControls[i]);\n     }else{\n        rm.cleanupControlWithoutRendering(aAggregatedControls[i]);\n     }\n  }\n  //...\n}\n\nNote:\nThe method does not remove DOM of the given control. The callee of this method has to take over the\nresponsibility to cleanup the DOM of the control afterwards.\nFor parents which are rendered with the normal mechanism as shown in the example above this requirement\nis fulfilled, because the control is not added to the rendering buffer (renderControl is not called) and\nthe DOM is replaced when the rendering cycle is finalized.","!type":"fn(oControl: sap.ui.core.Control)","!category":"function"},"flush":{"!description":"Renders the content of the rendering buffer into the provided DOMNode.\n\nThis function must not be called within control renderers.\n\nUsage:\n<pre>\n// Create a new instance of the RenderManager\nvar rm = sap.ui.getCore().createRenderManager();\n// Use the writer API to fill the buffers\nrm.write(...);\nrm.renderControl(oControl);\nrm.write(...);\n...\n// Finally flush the buffer into the provided DOM node (The current content is removed)\nrm.flush(oDomNode);\n// If the instance is not needed anymore, destroy it\nrm.destroy();\n<\/pre>","!type":"fn(oTargetDomNode: Element, bDoNotPreserve: Boolean, vInsert: Boolean | Number)","!category":"function"},"!description":"RenderManager that will take care for rendering Controls.\n\nThe RenderManager will be available from the sap.ui.core.Core instance (available via <code>sap.ui.getCore()<\/code>).<br/>It\ncan be used to render Controls and Control-Trees.\n\nThe convention for renderers belonging to some controls is the following:\n<ul>\n<li>for a Control e.g. <code>sap.ui.controls.InputField<\/code> there shall be <\/li>\n<li>a renderer named <code>sap.ui.controls.InputFieldRenderer<\/code><\/li>\n<ul>","writeElementData":{"!description":"Writes the elements data into the HTML.\nElement Data consists at least of the id of a element","!type":"fn(oElement: sap.ui.core.Element) -> sap.ui.core.RenderManager","!category":"function"},"writeControlData":{"!description":"Writes the controls data into the HTML.\nControl Data consists at least of the id of a control","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.core.RenderManager","!category":"function"},"translate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not implemented - DO NOT USE<br>undefined","!type":"fn(sKey: String)","!category":"function"},"getConfiguration":{"!description":"Returns the configuration object\nShortcut for <code>sap.ui.getCore().getConfiguration()<\/code>","!type":"fn() -> sap.ui.core.Configuration","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.RenderManager.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.odata4analytics.Parameterization":{"!description":"Representation of an entity type annotated with\n       sap:semantics=\"parameters\".","getAllParameters":{"!description":"Get all parameters included in this parameterization","!type":"fn() -> Object","!category":"function"},"getEntityType":{"!description":"Get the entity type defining the type of this query result in the OData\nmodel","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntityType","!category":"function"},"getNavigationPropertyToQueryResult":{"!description":"Get navigation property to query result","!type":"fn() -> sap.ui.model.analytics.odata4analytics.QueryResult","!category":"function"},"getName":{"!description":"Get the name of the parameter","!type":"fn() -> String","!category":"function"},"getAllParameterNames":{"!description":"Get the names of all parameters part of the parameterization","!type":"fn() -> array(string)","!category":"function"},"!category":"class","findParameterByName":{"!description":"Find parameter by name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Parameter","!category":"function"},"getEntitySet":{"!description":"Get the entity set representing this query result in the OData model","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntitySet","!category":"function"},"!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI":{"!description":"Handle to an OData model by the URI pointing to it.","!category":"class","!proto":"sap.ui.base.Object"},"jQuery.sap.Version_obj":{"!type":"fn(vMajor: [Number | String | Object], iMinor: Number, iPatch: Number, sSuffix: String)","prototype":"jQuery.sap.Version"},"sap.ui.model.type.Boolean":{"!description":"This class represents boolean simple types.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Boolean.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.SimpleType"},"sap.ui.model.odata.v2.ODataModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataModel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sServiceUrl?: String, mParameters?: Object)","prototype":"sap.ui.model.odata.v2.ODataModel"},"sap.ui.model.odata.type.SByte":{"!description":"This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.SByte<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as a\n<code>number<\/code>.","getRange":{"!description":"Returns the type's supported range as object with properties <code>minimum<\/code> and\n<code>maximum<\/code>.","!type":"fn() -> Object","!category":"function"},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.SByte.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.model.odata.type.Int"}},"!name":"sap.ui.core","mtproduction_maven_plugin_version":"1.2.0"}
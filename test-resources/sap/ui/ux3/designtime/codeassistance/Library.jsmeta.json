{"!define":{"sap.ui.ux3.NotificationBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NotificationBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.NotificationBar"},"sap.ui.ux3.ThingGroup":{"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.ThingGroup","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent of Group","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getActions":{"!description":"Gets content of aggregation <code>actions<\/code>.\n\nActions of the groups content","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"insertAction":{"!description":"Inserts a action into the aggregation named <code>actions<\/code>.","!type":"fn(oAction: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingGroup","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.ux3.ThingGroup","!category":"function"},"setColspan":{"!description":"Sets a new value for property <code>colspan<\/code>.\n\nIf Group is used in a column layout the groups spans the all columns if set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bColspan: Boolean) -> sap.ui.ux3.ThingGroup","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.ThingGroup","!category":"function"},"!description":"Thing Group Area","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle of Group\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.ux3.ThingGroup","!category":"function"},"removeAllActions":{"!description":"Removes all the controls in the aggregation named <code>actions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"destroyActions":{"!description":"Destroys all the actions in the aggregation\nnamed <code>actions<\/code>.","!type":"fn() -> sap.ui.ux3.ThingGroup","!category":"function"},"!category":"class","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle of Group","!type":"fn() -> String","!category":"function"},"addAction":{"!description":"Adds some action into the aggregation named <code>actions<\/code>.","!type":"fn(oAction: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","!category":"function"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation named <code>actions<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAction: sap.ui.ux3.ThingGroup) -> Number","!category":"function"},"removeAction":{"!description":"Removes a action from the aggregation named <code>actions<\/code>.","!type":"fn(vAction: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","!category":"function"},"getColspan":{"!description":"Gets current value of property <code>colspan<\/code>.\n\nIf Group is used in a column layout the groups spans the all columns if set to true.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ThingGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.ExactAttribute":{"setSupplyActive":{"!description":"Sets a new value for property <code>supplyActive<\/code>.\n\nThe supplyAttributes event is only fired if supplyActive has value true which is the default. After firing the event, the attribute is automatically set to false.\nThe idea is that a supply function is called only once when the data is requested. To enable the event again it is possible to manually set the attribute back to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bSupplyActive: Boolean) -> sap.ui.ux3.ExactAttribute","!category":"function"},"getAutoActivateSupply":{"!description":"Gets current value of property <code>autoActivateSupply<\/code>.\n\nIf you want the supply function to be called on every select, you can set the autoActivateSupply attribute to true. In this case, supplyActive is automatically\nset to true on every unselect.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getShowSubAttributesIndicator_Computed":{"!description":"See attribute showSubAttributesIndicator","!type":"fn()","!category":"function"},"setShowSubAttributesIndicator":{"!description":"Sets a new value for property <code>showSubAttributesIndicator<\/code>.\n\nSpecifies whether the attribute shall have sub values for visual purposes.\nThe indicator which is a little arrow beside an attribute in the list is computed automatically\n(getShowSubAttributesIndicator_Computed() of sap.ui.ux3.ExactAttribute).\nIn the case that a supply function is attached, and the supplyActive attribute has value 'true',\nthen the Exact pattern needs a hint if sub attributes are available. The showSubAttributesIndicator attribute is\nconsidered then and has to be maintained. If the back-end does not support count-calls, for example,\nshowSubAttributesIndicator should be set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSubAttributesIndicator: Boolean) -> sap.ui.ux3.ExactAttribute","!category":"function"},"getSupplyActive":{"!description":"Gets current value of property <code>supplyActive<\/code>.\n\nThe supplyAttributes event is only fired if supplyActive has value true which is the default. After firing the event, the attribute is automatically set to false.\nThe idea is that a supply function is called only once when the data is requested. To enable the event again it is possible to manually set the attribute back to true.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe attribute name\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.ux3.ExactAttribute","!category":"function"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe attribute name","!type":"fn() -> String","!category":"function"},"insertAttribute":{"!description":"Inserts a attribute into the aggregation named <code>attributes<\/code>.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute, iIndex: Number) -> sap.ui.ux3.ExactAttribute","!category":"function"},"setTooltip":{"!type":"fn(oTooltip: String | sap.ui.core.TooltipBase)","!category":"function"},"getAdditionalData":{"!description":"Gets current value of property <code>additionalData<\/code>.\n\nAn example for additional data are database keys","!type":"fn() -> Object","!category":"function"},"!category":"class","destroyAttributes":{"!description":"Destroys all the attributes in the aggregation\nnamed <code>attributes<\/code>.","!type":"fn() -> sap.ui.ux3.ExactAttribute","!category":"function"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSpecifies the width of the corresponding list in pixels. The value must be between 70 and 500.\n\nDefault value is <code>168<\/code>.","!type":"fn() -> Number","!category":"function"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSpecifies the width of the corresponding list in pixels. The value must be between 70 and 500.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>168<\/code>.","!type":"fn(iWidth: Number) -> sap.ui.ux3.ExactAttribute","!category":"function"},"attachSupplyAttributes":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'supplyAttributes' event of this <code>sap.ui.ux3.ExactAttribute<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ExactAttribute<\/code> itself.\n\nA supply function is a handler which is attached to the supplyAttributes event. The event is fired when the corresponding ExactAttribute is selected, it was already selected when a handler is attached or function getAttributes() is called.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactAttribute","!category":"function"},"removeAllAttributes":{"!description":"Removes all the controls in the aggregation named <code>attributes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ExactAttribute]","!category":"function"},"fireSupplyAttributes":{"!description":"Fires event supplyAttributes to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'attribute' of type <code>sap.ui.ux3.ExactAttribute<\/code>The ExactAttribute<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ExactAttribute","!category":"function"},"setProperty":{"!type":"fn(sPropertyName: String, oValue: Object, bSuppressRerendering: Boolean)","!category":"function"},"getListOrder":{"!description":"Gets current value of property <code>listOrder<\/code>.\n\nThe order how the sublists of this attribute should be displayed.\n\nDefault value is <code>Select<\/code>.","!type":"fn() -> sap.ui.ux3.ExactOrder","!category":"function"},"scrollTo":{"!description":"Scrolls the corresponding list of this attribute until the given direct child attribute is visible. If the corresponding list is not yet visible the call is buffered until the list is available.","!type":"fn(oOAttribute: sap.ui.ux3.ExactAttribute)","!category":"function"},"setAutoActivateSupply":{"!description":"Sets a new value for property <code>autoActivateSupply<\/code>.\n\nIf you want the supply function to be called on every select, you can set the autoActivateSupply attribute to true. In this case, supplyActive is automatically\nset to true on every unselect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAutoActivateSupply: Boolean) -> sap.ui.ux3.ExactAttribute","!category":"function"},"!description":"An element for defining attributes and sub-attributes used within the Exact pattern.","detachSupplyAttributes":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'supplyAttributes' event of this <code>sap.ui.ux3.ExactAttribute<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ExactAttribute","!category":"function"},"indexOfAttribute":{"!description":"Checks for the provided <code>sap.ui.ux3.ExactAttribute<\/code> in the aggregation named <code>attributes<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> Number","!category":"function"},"removeAttribute":{"!description":"Removes a attribute from the aggregation named <code>attributes<\/code>.","!type":"fn(vAttribute: Number | String | sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactAttribute","!category":"function"},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nSpecifies whether the attribute shall be selected","!type":"fn() -> Boolean","!category":"function"},"setListOrder":{"!description":"Sets a new value for property <code>listOrder<\/code>.\n\nThe order how the sublists of this attribute should be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Select<\/code>.","!type":"fn(sListOrder: sap.ui.ux3.ExactOrder) -> sap.ui.ux3.ExactAttribute","!category":"function"},"getAttributes":{"!description":"Gets content of aggregation <code>attributes<\/code>.\n\nValues (sub attributes) of this attribute","!type":"fn() -> [sap.ui.ux3.ExactAttribute]","!category":"function"},"setAdditionalData":{"!description":"Sets a new value for property <code>additionalData<\/code>.\n\nAn example for additional data are database keys\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oAdditionalData: Object) -> sap.ui.ux3.ExactAttribute","!category":"function"},"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nSpecifies whether the attribute shall be selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bSelected: Boolean) -> sap.ui.ux3.ExactAttribute","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ExactAttribute.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"addAttribute":{"!description":"Adds some attribute into the aggregation named <code>attributes<\/code>.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactAttribute","!category":"function"},"!proto":"sap.ui.core.Element","getShowSubAttributesIndicator":{"!description":"Gets current value of property <code>showSubAttributesIndicator<\/code>.\n\nSpecifies whether the attribute shall have sub values for visual purposes.\nThe indicator which is a little arrow beside an attribute in the list is computed automatically\n(getShowSubAttributesIndicator_Computed() of sap.ui.ux3.ExactAttribute).\nIn the case that a supply function is attached, and the supplyActive attribute has value 'true',\nthen the Exact pattern needs a hint if sub attributes are available. The showSubAttributesIndicator attribute is\nconsidered then and has to be maintained. If the back-end does not support count-calls, for example,\nshowSubAttributesIndicator should be set to true.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"}},"sap.ui.ux3.ExactAttribute_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactAttribute with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ExactAttribute"},"sap.ui.ux3.CollectionInspector":{"openSidebar":{"!description":"Opens the sidebar","!type":"fn()","!category":"function"},"addCollection":{"!description":"Adds some collection <code>oCollection<\/code> \nto the aggregation named <code>collections<\/code>.","!type":"fn(oCollection: sap.ui.ux3.Collection) -> sap.ui.ux3.CollectionInspector","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"detachEditCollection":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'editCollection' event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.CollectionInspector","!category":"function"},"detachCollectionSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'collectionSelected' event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.CollectionInspector","!category":"function"},"removeContent":{"!description":"Removes an content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"destroyCollections":{"!description":"Destroys the collection aggregation","!type":"fn() -> sap.ui.ux3.CollectionInspector","!category":"function"},"getSelectedCollection":{"!description":"ID of the element which is the current target of the <code>selectedCollection<\/code> association, or <code>null<\/code>.\n\nCollection which is currently selected","!type":"fn() -> sap.ui.ux3.Collection","!category":"function"},"setSelectedCollection":{"!description":"Sets the associated <code>selectedCollection<\/code>.","!type":"fn(oSelectedCollection: sap.ui.ux3.Collection) -> sap.ui.ux3.CollectionInspector","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation \nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.ux3.CollectionInspector","!category":"function"},"indexOfCollection":{"!description":"Checks for the provided <code>sap.ui.ux3.Collection<\/code> in the aggregation named <code>collections<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oCollection: sap.ui.ux3.Collection) -> Number","!category":"function"},"!category":"class","getEditButton":{"!description":"Return the edit button","!type":"fn()","!category":"function"},"getFitParent":{"!description":"Gets current value of property <code>fitParent<\/code>.\n\nIf set to true, control will fit parents content area\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireEditCollection":{"!description":"Fires event editCollection to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.CollectionInspector","!category":"function"},"attachEditCollection":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'editCollection' event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.CollectionInspector<\/code> itself.\n\nFires when the edit button is clicked","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","!category":"function"},"attachItemSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'itemSelectionChanged' event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.CollectionInspector<\/code> itself.\n\nFires when an item in a collection is selected","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","!category":"function"},"setSidebarVisible":{"!description":"Sets a new value for property <code>sidebarVisible<\/code>.\n\nDefines if the list of collection items is visible on the left\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bSidebarVisible: Boolean) -> sap.ui.ux3.CollectionInspector","!category":"function"},"addContent":{"!description":"Adds some content <code>oContent<\/code> \nto the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.CollectionInspector","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.<br/>\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nAll controls that are currently displayed","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setFitParent":{"!description":"Sets a new value for property <code>fitParent<\/code>.\n\nIf set to true, control will fit parents content area\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFitParent: Boolean) -> sap.ui.ux3.CollectionInspector","!category":"function"},"getSidebarVisible":{"!description":"Gets current value of property <code>sidebarVisible<\/code>.\n\nDefines if the list of collection items is visible on the left\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireCollectionSelected":{"!description":"Fires event collectionSelected to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.CollectionInspector","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.CollectionInspector","!category":"function"},"closeSidebar":{"!description":"Closes the siedebar","!type":"fn()","!category":"function"},"!description":"CollectionInspector","removeCollection":{"!description":"Removes an collection from the aggregation named <code>collections<\/code>.","!type":"fn(vCollection: Number | String | sap.ui.ux3.Collection) -> sap.ui.ux3.Collection","!category":"function"},"removeAllCollections":{"!description":"Removes all the controls in the aggregation named <code>collections<\/code>.<br/>\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.Collection]","!category":"function"},"attachCollectionSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'collectionSelected' event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.CollectionInspector<\/code> itself.\n\nEvent is fired if user selects a collection","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","!category":"function"},"insertCollection":{"!description":"Inserts a collection into the aggregation named <code>collections<\/code>.","!type":"fn(oCollection: sap.ui.ux3.Collection, iIndex: Number) -> sap.ui.ux3.CollectionInspector","!category":"function"},"detachItemSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'itemSelectionChanged' event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.CollectionInspector","!category":"function"},"getCollections":{"!description":"Gets content of aggregation <code>collections<\/code>.\n\nCollections which are displayed in the COllectionInspector","!type":"fn() -> [sap.ui.ux3.Collection]","!category":"function"},"fireItemSelectionChanged":{"!description":"Fires event itemSelectionChanged to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.CollectionInspector","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.CollectionInspector.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.Notifier_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Notifier with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Notifier"},"sap.ui.ux3.Feeder":{"getPlaceholderText":{"!description":"Gets current value of property <code>placeholderText<\/code>.\n\nThis property could be used for costum placeholder. If it is not set, the default text is used.","!type":"fn() -> String","!category":"function"},"getThumbnailSrc":{"!description":"Gets current value of property <code>thumbnailSrc<\/code>.\n\nURL to the thumb nail image\nThis property is optional if the feeder is a sub-control of a feed or a feedChunk control. In this case the value of the feed or feddChunk control is used if it's not set. So it must be only set once on the feed or feedChunk control.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nType and size of the Feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Large<\/code>.","!type":"fn(sType: sap.ui.ux3.FeederType) -> sap.ui.ux3.Feeder","!category":"function"},"detachSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'submit' event of this <code>sap.ui.ux3.Feeder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Feeder","!category":"function"},"setPlaceholderText":{"!description":"Sets a new value for property <code>placeholderText<\/code>.\n\nThis property could be used for costum placeholder. If it is not set, the default text is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPlaceholderText: String) -> sap.ui.ux3.Feeder","!category":"function"},"attachSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'submit' event of this <code>sap.ui.ux3.Feeder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Feeder<\/code> itself.\n\nEvent is fired when the entered text is submitted","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feeder","!category":"function"},"fireSubmit":{"!description":"Fires event submit to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'text' of type <code>string<\/code>The text that is submitted<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Feeder","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe text for the Feeder. @References are supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.ux3.Feeder","!category":"function"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe text for the Feeder. @References are supported.","!type":"fn() -> String","!category":"function"},"getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nType and size of the Feeder\n\nDefault value is <code>Large<\/code>.","!type":"fn() -> sap.ui.ux3.FeederType","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","setThumbnailSrc":{"!description":"Sets a new value for property <code>thumbnailSrc<\/code>.\n\nURL to the thumb nail image\nThis property is optional if the feeder is a sub-control of a feed or a feedChunk control. In this case the value of the feed or feddChunk control is used if it's not set. So it must be only set once on the feed or feedChunk control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sThumbnailSrc: sap.ui.core.URI) -> sap.ui.ux3.Feeder","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Feeder.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.Feed_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Feed with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Feed"},"sap.ui.ux3.NotificationBarStatus":{"Default":{"!description":"Default height for the bar","!type":"String","!category":"enum"},"!description":"This entries are used to set the visibility status of a NotificationBar","!category":"static class","Max":{"!description":"Bar should be maximized","!type":"String","!category":"enum"},"None":{"!description":"Bar should not be visible","!type":"String","!category":"enum"},"Min":{"!description":"Bar should be minimized","!type":"String","!category":"enum"}},"sap.ui.ux3.FacetFilter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FacetFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.FacetFilter"},"sap.ui.ux3.ExactBrowser_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactBrowser with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ExactBrowser"},"sap.ui":{"!category":"namespace","ux3":"sap.ui.ux3"},"sap.ui.ux3.NavigationBar":{"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","!category":"function"},"fireSelect":{"!description":"Fires event select to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\n\nExpects the following event parameters:\n<ul>\n<li>'itemId' of type <code>string<\/code>The ID of the newly selected NavigationItem.<\/li>\n<li>'item' of type <code>sap.ui.ux3.NavigationItem<\/code>The newly selected NavigationItem.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"removeAllAssociatedItems":{"!description":"Removes all the controls in the association named <code>associatedItems<\/code>.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.ux3.NavigationBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.NavigationBar","!category":"function"},"addAssociatedItem":{"!description":"Adds some associatedItem into the association named <code>associatedItems<\/code>.","!type":"fn(vAssociatedItem: String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationBar","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationBar","!category":"function"},"getSelectedItem":{"!description":"ID of the element which is the current target of the <code>selectedItem<\/code> association, or <code>null<\/code>.\n\nThe selected NavigationItem.","!type":"fn() -> sap.ui.ux3.NavigationItem","!category":"function"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.ux3.NavigationBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.NavigationBar<\/code> itself.\n\nEvent is fired when an item is selected by the user","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NavigationBar","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.ux3.NavigationItem) -> Number","!category":"function"},"setAssociatedItems":{"!description":"Replaces the currently associated items with the ones in the given array","!type":"fn(aItems: [sap.ui.ux3.NavigationItem]) -> sap.ui.ux3.NavigationBar","!category":"function"},"removeAssociatedItem":{"!description":"Removes an associatedItem from the association named <code>associatedItems<\/code>.","!type":"fn(vAssociatedItem: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","!category":"function"},"setSelectedItem":{"!description":"Sets the associated <code>selectedItem<\/code>.","!type":"fn(oSelectedItem: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationBar","!category":"function"},"!description":"Provides enhanced navigation capabilities and is the parent control of NavigationItem. It is displayed in the form of a horizontal line\nwith switching markers depending on the currently selected item. The size of an item which is currently chosen by the user is enlarged. In the case\nthat a large number of items are defined for the bar, this is made transparent to the user by showing symbols for scrolling options (forwards and backwards)\nto see the next or previous items.","getAssociatedItems":{"!description":"Returns array of IDs of the elements which are the current targets of the <code>associatedItems<\/code> association.\n\nThis association is ignored as long as the items aggregation is used; and supposed to be used alternatively when the items should be aggregated by other\nentities.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nIf the navigation items need to have a different parent than the NavigationBar, alternatively the associatedItems association can be used.\nThe NavigationBar follows the approach to use the items aggregation. If this aggregation is empty, associatedItems is used.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"isSelectedItemValid":{"!description":"Returns whether there is a selectedItem set which is actually present in the items aggregation; or, if the aggregation is empty, in the associatedItems association.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.ux3.NavigationBar","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"getToplevelVariant":{"!description":"Gets current value of property <code>toplevelVariant<\/code>.\n\nDefines whether the navigation bar shall have top-level appearance\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setToplevelVariant":{"!description":"Sets a new value for property <code>toplevelVariant<\/code>.\n\nDefines whether the navigation bar shall have top-level appearance\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bToplevelVariant: Boolean) -> sap.ui.ux3.NavigationBar","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.NavigationBar","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.NavigationBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.FacetFilterList":{"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem","!category":"function"},"fireSelect":{"!description":"Fires event select to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>Id of the FacetFilterList taht fires the event.<\/li>\n<li>'selectedIndices' of type <code>int[]<\/code>Array of selected Indices.<\/li>\n<li>'selectedItems' of type <code>sap.ui.core.ListItem[]<\/code>Array of selected Items.<\/li>\n<li>'all' of type <code>boolean<\/code>If it is true, then Item All is selected. That means all items in the list are selected - no filter is set.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FacetFilterList","!category":"function"},"getShowCounter":{"!description":"Gets current value of property <code>showCounter<\/code>.\n\nSpecifies whether the counter for all entries is shown.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.ux3.FacetFilterList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FacetFilterList","!category":"function"},"setShowCounter":{"!description":"Sets a new value for property <code>showCounter<\/code>.\n\nSpecifies whether the counter for all entries is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowCounter: Boolean) -> sap.ui.ux3.FacetFilterList","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.ListItem) -> sap.ui.ux3.FacetFilterList","!category":"function"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.ux3.FacetFilterList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FacetFilterList<\/code> itself.\n\nOn Select event.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FacetFilterList","!category":"function"},"setDisplaySecondaryValues":{"!description":"Sets a new value for property <code>displaySecondaryValues<\/code>.\n\nSpecifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplaySecondaryValues: Boolean) -> sap.ui.ux3.FacetFilterList","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.ListItem) -> Number","!category":"function"},"getDisplaySecondaryValues":{"!description":"Gets current value of property <code>displaySecondaryValues<\/code>.\n\nSpecifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"List to be used with the FacetFilter control. The control is not intended to be used stand alone.","getMultiSelect":{"!description":"Gets current value of property <code>multiSelect<\/code>.\n\nSpecifies whether multiple or single selection is used.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nThe title of this list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.ux3.FacetFilterList","!category":"function"},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe filter values that are presented as a list.","!type":"fn() -> [sap.ui.core.ListItem]","!category":"function"},"setSelectedKeys":{"!description":"Sets a new value for property <code>selectedKeys<\/code>.\n\nArray of type string containing the selected keys.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSelectedKeys: [String]) -> sap.ui.ux3.FacetFilterList","!category":"function"},"!category":"class","destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.ux3.FacetFilterList","!category":"function"},"getSelectedKeys":{"!description":"Gets current value of property <code>selectedKeys<\/code>.\n\nArray of type string containing the selected keys.","!type":"fn() -> [String]","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.ListItem]","!category":"function"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nThe title of this list.","!type":"fn() -> String","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.ux3.FacetFilterList","!category":"function"},"setMultiSelect":{"!description":"Sets a new value for property <code>multiSelect<\/code>.\n\nSpecifies whether multiple or single selection is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bMultiSelect: Boolean) -> sap.ui.ux3.FacetFilterList","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.FacetFilterList.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.DataSetSimpleView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSetSimpleView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.DataSetSimpleView"},"sap.ui.ux3.ExactArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ExactArea"},"sap.ui.ux3.QuickView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.QuickView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.QuickView"},"sap.ui.ux3.FollowActionState":{"Default":{"!description":"default state","!type":"String","!category":"enum"},"Hold":{"!description":"hold state","!type":"String","!category":"enum"},"!description":"Defines the states of the follow action","Follow":{"!description":"follow state","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.ux3.ThingAction":{"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\ntext of action","!type":"fn() -> String","!category":"function"},"fireSelect":{"!description":"Fires event select to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>Id of selected action<\/li>\n<li>'action' of type <code>sap.ui.ux3.ThingAction<\/code>Selected Thing Action<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ThingAction","!category":"function"},"!description":"Thing Action for Swatch, QuickView, Thinginspector","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\naction enabled (true/false)\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\naction enabled (true/false)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.ux3.ThingAction","!category":"function"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.ux3.ThingAction<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ThingAction","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\ntext of action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.ux3.ThingAction","!category":"function"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.ux3.ThingAction<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ThingAction<\/code> itself.\n\nEvent will be fired when the action was triggered.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingAction","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ThingAction.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.ux3.ThingAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ThingAction"},"sap.ui.ux3.Shell":{"getDesignType":{"!description":"Gets current value of property <code>designType<\/code>.\n\nDefines which design type is to be used.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.ux3.ShellDesignType","!category":"function"},"setShowSearchTool":{"!description":"Sets a new value for property <code>showSearchTool<\/code>.\n\nWhether the \"Global Search\" tool should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSearchTool: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"getLogoutButtonTooltip":{"!description":"Gets current value of property <code>logoutButtonTooltip<\/code>.\n\nThe tooltip to be displayed for the Logout Button of the Shell. If not set, a text meaning \"Logout\" in the current language will be displayed.","!type":"fn() -> String","!category":"function"},"setShowTools":{"!description":"Sets a new value for property <code>showTools<\/code>.\n\nWhether the tool area should be displayed at all or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowTools: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"removeAllPaneContent":{"!description":"Removes all the controls in the aggregation named <code>paneContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setShowLogoutButton":{"!description":"Sets a new value for property <code>showLogoutButton<\/code>.\n\nWhether the Logoff button in the header should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowLogoutButton: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"destroyPaneContent":{"!description":"Destroys all the paneContent in the aggregation\nnamed <code>paneContent<\/code>.","!type":"fn() -> sap.ui.ux3.Shell","!category":"function"},"removeAllToolPopups":{"!description":"Removes all the controls in the aggregation named <code>toolPopups<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ToolPopup]","!category":"function"},"setAppTitle":{"!description":"Sets a new value for property <code>appTitle<\/code>.\n\nThe application title to appear in the left part of the header, usually a company and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAppTitle: String) -> sap.ui.ux3.Shell","!category":"function"},"detachFeedSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'feedSubmit' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Shell","!category":"function"},"initializePersonalization":{"!description":"Experimental method! Do not use!\n\nMakes Shell personalization available and injects the given personalization settings. This should be called before the user can do any adaptations per drag&drop or using the personalization dialog. Otherwise it may override the user's new settings.","!type":"fn(oSettings: Object)","!category":"function"},"destroyHeaderItems":{"!description":"Destroys all the headerItems in the aggregation\nnamed <code>headerItems<\/code>.","!type":"fn() -> sap.ui.ux3.Shell","!category":"function"},"destroyNotificationBar":{"!description":"Destroys the notificationBar in the aggregation\nnamed <code>notificationBar<\/code>.","!type":"fn() -> sap.ui.ux3.Shell","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.Shell","!category":"function"},"getShowSearchTool":{"!description":"Gets current value of property <code>showSearchTool<\/code>.\n\nWhether the \"Global Search\" tool should be displayed or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllHeaderItems":{"!description":"Removes all the controls in the aggregation named <code>headerItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"indexOfPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>paneContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oPaneContent: sap.ui.core.Control) -> Number","!category":"function"},"getAppTitle":{"!description":"Gets current value of property <code>appTitle<\/code>.\n\nThe application title to appear in the left part of the header, usually a company and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.","!type":"fn() -> String","!category":"function"},"detachPaneClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'paneClosed' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Shell","!category":"function"},"attachLogout":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'logout' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired when the user clicks the \"Log-off\" button","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","!category":"function"},"getToolPopups":{"!description":"Gets content of aggregation <code>toolPopups<\/code>.\n\nThe items which appear in the ToolPalette and are opened as popup when clicked.","!type":"fn() -> [sap.ui.ux3.ToolPopup]","!category":"function"},"getAppIcon":{"!description":"Gets current value of property <code>appIcon<\/code>.\n\nThe URL of the image to appear in the left part of the header, usually a branding image containing a logo and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.\nIf the appIcon is set, for accessibility reasons the appIconTooltip must also be set.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"openPersonalizationDialog":{"!description":"Experimental method! Do not use!","!type":"fn()","!category":"function"},"!proto":"sap.ui.core.Control","removeToolPopup":{"!description":"Removes a toolPopup from the aggregation named <code>toolPopups<\/code>.","!type":"fn(vToolPopup: Number | String | sap.ui.ux3.ToolPopup) -> sap.ui.ux3.ToolPopup","!category":"function"},"getSearchField":{"!description":"Returns the SearchField control which is used in the Search Tool.","!type":"fn() -> sap.ui.commons.SearchField","!category":"function"},"indexOfPaneBarItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation named <code>paneBarItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oPaneBarItem: sap.ui.core.Item) -> Number","!category":"function"},"firePaneClosed":{"!description":"Fires event paneClosed to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>The id of the PaneBarItem to which the closed pane belonged.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Shell","!category":"function"},"detachWorksetItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'worksetItemSelected' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Shell","!category":"function"},"indexOfToolPopup":{"!description":"Checks for the provided <code>sap.ui.ux3.ToolPopup<\/code> in the aggregation named <code>toolPopups<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oToolPopup: sap.ui.ux3.ToolPopup) -> Number","!category":"function"},"destroyPaneBarItems":{"!description":"Destroys all the paneBarItems in the aggregation\nnamed <code>paneBarItems<\/code>.","!type":"fn() -> sap.ui.ux3.Shell","!category":"function"},"getShowFeederTool":{"!description":"Gets current value of property <code>showFeederTool<\/code>.\n\nWhether the \"Feeder\" tool should be displayed or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","setLogoutButtonTooltip":{"!description":"Sets a new value for property <code>logoutButtonTooltip<\/code>.\n\nThe tooltip to be displayed for the Logout Button of the Shell. If not set, a text meaning \"Logout\" in the current language will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLogoutButtonTooltip: String) -> sap.ui.ux3.Shell","!category":"function"},"getAppIconTooltip":{"!description":"Gets current value of property <code>appIconTooltip<\/code>.\n\nThe tooltip of the application icon in the header","!type":"fn() -> String","!category":"function"},"getShowInspectorTool":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.7.2 According to the current Ux designs, the ThingInspector should NOT be opened like this from the Tool Pane. And technically, the ThingInspector is not a ToolPopup.\nInstead trigger it from the respective elements in the Shell content.<br>Gets current value of property <code>showInspectorTool<\/code>.\n\nWhether the \"Inspector\" tool should be displayed or not.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'search' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Shell","!category":"function"},"openPane":{"!description":"Opens the side Pane.\n\nA valid ID of a paneBarItem must be given, so this item can be marked as selected. A \"paneBarItemSelected\" event is then fired as if the opening was triggered by the user by a click on the respective PaneBarItem.\nThis method can be called (with different IDs) even when the Pane is already open. It has then the same effect as if the user switches between PaneBarItems.\n\nReturns 'this' to allow method chaining.","!type":"fn(sPaneBarItemId: String) -> sap.ui.ux3.Shell","!category":"function"},"setAppIconTooltip":{"!description":"Sets a new value for property <code>appIconTooltip<\/code>.\n\nThe tooltip of the application icon in the header\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAppIconTooltip: String) -> sap.ui.ux3.Shell","!category":"function"},"removePaneBarItem":{"!description":"Removes a paneBarItem from the aggregation named <code>paneBarItems<\/code>.","!type":"fn(vPaneBarItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","!category":"function"},"insertHeaderItem":{"!description":"Inserts a headerItem into the aggregation named <code>headerItems<\/code>.","!type":"fn(oHeaderItem: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.Shell","!category":"function"},"getNotificationBar":{"!description":"Gets content of aggregation <code>notificationBar<\/code>.\n\nThe NotificationBar which should be integrated into the Shell.","!type":"fn() -> sap.ui.ux3.NotificationBar","!category":"function"},"detachPaneBarItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'paneBarItemSelected' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Shell","!category":"function"},"!description":"The Ux3 GoldReflection Shell, which is an application frame with navigation capabilities.\nIt is supposed to be added to a direct child of the BODY tag of a page and there should be no other parts of the page consuming space outside the Shell.","getWorksetItems":{"!description":"Gets content of aggregation <code>worksetItems<\/code>.\n\nThe workset items.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Shell.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"addToolPopup":{"!description":"Adds some toolPopup into the aggregation named <code>toolPopups<\/code>.","!type":"fn(oToolPopup: sap.ui.ux3.ToolPopup) -> sap.ui.ux3.Shell","!category":"function"},"removePaneContent":{"!description":"Removes a paneContent from the aggregation named <code>paneContent<\/code>.","!type":"fn(vPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"attachWorksetItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'worksetItemSelected' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired when a workset item was selected by the user. The application may populate the sub-items of the given workset item in the event handler, but this must happen synchronously. If this is done, the application is responsible for displaying the correct content for the selected one of the newly created sub-items. The Shell will currently always mark the first sub-item as selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","!category":"function"},"addWorksetItem":{"!description":"Adds some worksetItem into the aggregation named <code>worksetItems<\/code>.","!type":"fn(oWorksetItem: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.Shell","!category":"function"},"setPaneContent":{"!description":"Replaces the existing side pane content with the given Control(-Tree). This method is optimized to only re-render the pane content (and not the shell) which is faster and smoother than any other way of changing the \"paneContent\" aggregation.\n\nBy default, the old pane content is not destroyed and is returned by this method in an array for further usage. To avoid memory leaks, the old content should be destroyed (if not needed later), by setting the \"destroyOldContent\" flag or by destroying it manually later on. If \"destroyOldContent\" is set, an empty array is returned.","!type":"fn(oContent: sap.ui.core.Control, bDestroyOldContent: Boolean) -> [sap.ui.core.Control]","!category":"function"},"getAllowOverlayHeaderAccess":{"!description":"Gets current value of property <code>allowOverlayHeaderAccess<\/code>.\n\nWhether the Shell header (Title Area + Header Items) can be accessed when an Overlay, OverlayContainer or ThingInspector is open.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setAppIcon":{"!description":"Sets a new value for property <code>appIcon<\/code>.\n\nThe URL of the image to appear in the left part of the header, usually a branding image containing a logo and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.\nIf the appIcon is set, for accessibility reasons the appIconTooltip must also be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAppIcon: sap.ui.core.URI) -> sap.ui.ux3.Shell","!category":"function"},"indexOfHeaderItem":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>headerItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oHeaderItem: sap.ui.core.Control) -> Number","!category":"function"},"setShowPane":{"!description":"Sets a new value for property <code>showPane<\/code>.\n\nWhether the pane bar should be displayed at all or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowPane: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"addPaneBarItem":{"!description":"Adds some paneBarItem into the aggregation named <code>paneBarItems<\/code>.","!type":"fn(oPaneBarItem: sap.ui.core.Item) -> sap.ui.ux3.Shell","!category":"function"},"attachFeedSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'feedSubmit' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired when a new feed entry is submitted.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","!category":"function"},"setApplyContentPadding":{"!description":"Sets a new value for property <code>applyContentPadding<\/code>.\n\nWhether the Shell content area should have a theme-dependent padding or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bApplyContentPadding: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"setHeaderType":{"!description":"Sets a new value for property <code>headerType<\/code>.\n\nDefines which header type to be used. Depending on the header type some other functionality might be obsolete.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sHeaderType: sap.ui.ux3.ShellHeaderType) -> sap.ui.ux3.Shell","!category":"function"},"getPaneWidth":{"!description":"Gets current value of property <code>paneWidth<\/code>.\n\nThe width of the right-hand side pane in pixels. The value must be a non-negative integer. The Shell reserves the right to define a minimum width (currently 50px).\n\nDefault value is <code>250<\/code>.","!type":"fn() -> Number","!category":"function"},"isPaneOpen":{"!description":"Returns 'true' if the side Pane is currently open.","!type":"fn() -> Boolean","!category":"function"},"setPaneWidth":{"!description":"Sets a new value for property <code>paneWidth<\/code>.\n\nThe width of the right-hand side pane in pixels. The value must be a non-negative integer. The Shell reserves the right to define a minimum width (currently 50px).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>250<\/code>.","!type":"fn(iPaneWidth: Number) -> sap.ui.ux3.Shell","!category":"function"},"getShowPane":{"!description":"Gets current value of property <code>showPane<\/code>.\n\nWhether the pane bar should be displayed at all or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAllWorksetItems":{"!description":"Removes all the controls in the aggregation named <code>worksetItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"getApplyContentPadding":{"!description":"Gets current value of property <code>applyContentPadding<\/code>.\n\nWhether the Shell content area should have a theme-dependent padding or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content to appear in the main canvas. Each modification of this aggregation leads to a re-rendering of the content area - but not to a re-rendering of the complete Shell.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeWorksetItem":{"!description":"Removes a worksetItem from the aggregation named <code>worksetItems<\/code>.","!type":"fn(vWorksetItem: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","!category":"function"},"firePaneBarItemSelected":{"!description":"Fires event paneBarItemSelected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>The ID of the selected PaneBarItem.<\/li>\n<li>'item' of type <code>sap.ui.core.Item<\/code>The selected Item<\/li>\n<li>'key' of type <code>string<\/code>The key of the selected Item (or null if there is no key)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Shell","!category":"function"},"getShowTools":{"!description":"Gets current value of property <code>showTools<\/code>.\n\nWhether the tool area should be displayed at all or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"indexOfWorksetItem":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation named <code>worksetItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oWorksetItem: sap.ui.ux3.NavigationItem) -> Number","!category":"function"},"fireLogout":{"!description":"Fires event logout to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Shell","!category":"function"},"insertPaneContent":{"!description":"Inserts a paneContent into the aggregation named <code>paneContent<\/code>.","!type":"fn(oPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.Shell","!category":"function"},"insertToolPopup":{"!description":"Inserts a toolPopup into the aggregation named <code>toolPopups<\/code>.","!type":"fn(oToolPopup: sap.ui.ux3.ToolPopup, iIndex: Number) -> sap.ui.ux3.Shell","!category":"function"},"addHeaderItem":{"!description":"Adds some headerItem into the aggregation named <code>headerItems<\/code>.","!type":"fn(oHeaderItem: sap.ui.core.Control) -> sap.ui.ux3.Shell","!category":"function"},"insertPaneBarItem":{"!description":"Inserts a paneBarItem into the aggregation named <code>paneBarItems<\/code>.","!type":"fn(oPaneBarItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.ux3.Shell","!category":"function"},"setSelectedWorksetItem":{"!description":"Sets the associated <code>selectedWorksetItem<\/code>.","!type":"fn(oSelectedWorksetItem: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.Shell","!category":"function"},"attachPaneBarItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'paneBarItemSelected' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nAn item in the right-hand-side pane bar has been selected, the pane is now visible and can be filled with UI elements.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","!category":"function"},"getPaneContent":{"!description":"Gets content of aggregation <code>paneContent<\/code>.\n\nThe content to appear in the pane area.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setAllowOverlayHeaderAccess":{"!description":"Sets a new value for property <code>allowOverlayHeaderAccess<\/code>.\n\nWhether the Shell header (Title Area + Header Items) can be accessed when an Overlay, OverlayContainer or ThingInspector is open.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAllowOverlayHeaderAccess: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"destroyWorksetItems":{"!description":"Destroys all the worksetItems in the aggregation\nnamed <code>worksetItems<\/code>.","!type":"fn() -> sap.ui.ux3.Shell","!category":"function"},"setShowInspectorTool":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.7.2 According to the current Ux designs, the ThingInspector should NOT be opened like this from the Tool Pane. And technically, the ThingInspector is not a ToolPopup.\nInstead trigger it from the respective elements in the Shell content.<br>Sets a new value for property <code>showInspectorTool<\/code>.\n\nWhether the \"Inspector\" tool should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowInspectorTool: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"addPaneContent":{"!description":"Adds some paneContent into the aggregation named <code>paneContent<\/code>.","!type":"fn(oPaneContent: sap.ui.core.Control) -> sap.ui.ux3.Shell","!category":"function"},"attachPaneClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'paneClosed' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired after a side pane of the shell is closed. It is also fired, when an open pane is closed by calling setShowPane(false), if and only if the pane was opened before.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","!category":"function"},"closePane":{"!description":"Closes the side Pane (if open).\n\nReturns 'this' to allow method chaining.","!type":"fn() -> sap.ui.ux3.Shell","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setShowFeederTool":{"!description":"Sets a new value for property <code>showFeederTool<\/code>.\n\nWhether the \"Feeder\" tool should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowFeederTool: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"destroyToolPopups":{"!description":"Destroys all the toolPopups in the aggregation\nnamed <code>toolPopups<\/code>.","!type":"fn() -> sap.ui.ux3.Shell","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.ux3.Shell","!category":"function"},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'search' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired when search has been triggered.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","!category":"function"},"getFullHeightContent":{"!description":"Gets current value of property <code>fullHeightContent<\/code>.\n\nIf set to true, the content area has a defined height. This means that any content put inside can use \"100%\" height in CSS and will then consume all available space.\nHowever, if content is larger, scrollbars will appear at the content area of the Shell and not on window level.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireSearch":{"!description":"Fires event search to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Shell","!category":"function"},"setDesignType":{"!description":"Sets a new value for property <code>designType<\/code>.\n\nDefines which design type is to be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesignType: sap.ui.ux3.ShellDesignType) -> sap.ui.ux3.Shell","!category":"function"},"detachLogout":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'logout' event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Shell","!category":"function"},"setOffsetRight":{"!description":"Moves the complete Shell away from the right window border by the given number of pixels (left border in RTL case).\n\nSo there is space for a sidebar or so outside the Shell. The CSS class 'sapUiUx3ShellOuterSideBar' provides the basic position\ncapabilities for the sidebar DOM element.\n\nThis feature is not public. The usage is only granted to special groups on request.","!type":"fn(px: Number, complete?: fn(), outerId?: String)","!category":"function"},"fireFeedSubmit":{"!description":"Fires event feedSubmit to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Shell","!category":"function"},"getShowLogoutButton":{"!description":"Gets current value of property <code>showLogoutButton<\/code>.\n\nWhether the Logoff button in the header should be displayed or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeHeaderItem":{"!description":"Removes a headerItem from the aggregation named <code>headerItems<\/code>.","!type":"fn(vHeaderItem: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getPaneBarItems":{"!description":"Gets content of aggregation <code>paneBarItems<\/code>.\n\nThe items to appear in the PaneBar.","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"setFullHeightContent":{"!description":"Sets a new value for property <code>fullHeightContent<\/code>.\n\nIf set to true, the content area has a defined height. This means that any content put inside can use \"100%\" height in CSS and will then consume all available space.\nHowever, if content is larger, scrollbars will appear at the content area of the Shell and not on window level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFullHeightContent: Boolean) -> sap.ui.ux3.Shell","!category":"function"},"getHeaderItems":{"!description":"Gets content of aggregation <code>headerItems<\/code>.\n\nControls to appear in the header next to the logout button. It is recommended to only use controls of type Button, MenuButton and TextView.\nThe respective UI guidelines need to be enforced on a higher level.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setContent":{"!description":"Replaces the existing Shell content with the given Control(-Tree). Only leads to a re-rendering of the content area (not the complete Shell).\nThis method may be more convenient than a series of calls to \"removeContent\" and \"addContent\", which each lead to a re-rendering of the content area (but again not of the complete Shell).\n\nBy default the old content is not destroyed and is returned by this method in an array for further usage. To avoid memory leaks, the old content should be destroyed (if not needed later), by setting the \"destroyOldContent\" flag or by destroying it manually later on. If \"destroyOldContent\" is set, an empty array is returned.","!type":"fn(oContent: sap.ui.core.Control, bDestroyOldContent: Boolean) -> [sap.ui.core.Control]","!category":"function"},"fireWorksetItemSelected":{"!description":"Fires event worksetItemSelected to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>The id of the workset item that has been newly selected by the user. If a top-level item has been clicked which has sub-items, the ID of the currently active sub-item (/leaf) is given.<\/li>\n<li>'item' of type <code>sap.ui.ux3.NavigationItem<\/code>The selected NavigationItem<\/li>\n<li>'key' of type <code>string<\/code>The key of the selected NavigationItem (or null if there is no key)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.Shell","!category":"function"},"removeAllPaneBarItems":{"!description":"Removes all the controls in the aggregation named <code>paneBarItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"insertWorksetItem":{"!description":"Inserts a worksetItem into the aggregation named <code>worksetItems<\/code>.","!type":"fn(oWorksetItem: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.Shell","!category":"function"},"getHeaderType":{"!description":"Gets current value of property <code>headerType<\/code>.\n\nDefines which header type to be used. Depending on the header type some other functionality might be obsolete.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.ux3.ShellHeaderType","!category":"function"},"getSelectedWorksetItem":{"!description":"ID of the element which is the current target of the <code>selectedWorksetItem<\/code> association, or <code>null<\/code>.\n\nThe ID of the Item that is currently selected.\nWhen setting, the NavigationItem itself can be given instead of its ID. There will not be a worksetItemSelected event, the application is responsible to show the proper content according to the newly selected WorksetItem. If the set WorksetItem does not exist in this Shell, the first item (and first sub-item) will be selected after the call.\nWhen getting, always the ID is returned, by which the NavigationItem instance can be retrieved.","!type":"fn() -> sap.ui.ux3.NavigationItem","!category":"function"}},"sap.ui.ux3.DataSetItem":{"setCheckable":{"!description":"Sets a new value for property <code>checkable<\/code>.\n\ncheckable\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bCheckable: Boolean) -> sap.ui.ux3.DataSetItem","!category":"function"},"getSubtitle":{"!description":"Gets current value of property <code>subtitle<\/code>.\n\nsubtitle\n\nDefault value is <code>Subtitle<\/code>.","!type":"fn() -> String","!category":"function"},"attachSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'selected' event of this <code>sap.ui.ux3.DataSetItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.DataSetItem<\/code> itself.\n\nEvent Fired when Datset item is selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSetItem","!category":"function"},"!description":"DataSet Item","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\ntitle\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Title<\/code>.","!type":"fn(sTitle: String) -> sap.ui.ux3.DataSetItem","!category":"function"},"detachSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'selected' event of this <code>sap.ui.ux3.DataSetItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.DataSetItem","!category":"function"},"fireSelected":{"!description":"Fires event selected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'itemId' of type <code>string<\/code>Id of the selected Datset item<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.DataSetItem","!category":"function"},"!category":"class","setSubtitle":{"!description":"Sets a new value for property <code>subtitle<\/code>.\n\nsubtitle\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Subtitle<\/code>.","!type":"fn(sSubtitle: String) -> sap.ui.ux3.DataSetItem","!category":"function"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\ntitle\n\nDefault value is <code>Title<\/code>.","!type":"fn() -> String","!category":"function"},"getIconSrc":{"!description":"Gets current value of property <code>iconSrc<\/code>.\n\nimage","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getCheckable":{"!description":"Gets current value of property <code>checkable<\/code>.\n\ncheckable\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setIconSrc":{"!description":"Sets a new value for property <code>iconSrc<\/code>.\n\nimage\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconSrc: sap.ui.core.URI) -> sap.ui.ux3.DataSetItem","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.DataSetItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.ActionBarSocialActions":{"Favorite":{"!description":"Standards action 'Mark as Favorite'","!type":"String","!category":"enum"},"Open":{"!description":"Standard action 'Open Thing Inspector'","!type":"String","!category":"enum"},"Flag":{"!description":"Standard action 'Mark for Follow up'","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Follow":{"!description":"Standard action 'Follow/Unfollow'","!type":"String","!category":"enum"},"Update":{"!description":"Standard action 'Create an update' (Feed)","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.ux3.Exact":{"destroySettingsMenu":{"!description":"Destroys the settingsMenu in the aggregation\nnamed <code>settingsMenu<\/code>.","!type":"fn() -> sap.ui.ux3.Exact","!category":"function"},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'search' event of this <code>sap.ui.ux3.Exact<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Exact","!category":"function"},"detachRefineSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'refineSearch' event of this <code>sap.ui.ux3.Exact<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Exact","!category":"function"},"getSearchField":{"!description":"Returns the SearchField control which is used by the Exact control.","!type":"fn() -> sap.ui.commons.SearchField","!category":"function"},"attachRefineSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'refineSearch' event of this <code>sap.ui.ux3.Exact<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Exact<\/code> itself.\n\nEvent which is fired when an attribute is selected or unselected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Exact","!category":"function"},"setSettingsMenu":{"!description":"Sets the aggregated <code>settingsMenu<\/code>.","!type":"fn(oSettingsMenu: sap.ui.commons.Menu) -> sap.ui.ux3.Exact","!category":"function"},"getResultArea":{"!description":"Returns the ExactArea representing the result section. Arbitrary content can be added here.","!type":"fn() -> sap.ui.ux3.ExactArea","!category":"function"},"getSettingsMenu":{"!description":"Gets content of aggregation <code>settingsMenu<\/code>.\n\nDefines the 'Settings' button in the browse section tool bar","!type":"fn() -> sap.ui.commons.Menu","!category":"function"},"insertAttribute":{"!description":"Inserts a attribute into the aggregation named <code>attributes<\/code>.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute, iIndex: Number) -> sap.ui.ux3.Exact","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","fireRefineSearch":{"!description":"Fires event refineSearch to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'query' of type <code>string<\/code>The query string which was entered in the search field<\/li>\n<li>'changedAttribute' of type <code>sap.ui.ux3.ExactAttribute<\/code>The attribute which was selected or unselected recently<\/li>\n<li>'allSelectedAttributes' of type <code>object<\/code>Array of all selected ExcatAttribute.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Exact","!category":"function"},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'search' event of this <code>sap.ui.ux3.Exact<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Exact<\/code> itself.\n\nEvent is fired when the search button is clicked","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Exact","!category":"function"},"setResultText":{"!description":"Sets a new value for property <code>resultText<\/code>.\n\nA title text which is displayed above the result section\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sResultText: String) -> sap.ui.ux3.Exact","!category":"function"},"!category":"class","indexOfAttribute":{"!description":"Checks for the provided <code>sap.ui.ux3.ExactAttribute<\/code> in the aggregation named <code>attributes<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> Number","!category":"function"},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation\nnamed <code>attributes<\/code>.","!type":"fn() -> sap.ui.ux3.Exact","!category":"function"},"removeAttribute":{"!description":"Removes a attribute from the aggregation named <code>attributes<\/code>.","!type":"fn(vAttribute: Number | String | sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactAttribute","!category":"function"},"fireSearch":{"!description":"Fires event search to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'query' of type <code>string<\/code>The query string which was entered in the search field.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Exact","!category":"function"},"getResultText":{"!description":"Gets current value of property <code>resultText<\/code>.\n\nA title text which is displayed above the result section","!type":"fn() -> String","!category":"function"},"getAttributes":{"!description":"Gets content of aggregation <code>attributes<\/code>.\n\nThe attributes which shall be available to refine the search","!type":"fn() -> [sap.ui.ux3.ExactAttribute]","!category":"function"},"removeAllAttributes":{"!description":"Removes all the controls in the aggregation named <code>attributes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ExactAttribute]","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Exact.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control","addAttribute":{"!description":"Adds some attribute into the aggregation named <code>attributes<\/code>.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.Exact","!category":"function"}},"sap.ui.ux3.Collection":{"attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'selectionChanged' event of this <code>sap.ui.ux3.Collection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Collection<\/code> itself.\n\nFired when ever the selected items changer","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Collection","!category":"function"},"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.ux3.Collection","!category":"function"},"getMultiSelection":{"!description":"Gets current value of property <code>multiSelection<\/code>.\n\nAllow multi selection of items in collection\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.Item) -> Number","!category":"function"},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nIf a collection is editable an edit button will be displayed below the list of items\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.ux3.Collection","!category":"function"},"addSelectedItem":{"!type":"fn(vSelectedItem: String | sap.ui.core.Item) -> sap.ui.ux3.Collection","!category":"function"},"!category":"class","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nName for the collection","!type":"fn() -> String","!category":"function"},"detachPropertyChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'propertyChanged' event of this <code>sap.ui.ux3.Collection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Collection","!category":"function"},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nIf a collection is editable an edit button will be displayed below the list of items\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeSelectedItem":{"!type":"fn(vSelectedItem: Number | String | sap.ui.core.Item) -> String","!category":"function"},"firePropertyChanged":{"!description":"Fires event propertyChanged to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Collection","!category":"function"},"attachPropertyChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'propertyChanged' event of this <code>sap.ui.ux3.Collection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Collection<\/code> itself.\n\nFires if a property has changed, and the collection inspector needs to do something after that","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Collection","!category":"function"},"fireSelectionChanged":{"!description":"Fires event selectionChanged to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Collection","!category":"function"},"setMultiSelection":{"!description":"Sets a new value for property <code>multiSelection<\/code>.\n\nAllow multi selection of items in collection\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMultiSelection: Boolean) -> sap.ui.ux3.Collection","!category":"function"},"getSelectedItems":{"!description":"Returns array of IDs of the elements which are the current targets of the <code>selectedItems<\/code> association.\n\nContains all items that are currently selected","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"!description":"Collection","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nName for the collection\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.ux3.Collection","!category":"function"},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nItems in the collection","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"removeAllSelectedItems":{"!type":"fn() -> [String]","!category":"function"},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'selectionChanged' event of this <code>sap.ui.ux3.Collection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Collection","!category":"function"},"destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.ux3.Collection","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.ux3.Collection","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Collection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.Overlay_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Overlay with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Overlay"},"sap.ui.ux3.ExactArea":{"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.ExactArea","!category":"function"},"removeToolbarItem":{"!description":"Removes a toolbarItem from the aggregation named <code>toolbarItems<\/code>.","!type":"fn(vToolbarItem: Number | String | sap.ui.commons.ToolbarItem) -> sap.ui.commons.ToolbarItem","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nArbitrary child controls of the content area","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getToolbarVisible":{"!description":"Gets current value of property <code>toolbarVisible<\/code>.\n\nSpecifies whether the tool bar shall be visible\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"insertToolbarItem":{"!description":"Inserts a toolbarItem into the aggregation named <code>toolbarItems<\/code>.","!type":"fn(oToolbarItem: sap.ui.commons.ToolbarItem, iIndex: Number) -> sap.ui.ux3.ExactArea","!category":"function"},"indexOfToolbarItem":{"!description":"Checks for the provided <code>sap.ui.commons.ToolbarItem<\/code> in the aggregation named <code>toolbarItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oToolbarItem: sap.ui.commons.ToolbarItem) -> Number","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.ux3.ExactArea","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.ExactArea","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAllToolbarItems":{"!description":"Removes all the controls in the aggregation named <code>toolbarItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function"},"addToolbarItem":{"!description":"Adds some toolbarItem into the aggregation named <code>toolbarItems<\/code>.","!type":"fn(oToolbarItem: sap.ui.commons.ToolbarItem) -> sap.ui.ux3.ExactArea","!category":"function"},"!category":"class","setToolbarVisible":{"!description":"Sets a new value for property <code>toolbarVisible<\/code>.\n\nSpecifies whether the tool bar shall be visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bToolbarVisible: Boolean) -> sap.ui.ux3.ExactArea","!category":"function"},"destroyToolbarItems":{"!description":"Destroys all the toolbarItems in the aggregation\nnamed <code>toolbarItems<\/code>.","!type":"fn() -> sap.ui.ux3.ExactArea","!category":"function"},"getToolbarItems":{"!description":"Gets content of aggregation <code>toolbarItems<\/code>.\n\nTool bar items which shall be shown in the tool bar.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ExactArea.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.DataSetItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSetItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.DataSetItem"},"sap.ui.ux3.FeedChunk_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FeedChunk with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.FeedChunk"},"sap.ui.ux3.OverlayContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.OverlayContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.OverlayContainer"},"sap.ui.ux3.Feed":{"unbindFilterItems":{"!description":"Unbinds aggregation <code>filterItems<\/code> from model data.","!type":"fn() -> sap.ui.ux3.Feed","!category":"function"},"attachFilterChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'filterChange' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when the filter is changed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","!category":"function"},"setFeederThumbnailSrc":{"!description":"Sets a new value for property <code>feederThumbnailSrc<\/code>.\n\nThe path to the thumbnail image used for the feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFeederThumbnailSrc: sap.ui.core.URI) -> sap.ui.ux3.Feed","!category":"function"},"attachToolsItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'toolsItemSelected' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when an item from the tools MenuButton was selected","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","!category":"function"},"removeChunk":{"!description":"Removes a chunk from the aggregation named <code>chunks<\/code>.","!type":"fn(vChunk: Number | String | sap.ui.ux3.FeedChunk) -> sap.ui.ux3.FeedChunk","!category":"function"},"detachToolsItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'toolsItemSelected' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Feed","!category":"function"},"getFeederSender":{"!description":"Gets current value of property <code>feederSender<\/code>.\n\nThe sender of the feeder","!type":"fn() -> String","!category":"function"},"unbindToolsMenuItems":{"!description":"Unbinds aggregation <code>toolsMenuItems<\/code> from model data.","!type":"fn() -> sap.ui.ux3.Feed","!category":"function"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle text of the Feed. If no text is entered \"FEED\" is displayed.","!type":"fn() -> String","!category":"function"},"addChunk":{"!description":"Adds some chunk into the aggregation named <code>chunks<\/code>.","!type":"fn(oChunk: sap.ui.ux3.FeedChunk) -> sap.ui.ux3.Feed","!category":"function"},"bindChunks":{"!description":"Binds aggregation <code>chunks<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.Feed","!category":"function"},"fireFilterChange":{"!description":"Fires event filterChange to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code>The new/changed value of the filter<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Feed","!category":"function"},"detachChunkAdded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'chunkAdded' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Feed","!category":"function"},"bindFilterItems":{"!description":"Binds aggregation <code>filterItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.Feed","!category":"function"},"attachChunkAdded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'chunkAdded' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when a new chunk is added","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","!category":"function"},"detachFilterChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'filterChange' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Feed","!category":"function"},"indexOfFilterItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation named <code>filterItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFilterItem: sap.ui.core.ListItem) -> Number","!category":"function"},"destroyToolsMenuItems":{"!description":"Destroys all the toolsMenuItems in the aggregation\nnamed <code>toolsMenuItems<\/code>.","!type":"fn() -> sap.ui.ux3.Feed","!category":"function"},"getFeederThumbnailSrc":{"!description":"Gets current value of property <code>feederThumbnailSrc<\/code>.\n\nThe path to the thumbnail image used for the feeder","!type":"fn() -> sap.ui.core.URI","!category":"function"},"indexOfChunk":{"!description":"Checks for the provided <code>sap.ui.ux3.FeedChunk<\/code> in the aggregation named <code>chunks<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oChunk: sap.ui.ux3.FeedChunk) -> Number","!category":"function"},"unbindChunks":{"!description":"Unbinds aggregation <code>chunks<\/code> from model data.","!type":"fn() -> sap.ui.ux3.Feed","!category":"function"},"getFilterItems":{"!description":"Gets content of aggregation <code>filterItems<\/code>.\n\nItems of the filter","!type":"fn() -> [sap.ui.core.ListItem]","!category":"function"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle text of the Feed. If no text is entered \"FEED\" is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.ux3.Feed","!category":"function"},"indexOfToolsMenuItem":{"!description":"Checks for the provided <code>sap.ui.commons.MenuItem<\/code> in the aggregation named <code>toolsMenuItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oToolsMenuItem: sap.ui.commons.MenuItem) -> Number","!category":"function"},"addToolsMenuItem":{"!description":"Adds some toolsMenuItem into the aggregation named <code>toolsMenuItems<\/code>.","!type":"fn(oToolsMenuItem: sap.ui.commons.MenuItem) -> sap.ui.ux3.Feed","!category":"function"},"removeAllChunks":{"!description":"Removes all the controls in the aggregation named <code>chunks<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.FeedChunk]","!category":"function"},"getChunks":{"!description":"Gets content of aggregation <code>chunks<\/code>.\n\nThe chunks","!type":"fn() -> [sap.ui.ux3.FeedChunk]","!category":"function"},"!proto":"sap.ui.core.Control","insertToolsMenuItem":{"!description":"Inserts a toolsMenuItem into the aggregation named <code>toolsMenuItems<\/code>.","!type":"fn(oToolsMenuItem: sap.ui.commons.MenuItem, iIndex: Number) -> sap.ui.ux3.Feed","!category":"function"},"removeFilterItem":{"!description":"Removes a filterItem from the aggregation named <code>filterItems<\/code>.","!type":"fn(vFilterItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem","!category":"function"},"getLive":{"!description":"Gets current value of property <code>live<\/code>.\n\nSpecifies whether the feed shall be in live mode\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeToolsMenuItem":{"!description":"Removes a toolsMenuItem from the aggregation named <code>toolsMenuItems<\/code>.","!type":"fn(vToolsMenuItem: Number | String | sap.ui.commons.MenuItem) -> sap.ui.commons.MenuItem","!category":"function"},"fireToolsItemSelected":{"!description":"Fires event toolsItemSelected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'itemId' of type <code>string<\/code>The Id of the selected item<\/li>\n<li>'item' of type <code>sap.ui.unified.MenuItemBase<\/code>The selected item<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Feed","!category":"function"},"fireToggleLive":{"!description":"Fires event toggleLive to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'live' of type <code>boolean<\/code>Current live indicator<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Feed","!category":"function"},"detachToggleLive":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'toggleLive' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Feed","!category":"function"},"destroyChunks":{"!description":"Destroys all the chunks in the aggregation\nnamed <code>chunks<\/code>.","!type":"fn() -> sap.ui.ux3.Feed","!category":"function"},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'search' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when the search function on SearchField is triggered","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","!category":"function"},"removeAllFilterItems":{"!description":"Removes all the controls in the aggregation named <code>filterItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.ListItem]","!category":"function"},"insertFilterItem":{"!description":"Inserts a filterItem into the aggregation named <code>filterItems<\/code>.","!type":"fn(oFilterItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.ux3.Feed","!category":"function"},"attachToggleLive":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'toggleLive' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when the live mode has changed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","!category":"function"},"!category":"class","fireSearch":{"!description":"Fires event search to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'query' of type <code>string<\/code>The search query<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Feed","!category":"function"},"setFeederSender":{"!description":"Sets a new value for property <code>feederSender<\/code>.\n\nThe sender of the feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFeederSender: String) -> sap.ui.ux3.Feed","!category":"function"},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'search' event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Feed","!category":"function"},"destroyFilterItems":{"!description":"Destroys all the filterItems in the aggregation\nnamed <code>filterItems<\/code>.","!type":"fn() -> sap.ui.ux3.Feed","!category":"function"},"fireChunkAdded":{"!description":"Fires event chunkAdded to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'chunk' of type <code>sap.ui.ux3.FeedChunk<\/code>New chunk<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Feed","!category":"function"},"addFilterItem":{"!description":"Adds some filterItem into the aggregation named <code>filterItems<\/code>.","!type":"fn(oFilterItem: sap.ui.core.ListItem) -> sap.ui.ux3.Feed","!category":"function"},"bindToolsMenuItems":{"!description":"Binds aggregation <code>toolsMenuItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.Feed","!category":"function"},"getToolsMenuItems":{"!description":"Gets content of aggregation <code>toolsMenuItems<\/code>.\n\nMenuItems to open when the tool button is clicked by the user","!type":"fn() -> [sap.ui.commons.MenuItem]","!category":"function"},"insertChunk":{"!description":"Inserts a chunk into the aggregation named <code>chunks<\/code>.","!type":"fn(oChunk: sap.ui.ux3.FeedChunk, iIndex: Number) -> sap.ui.ux3.Feed","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAllToolsMenuItems":{"!description":"Removes all the controls in the aggregation named <code>toolsMenuItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.MenuItem]","!category":"function"},"setLive":{"!description":"Sets a new value for property <code>live<\/code>.\n\nSpecifies whether the feed shall be in live mode\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bLive: Boolean) -> sap.ui.ux3.Feed","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Feed.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap":{"ui":"sap.ui","sap":"sap","!category":"namespace"},"sap.ui.ux3.ShellHeaderType":{"Standard":{"!description":"The standard Shell header.","!type":"String","!category":"enum"},"NoNavigation":{"!description":"Like the Standard Area but without top-level navigation bar.","!type":"String","!category":"enum"},"!description":"Available shell header display types.","SlimNavigation":{"!description":"Like the Standard Area but with a leaner top-level navigation bar.","!type":"String","!category":"enum"},"!category":"static class","BrandOnly":{"!description":"Only the branding area is visible. Top-level navigation bar, header items, title and icon are not shown.","!type":"String","!category":"enum"}},"sap.ui.ux3.Collection_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Collection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Collection"},"sap.ui.ux3.FeedChunk":{"detachDeleted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'deleted' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"attachCommentAdded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'commentAdded' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is raised when a comment is added to the entry. This event is not supported for comment chunks.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"setSender":{"!description":"Sets a new value for property <code>sender<\/code>.\n\nSender of the chunk\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSender: String) -> sap.ui.ux3.FeedChunk","!category":"function"},"setFeederThumbnailSrc":{"!description":"Sets a new value for property <code>feederThumbnailSrc<\/code>.\n\nURL to the thumbnail image for the comment feeder.\nThis property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFeederThumbnailSrc: sap.ui.core.URI) -> sap.ui.ux3.FeedChunk","!category":"function"},"getActionMenuItems":{"!description":"Gets content of aggregation <code>actionMenuItems<\/code>.\n\nMenuItems to open when there is a click on the action menu button","!type":"fn() -> [sap.ui.commons.MenuItem]","!category":"function"},"indexOfActionMenuItem":{"!description":"Checks for the provided <code>sap.ui.commons.MenuItem<\/code> in the aggregation named <code>actionMenuItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oActionMenuItem: sap.ui.commons.MenuItem) -> Number","!category":"function"},"getShared":{"!description":"Gets current value of property <code>shared<\/code>.\n\nDefines whether the entry shall be shared. This property is not supported for comment chunks.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe FeedChunk text. @References are supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.ux3.FeedChunk","!category":"function"},"removeAllActionMenuItems":{"!description":"Removes all the controls in the aggregation named <code>actionMenuItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.MenuItem]","!category":"function"},"unbindComments":{"!description":"Unbinds aggregation <code>comments<\/code> from model data.","!type":"fn() -> sap.ui.ux3.FeedChunk","!category":"function"},"setDeletionAllowed":{"!description":"Sets a new value for property <code>deletionAllowed<\/code>.\n\nFlag if the deletion of the chunk shall be allowed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDeletionAllowed: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"attachToggleFlagged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'toggleFlagged' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is raised when the user clicks to flag the entry. This event is not supported for comment chunks.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"getEnableComment":{"!description":"Gets current value of property <code>enableComment<\/code>.\n\nIf true the comment action is enabled.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getFeederSender":{"!description":"Gets current value of property <code>feederSender<\/code>.\n\nSender for the comment feeder\nThis property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.","!type":"fn() -> String","!category":"function"},"fireReferenceClicked":{"!description":"Fires event referenceClicked to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'text' of type <code>string<\/code>Text of the @-reference<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"getFavorite":{"!description":"Gets current value of property <code>favorite<\/code>.\n\nDefines whether the entry shall be displayed as favorite. This property is not supported for comment chunks.","!type":"fn() -> Boolean","!category":"function"},"addComment":{"!description":"Adds some comment into the aggregation named <code>comments<\/code>.","!type":"fn(oComment: sap.ui.ux3.FeedChunk) -> sap.ui.ux3.FeedChunk","!category":"function"},"getFlagged":{"!description":"Gets current value of property <code>flagged<\/code>.\n\nDefines whether the entry is flagged. This property is not supported for comment chunks.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getCommentChunk":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Not longer used. If a chunk is a comment is determined from hierarchy. If the parent is a chunk it's automatically a comment.<br>Gets current value of property <code>commentChunk<\/code>.\n\nThis flag changes a FeedChunk into a CommentChunk. In this case, it can not have own comments,\nfurthermore it must be assigned to a FeedChunk.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"unbindActionMenuItems":{"!description":"Unbinds aggregation <code>actionMenuItems<\/code> from model data.","!type":"fn() -> sap.ui.ux3.FeedChunk","!category":"function"},"fireInspect":{"!description":"Fires event inspect to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"fireToggleShared":{"!description":"Fires event toggleShared to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'shareed' of type <code>boolean<\/code>Current shared state<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"removeActionMenuItem":{"!description":"Removes a actionMenuItem from the aggregation named <code>actionMenuItems<\/code>.","!type":"fn(vActionMenuItem: Number | String | sap.ui.commons.MenuItem) -> sap.ui.commons.MenuItem","!category":"function"},"removeComment":{"!description":"Removes a comment from the aggregation named <code>comments<\/code>.","!type":"fn(vComment: Number | String | sap.ui.ux3.FeedChunk) -> sap.ui.ux3.FeedChunk","!category":"function"},"fireActionItemSelected":{"!description":"Fires event actionItemSelected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'itemId' of type <code>string<\/code>The Id of the selected item<\/li>\n<li>'item' of type <code>sap.ui.unified.MenuItemBase<\/code>The selected item<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"setTimestamp":{"!description":"Sets a new value for property <code>timestamp<\/code>.\n\nFormat is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTimestamp: String) -> sap.ui.ux3.FeedChunk","!category":"function"},"detachToggleFlagged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'toggleFlagged' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"attachInspect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'inspect' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is fired when the inspect button was pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"getEnableFlag":{"!description":"Gets current value of property <code>enableFlag<\/code>.\n\nIf true the flag action is enabled.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"detachActionItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'actionItemSelected' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"bindComments":{"!description":"Binds aggregation <code>comments<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"setEnableFlag":{"!description":"Sets a new value for property <code>enableFlag<\/code>.\n\nIf true the flag action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableFlag: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"detachToggleFavorite":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'toggleFavorite' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"getFeederThumbnailSrc":{"!description":"Gets current value of property <code>feederThumbnailSrc<\/code>.\n\nURL to the thumbnail image for the comment feeder.\nThis property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"setCommentChunk":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Not longer used. If a chunk is a comment is determined from hierarchy. If the parent is a chunk it's automatically a comment.<br>Sets a new value for property <code>commentChunk<\/code>.\n\nThis flag changes a FeedChunk into a CommentChunk. In this case, it can not have own comments,\nfurthermore it must be assigned to a FeedChunk.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCommentChunk: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"addActionMenuItem":{"!description":"Adds some actionMenuItem into the aggregation named <code>actionMenuItems<\/code>.","!type":"fn(oActionMenuItem: sap.ui.commons.MenuItem) -> sap.ui.ux3.FeedChunk","!category":"function"},"insertActionMenuItem":{"!description":"Inserts a actionMenuItem into the aggregation named <code>actionMenuItems<\/code>.","!type":"fn(oActionMenuItem: sap.ui.commons.MenuItem, iIndex: Number) -> sap.ui.ux3.FeedChunk","!category":"function"},"attachToggleShared":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'toggleShared' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is raised when the user clicks to share the entry. This event is not supported for comment chunks.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"!proto":"sap.ui.core.Control","fireSenderClicked":{"!description":"Fires event senderClicked to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"setEnableFavorite":{"!description":"Sets a new value for property <code>enableFavorite<\/code>.\n\nIf true the favorite action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableFavorite: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"setFlagged":{"!description":"Sets a new value for property <code>flagged<\/code>.\n\nDefines whether the entry is flagged. This property is not supported for comment chunks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFlagged: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"bindActionMenuItems":{"!description":"Binds aggregation <code>actionMenuItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"getEnableShare":{"!description":"Gets current value of property <code>enableShare<\/code>.\n\nIf true the share action is enabled.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"detachReferenceClicked":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'referenceClicked' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"insertComment":{"!description":"Inserts a comment into the aggregation named <code>comments<\/code>.","!type":"fn(oComment: sap.ui.ux3.FeedChunk, iIndex: Number) -> sap.ui.ux3.FeedChunk","!category":"function"},"fireToggleFlagged":{"!description":"Fires event toggleFlagged to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'flagged' of type <code>boolean<\/code>Current flagged state<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"destroyComments":{"!description":"Destroys all the comments in the aggregation\nnamed <code>comments<\/code>.","!type":"fn() -> sap.ui.ux3.FeedChunk","!category":"function"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe FeedChunk text. @References are supported.","!type":"fn() -> String","!category":"function"},"detachSenderClicked":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'senderClicked' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"getTimestamp":{"!description":"Gets current value of property <code>timestamp<\/code>.\n\nFormat is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone","!type":"fn() -> String","!category":"function"},"getDeletionAllowed":{"!description":"Gets current value of property <code>deletionAllowed<\/code>.\n\nFlag if the deletion of the chunk shall be allowed\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getEnableInspect":{"!description":"Gets current value of property <code>enableInspect<\/code>.\n\nIf true the inspect action is enabled.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","setThumbnailSrc":{"!description":"Sets a new value for property <code>thumbnailSrc<\/code>.\n\nURL to the thumbnail image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sThumbnailSrc: sap.ui.core.URI) -> sap.ui.ux3.FeedChunk","!category":"function"},"indexOfComment":{"!description":"Checks for the provided <code>sap.ui.ux3.FeedChunk<\/code> in the aggregation named <code>comments<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oComment: sap.ui.ux3.FeedChunk) -> Number","!category":"function"},"detachCommentAdded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'commentAdded' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"setEnableShare":{"!description":"Sets a new value for property <code>enableShare<\/code>.\n\nIf true the share action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableShare: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"setEnableInspect":{"!description":"Sets a new value for property <code>enableInspect<\/code>.\n\nIf true the inspect action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableInspect: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"setEnableComment":{"!description":"Sets a new value for property <code>enableComment<\/code>.\n\nIf true the comment action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableComment: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"getSender":{"!description":"Gets current value of property <code>sender<\/code>.\n\nSender of the chunk","!type":"fn() -> String","!category":"function"},"setFeederSender":{"!description":"Sets a new value for property <code>feederSender<\/code>.\n\nSender for the comment feeder\nThis property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFeederSender: String) -> sap.ui.ux3.FeedChunk","!category":"function"},"fireToggleFavorite":{"!description":"Fires event toggleFavorite to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'favorite' of type <code>boolean<\/code>Current favorite state<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"getThumbnailSrc":{"!description":"Gets current value of property <code>thumbnailSrc<\/code>.\n\nURL to the thumbnail image.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"removeAllComments":{"!description":"Removes all the controls in the aggregation named <code>comments<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.FeedChunk]","!category":"function"},"getComments":{"!description":"Gets content of aggregation <code>comments<\/code>.\n\nComments on this chunk","!type":"fn() -> [sap.ui.ux3.FeedChunk]","!category":"function"},"detachToggleShared":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'toggleShared' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"setFavorite":{"!description":"Sets a new value for property <code>favorite<\/code>.\n\nDefines whether the entry shall be displayed as favorite. This property is not supported for comment chunks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bFavorite: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"detachInspect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'inspect' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"destroyActionMenuItems":{"!description":"Destroys all the actionMenuItems in the aggregation\nnamed <code>actionMenuItems<\/code>.","!type":"fn() -> sap.ui.ux3.FeedChunk","!category":"function"},"getEnableFavorite":{"!description":"Gets current value of property <code>enableFavorite<\/code>.\n\nIf true the favorite action is enabled.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"attachDeleted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'deleted' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is fired when the deletion button is pressed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"attachReferenceClicked":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'referenceClicked' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nClick on a @-reference","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"fireDeleted":{"!description":"Fires event deleted to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","attachToggleFavorite":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'toggleFavorite' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is raised when the user clicks to set the entry as favorite. This event is not supported for comment chunks.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"setShared":{"!description":"Sets a new value for property <code>shared<\/code>.\n\nDefines whether the entry shall be shared. This property is not supported for comment chunks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShared: Boolean) -> sap.ui.ux3.FeedChunk","!category":"function"},"fireCommentAdded":{"!description":"Fires event commentAdded to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'comment' of type <code>sap.ui.ux3.FeedChunk<\/code>New comment chunk<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.FeedChunk","!category":"function"},"attachSenderClicked":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'senderClicked' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is fired when the thumbnail or the name of the sender is clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.FeedChunk.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"attachActionItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'actionItemSelected' event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is fired when an item from the action menu button was selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","!category":"function"}},"sap.ui.ux3.Overlay":{"getOpenButtonVisible":{"!description":"Gets current value of property <code>openButtonVisible<\/code>.\n\nDefines whether the 'Open' button shall be visible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireOpen":{"!description":"Fires event open to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>The ID of the Overlay instance<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Overlay","!category":"function"},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'close' event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Overlay","!category":"function"},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'open' event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Overlay","!category":"function"},"fireClose":{"!description":"Fires event close to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>The ID of the Overlay instance.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"detachOpenNew":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'openNew' event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Overlay","!category":"function"},"fireClosed":{"!description":"Fires event closed to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>The ID of the Overlay instance.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'close' event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Overlay<\/code> itself.\n\nEvent is fired when the Overlay starts closing.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","!category":"function"},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'closed' event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Overlay<\/code> itself.\n\nEvent is fired when the Overlay is closed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","!category":"function"},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'open' event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Overlay<\/code> itself.\n\nEvent is fired when the Overlay is opened.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","!category":"function"},"isOpen":{"!description":"Checks whether Overlay is open.","!type":"fn() -> Boolean","!category":"function"},"close":{"!description":"Closes the Overlay.","!type":"fn()","!category":"function"},"open":{"!description":"Opens the Overlay.","!type":"fn(initialFocusId: String)","!category":"function"},"!description":"Overlay Control","!category":"class","setOpenButtonVisible":{"!description":"Sets a new value for property <code>openButtonVisible<\/code>.\n\nDefines whether the 'Open' button shall be visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bOpenButtonVisible: Boolean) -> sap.ui.ux3.Overlay","!category":"function"},"attachOpenNew":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'openNew' event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Overlay<\/code> itself.\n\nEvent is fired when the 'Open' button of the Overlay is clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","!category":"function"},"setCloseButtonVisible":{"!description":"Sets a new value for property <code>closeButtonVisible<\/code>.\n\nDefines whether the 'Close' button shall be visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bCloseButtonVisible: Boolean) -> sap.ui.ux3.Overlay","!category":"function"},"fireOpenNew":{"!description":"Fires event openNew to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>The ID of the Overlay instance.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Overlay","!category":"function"},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'closed' event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Overlay","!category":"function"},"getCloseButtonVisible":{"!description":"Gets current value of property <code>closeButtonVisible<\/code>.\n\nDefines whether the 'Close' button shall be visible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Overlay.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.ux3.Feeder_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Feeder with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Feeder"},"sap.ui.ux3.ToolPopup":{"attachIconChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'iconChanged' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is fired when one of the icon properties is modified (Note: The icon is not\nrendered by the ToolPopup).\nTo be used by other controls which want to update the icon in their UI.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"getAutoClose":{"!description":"Gets current value of property <code>autoClose<\/code>.\n\nDetermines whether the ToolPopup will auto close when it loses focus.\nIf the user e.g. clicks outside of the ToolPopup it will be closed.\nPlease don't use \"modal\" and \"autoclose\" at the same time.\nIn this case a warning will be prompted to the console and \"autoclose\" won't be used.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setMaxHeight":{"!description":"Sets a new value for property <code>maxHeight<\/code>.\n\nForces a maximum height of the ToolPopup in pixels. If the ToolPopup content\nis higher than the ToolPopup, the content will be scrollable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.ui.ux3.ToolPopup","!category":"function"},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'close' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"setModal":{"!description":"Sets a new value for property <code>modal<\/code>.\n\nSpecifies whether the popup is modal and blocks any user-interaction with controls in the background.\nChanging this property while the ToolPopup is open will not have any effect.\nPlease don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will\nbe prompted to the console and \"autoclose\" won't be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bModal: Boolean) -> sap.ui.ux3.ToolPopup","!category":"function"},"setInverted":{"!description":"Sets a new value for property <code>inverted<\/code>.\n\nSpecifies whether the ToolPopup has a dark or bright background. If set to true\nthe background and borders will be dark. If false they will be bright.\nThis property only has an effect for the GoldReflection-theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bInverted: Boolean) -> sap.ui.ux3.ToolPopup","!category":"function"},"removeButton":{"!description":"Removes a button from the aggregation named <code>buttons<\/code>.","!type":"fn(vButton: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"removeFocusableArea":{"!description":"Removes an ID to the Popup that should be focusable as well when using <code>autoclose<\/code>.\nChaining is only possible if a valid type (string) is given.","!type":"fn(sID?: sap.ui.core.string)","!category":"function"},"close":{"!description":"Closes the pop up.\nCan be called by the Shell when the pop up's button is clicked again; or by the application\nwhen the interaction in the pop up has been completed or canceled.","!type":"fn(bPreventRestoreFocus: Boolean) -> sap.ui.ux3.ToolPopup","!category":"function"},"open":{"!description":"Opens the ToolPopup.\nIt is checked which control wants to open the ToolPopup. The Shell was previously\nset as parent so the corresponding parent element is used to set the correct position of the ToolPopup.\nIf another control (i.e. a button) opens the ToolPopup, the control must be previously\nset as <code>opener<\/code> via <code>setOpener<\/code> to the ToolPopup.\nCorresponding to this opener the position of the ToolPopup will be set.\nIt's also possible to set the position above, below or left from the opener.\nThis can be done via the possible parameters <code>my<\/code> and <code>at<\/code>.\nThese parameters refers to work the same way as they do of sap.ui.core.Popup.open.","!type":"fn(my?: sap.ui.core.Popup.Dock, at?: sap.ui.core.Popup.Dock) -> sap.ui.ux3.ToolPopup","!category":"function"},"detachEnter":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'enter' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"detachIconChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'iconChanged' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"addFocusableArea":{"!description":"Adds an ID to the Popup that should be focusable as well when using <code>autoclose<\/code>.\nChaining is only possible if a valid type (string) is given.","!type":"fn(sID?: sap.ui.core.string)","!category":"function"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDetermines the title displayed in the pop up window","!type":"fn() -> String","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nDefines the content of the popup","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'opened' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is being fired after the ToolPopup has been opened.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"setPosition":{"!description":"Sets the position of the pop up, the same parameters as for sap.ui.core.Popup can be used.","!type":"fn()","!category":"function"},"fireClosed":{"!description":"Fires event closed to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ToolPopup","!category":"function"},"getMaxHeight":{"!description":"Gets current value of property <code>maxHeight<\/code>.\n\nForces a maximum height of the ToolPopup in pixels. If the ToolPopup content\nis higher than the ToolPopup, the content will be scrollable.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDetermines the title displayed in the pop up window\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.ux3.ToolPopup","!category":"function"},"setAutoClose":{"!description":"Sets a new value for property <code>autoClose<\/code>.\n\nDetermines whether the ToolPopup will auto close when it loses focus.\nIf the user e.g. clicks outside of the ToolPopup it will be closed.\nPlease don't use \"modal\" and \"autoclose\" at the same time.\nIn this case a warning will be prompted to the console and \"autoclose\" won't be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAutoClose: Boolean) -> sap.ui.ux3.ToolPopup","!category":"function"},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'closed' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"getIconHover":{"!description":"Gets current value of property <code>iconHover<\/code>.\n\nThis property is relevant for Shell use:\nThe URL to the icon in hover state, displayed in the tool area which is used to open the popup.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getCloseDuration":{"!description":"Gets current value of property <code>closeDuration<\/code>.\n\nTime in milliseconds for the close animation.\n\nDefault value is <code>400<\/code>.","!type":"fn() -> Number","!category":"function"},"!proto":"sap.ui.core.Control","getDefaultButton":{"!description":"ID of the element which is the current target of the <code>defaultButton<\/code> association, or <code>null<\/code>.\n\nDefines one of the buttons that have been provided via button aggregation to be\nthe default button. This default button is initially selected, if no control\nis set via the initialFocus association explicitly. The default button is activated\nwhen Enter is pressed in the context of the dialog and when the currently selected element\ndoes not handle the Enter event itself.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"getOpener":{"!description":"ID of the element which is the current target of the <code>opener<\/code> association, or <code>null<\/code>.\n\nThis property is relevant for stand-alone use:\nThis association needs to be set if the ToolPopup should not be opened by/with\nthe Shell. This association contains the instance of the control that\nassigns the ToolPopup's position.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"getInverted":{"!description":"Gets current value of property <code>inverted<\/code>.\n\nSpecifies whether the ToolPopup has a dark or bright background. If set to true\nthe background and borders will be dark. If false they will be bright.\nThis property only has an effect for the GoldReflection-theme.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireOpen":{"!description":"Fires event open to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ToolPopup","!category":"function"},"getEnabled":{"!description":"Indicates whether the ToolPopup is currently enabled or not.\n\nApplications can't control the enabled state via a property. A ToolPopup is implicitly\nenabled depending on its <code>openState<\/code>. Descendant controls that honor the\nenabled state of their ancestors will appear disabled after the ToolPopup is closed.\n\nSince 1.13.1. Whether a dialog is regarded as \"enabled\" during the state transitions\n(OPENING, CLOSING) is not fully decided. Currently, it is enabled during the OPENING phase\nand disabled during the CLOSING phase. The only potential change would be to treat the\nOPENING phase as disabled as well. Applications should be prepared to receive events from\n\"enabled\" controls after they called open() on the dialog until close() is called on it.\nIf the mentioned potential change should happen, the dialog will become enabled only\nafter the transition to OPEN. Events from \"enabled\" children then can still only arrive\nbetween open() and close(), so applications that obey the previous rule should continue\nto work. Only end users or code that explicitly triggers pseudo user events would notice\na difference. <br>\nA second aspect that might change is the visual behavior of the content: during the CLOSING\nphase it 'looks' enabled but in fact it is already disabled. This avoids unnecessary redraws\nfor content that becomes hidden soon. Should this show to be confusing for end users, it might\nbe changed.","!type":"fn() -> Boolean","!category":"function"},"getOpenDuration":{"!description":"Gets current value of property <code>openDuration<\/code>.\n\nTime in milliseconds for the open animation.\n\nDefault value is <code>400<\/code>.","!type":"fn() -> Number","!category":"function"},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'opened' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'open' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"fireEnter":{"!description":"Fires event enter to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'originalEvent' of type <code>object<\/code>The onsapenter event, received by the pop up<\/li>\n<li>'originalSrcControl' of type <code>sap.ui.core.Control<\/code>The control that was focused when the user pressed the Enter key (may be null)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ToolPopup","!category":"function"},"setDefaultButton":{"!description":"Sets the associated <code>defaultButton<\/code>.","!type":"fn(oDefaultButton: sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThis property is relevant for Shell use:\nThe URL to the icon displayed in the tool area which is used to open the ToolPopup.\nThe recommended size is 32x32px, including some transparent border. Therefore,\nthe content will cover about 20x20px.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"setCloseDuration":{"!description":"Sets a new value for property <code>closeDuration<\/code>.\n\nTime in milliseconds for the close animation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>400<\/code>.","!type":"fn(iCloseDuration: Number) -> sap.ui.ux3.ToolPopup","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.ux3.ToolPopup","!category":"function"},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nForces a maximum width of the ToolPopup in pixels.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"attachEnter":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'enter' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is fired whenever the user clicks the Enter or the Enter key inside the pop up","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation\nnamed <code>buttons<\/code>.","!type":"fn() -> sap.ui.ux3.ToolPopup","!category":"function"},"setInitialFocus":{"!description":"Sets the associated <code>initialFocus<\/code>.","!type":"fn(oInitialFocus: sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","!category":"function"},"!category":"class","setAutoCloseAreas":{"!description":"This is just a forward to the Popup's function (sap.ui.core.Popup.setAutoCloseAreas)\nwith the same functionality.","!type":"fn(aAutoCloseAreas: [Element])","!category":"function"},"fireOpened":{"!description":"Fires event opened to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ToolPopup","!category":"function"},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.core.Control) -> Number","!category":"function"},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nDefines the buttons to appear in the popup","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getInitialFocus":{"!description":"ID of the element which is the current target of the <code>initialFocus<\/code> association, or <code>null<\/code>.\n\nDefines the control that will get the focus when the ToolPopup is opened.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"getModal":{"!description":"Gets current value of property <code>modal<\/code>.\n\nSpecifies whether the popup is modal and blocks any user-interaction with controls in the background.\nChanging this property while the ToolPopup is open will not have any effect.\nPlease don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will\nbe prompted to the console and \"autoclose\" won't be used.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireClose":{"!description":"Fires event close to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"setOpenDuration":{"!description":"Sets a new value for property <code>openDuration<\/code>.\n\nTime in milliseconds for the open animation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>400<\/code>.","!type":"fn(iOpenDuration: Number) -> sap.ui.ux3.ToolPopup","!category":"function"},"fireIconChanged":{"!description":"Fires event iconChanged to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ToolPopup","!category":"function"},"attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'close' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is fired when the popup closes because the user pressed Escape or the ToolPopup\nButton in the Shell. This is called before the closing animation.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'closed' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nThis event is fired after the ToolPopup has finished its closing animation.\nIt is called for EVERY close, regardless of whether the user has triggered the\nclose or whether the ToolPopup was closed via API call.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'open' event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is fired when the popup opens","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","!category":"function"},"isOpen":{"!description":"Indicates whether the pop up is currently open","!type":"fn() -> Boolean","!category":"function"},"removeAllButtons":{"!description":"Removes all the controls in the aggregation named <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"insertButton":{"!description":"Inserts a button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.ToolPopup","!category":"function"},"!description":"A popup which the user can open from the Shell's tool pane. Generally, the starting point would be an icon.\nFor this pop up, buttons can be defined with any text; therefore, it has the same purpose\nand similar look like any common dialog box.\nA ToolPopup can have any content. Depending on the application type and design, the structure\nof the texts and input fields can be for example form-like.","insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.ToolPopup","!category":"function"},"addButton":{"!description":"Adds some button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","!category":"function"},"setOpener":{"!description":"Sets the associated <code>opener<\/code>.","!type":"fn(oOpener: sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ToolPopup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.FeederType":{"Medium":{"!description":"medium feeder","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Large":{"!description":"large Feeder","!type":"String","!category":"enum"},"Comment":{"!description":"comment feeder (small)","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.ux3.OverlayContainer":{"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.ux3.OverlayContainer","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.OverlayContainer","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.OverlayContainer","!category":"function"},"!description":"Is to be embedded into the Overlay control as content container","removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nAggregation for content","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"!category":"class","removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.OverlayContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.ux3.Overlay"},"sap.ui.ux3.NavigationItem":{"indexOfSubItem":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation named <code>subItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSubItem: sap.ui.ux3.NavigationItem) -> Number","!category":"function"},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nWhether the NavigationItem is currently visible. When making NavigationItems invisible at runtime it is the application's responsibility to make sure it is not the currently selected one - or to select another one in this case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.ux3.NavigationItem","!category":"function"},"removeSubItem":{"!description":"Removes a subItem from the aggregation named <code>subItems<\/code>.","!type":"fn(vSubItem: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","!category":"function"},"getSubItems":{"!description":"Gets content of aggregation <code>subItems<\/code>.\n\nAny NavigationItems on the next hierarchy level connected to this NavigationItem","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nWhether the NavigationItem is currently visible. When making NavigationItems invisible at runtime it is the application's responsibility to make sure it is not the currently selected one - or to select another one in this case.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"Is the item to be used within the NavigationBar","insertSubItem":{"!description":"Inserts a subItem into the aggregation named <code>subItems<\/code>.","!type":"fn(oSubItem: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.NavigationItem","!category":"function"},"setHref":{"!description":"Sets a new value for property <code>href<\/code>.\n\nDefines the link target URL. This property is optional and should only be set when required!\nThe use of the href property is to not only allow users to navigate in-place by left-clicking NavigationItems, but also to allow right-click and then \"open in new tab\" or \"open in new window\". As long as href is not set, an empty window will open and stay blank. But when href is set, the new window/tab will load this URL and it is the application's responsibility to display what the user expects (e.g. the Shell, with the respective NavigationItem being selected).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHref: sap.ui.core.URI) -> sap.ui.ux3.NavigationItem","!category":"function"},"removeAllSubItems":{"!description":"Removes all the controls in the aggregation named <code>subItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"!category":"class","addSubItem":{"!description":"Adds some subItem into the aggregation named <code>subItems<\/code>.","!type":"fn(oSubItem: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","!category":"function"},"destroySubItems":{"!description":"Destroys all the subItems in the aggregation\nnamed <code>subItems<\/code>.","!type":"fn() -> sap.ui.ux3.NavigationItem","!category":"function"},"getHref":{"!description":"Gets current value of property <code>href<\/code>.\n\nDefines the link target URL. This property is optional and should only be set when required!\nThe use of the href property is to not only allow users to navigate in-place by left-clicking NavigationItems, but also to allow right-click and then \"open in new tab\" or \"open in new window\". As long as href is not set, an empty window will open and stay blank. But when href is set, the new window/tab will load this URL and it is the application's responsibility to display what the user expects (e.g. the Shell, with the respective NavigationItem being selected).","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!proto":"sap.ui.core.Item","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.NavigationItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.ThingViewerHeaderType":{"Standard":{"!description":"The standard ThingViewer header.","!type":"String","!category":"enum"},"!description":"Available ThingViewer header display types.","!category":"static class","Horizontal":{"!description":"The header content is displayed horizontally above the facet content","!type":"String","!category":"enum"}},"sap.ui.ux3.ShellDesignType":{"Standard":{"!description":"The standard Shell design (dark).","!type":"String","!category":"enum"},"Crystal":{"!description":"\nAn even lighter design. It borrows most of its properties from the Light\ndesign and just changes a few details like the header colors in order to\nhave a blue design within gold reflection.","!type":"String","!category":"enum"},"!description":"Available shell design types.","!category":"static class","Light":{"!description":"\nA lighter design. Should be used in combination with the Standard header\ntype.","!type":"String","!category":"enum"}},"sap.ui.ux3.ThingGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ThingGroup"},"sap.ui.ux3.ThingInspector_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingInspector with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ThingInspector"},"sap.ui.ux3.DataSet_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSet with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.DataSet"},"sap.ui.ux3.DataSetSimpleView":{"getInitialItemCount":{"!description":"Gets current value of property <code>initialItemCount<\/code>.\n\nIf this value is greater zero only this amount of items is loaded in the first place. New items are loaded automatically when the user scrolls down. The number of items which are reloaded can be defined with the property \"reloadItemCount\"\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"getIconSelected":{"!description":"Gets current value of property <code>iconSelected<\/code>.\n\nicon: selected state","!type":"fn() -> sap.ui.core.URI","!category":"function"},"setItemMinWidth":{"!description":"Sets a new value for property <code>itemMinWidth<\/code>.\n\nWhen itemMinWidth>0 and the property floating is true the given minimum width in pixels is set to DatSet items. A minimum width must be given when the property responsive is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iItemMinWidth: Number) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"getItemMinWidth":{"!description":"Gets current value of property <code>itemMinWidth<\/code>.\n\nWhen itemMinWidth>0 and the property floating is true the given minimum width in pixels is set to DatSet items. A minimum width must be given when the property responsive is set.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"exitView":{"!description":"View finalization: Called when leaving the view","!type":"fn(aItems: [sap.ui.ux3.DataSetItem])","!category":"function"},"setInitialItemCount":{"!description":"Sets a new value for property <code>initialItemCount<\/code>.\n\nIf this value is greater zero only this amount of items is loaded in the first place. New items are loaded automatically when the user scrolls down. The number of items which are reloaded can be defined with the property \"reloadItemCount\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iInitialItemCount: Number) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"setIconHovered":{"!description":"Sets a new value for property <code>iconHovered<\/code>.\n\nicon: hovered state\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"getFloating":{"!description":"Gets current value of property <code>floating<\/code>.\n\nWhen true the DatSet items are floating containers. When set to false The Items are rendered in a 1 column Layout.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getScrollArea":{"!description":"Gets current value of property <code>scrollArea<\/code>.\n\nID of the DOM Element or jQuery reference to the dom which holds the scrollbar for the dataset","!type":"fn() -> Object","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon source for this view","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nIf the pagination feature is used without specifying a scroll area, a height for the dataset must be defined.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getIconHovered":{"!description":"Gets current value of property <code>iconHovered<\/code>.\n\nicon: hovered state","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!category":"class","isItemSelected":{"!description":"Check if Item <code>oItem<\/code> is selected","!type":"fn(oItem: sap.ui.ux3.DataSetItem)","!category":"function"},"getReloadItemCount":{"!description":"Gets current value of property <code>reloadItemCount<\/code>.\n\nThis number defines the item count which is reloaded on scroll if initialItemCount is enabled.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"updateView":{"!description":"View update: Called when pagination adds items","!type":"fn(aDiff: [sap.ui.ux3.DataSetItem])","!category":"function"},"handleSelection":{"!description":"Eventhandler for the selection of an Item","!type":"fn(oEvent: event)","!category":"function"},"getTemplate":{"!description":"Gets content of aggregation <code>template<\/code>.\n\ntemplate","!type":"fn() -> sap.ui.core.Control","!category":"function"},"destroyTemplate":{"!description":"Destroys the template in the aggregation\nnamed <code>template<\/code>.","!type":"fn() -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"setIconSelected":{"!description":"Sets a new value for property <code>iconSelected<\/code>.\n\nicon: selected state\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"setReloadItemCount":{"!description":"Sets a new value for property <code>reloadItemCount<\/code>.\n\nThis number defines the item count which is reloaded on scroll if initialItemCount is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iReloadItemCount: Number) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"setResponsive":{"!description":"Sets a new value for property <code>responsive<\/code>.\n\nWhen true and the property floating is true the DatSet items are floating containers filling the whole space of a row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bResponsive: Boolean) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"setScrollArea":{"!type":"fn(aScrollArea: [Object], bSupress: Boolean)","!category":"function"},"!description":"DataSetSimpleView provides a simple view example for DataSet usage.","getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nName of the View\n\nDefault value is <code>Name of this View<\/code>.","!type":"fn() -> String","!category":"function"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nIf the pagination feature is used without specifying a scroll area, a height for the dataset must be defined.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"setTemplate":{"!description":"Sets the aggregated <code>template<\/code>.","!type":"fn(oTemplate: sap.ui.core.Control) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nName of the View\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Name of this View<\/code>.","!type":"fn(sName: String) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon source for this view\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"getResponsive":{"!description":"Gets current value of property <code>responsive<\/code>.\n\nWhen true and the property floating is true the DatSet items are floating containers filling the whole space of a row.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"initView":{"!description":"View Initialization: Called when selecting the view","!type":"fn(aItems: Array)","!category":"function"},"setFloating":{"!description":"Sets a new value for property <code>floating<\/code>.\n\nWhen true the DatSet items are floating containers. When set to false The Items are rendered in a 1 column Layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFloating: Boolean) -> sap.ui.ux3.DataSetSimpleView","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.DataSetSimpleView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.ux3.ThingViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingViewer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ThingViewer"},"sap.ui.ux3.NavigationBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NavigationBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.NavigationBar"},"sap.ui.ux3.DataSet":{"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.ux3.DataSetItem) -> sap.ui.ux3.DataSetItem","!category":"function"},"getShowSearchField":{"!description":"Gets current value of property <code>showSearchField<\/code>.\n\nShow/hide SearchField in Toolbar\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setSelectedView":{"!description":"Sets the associated <code>selectedView<\/code>.","!type":"fn(oSelectedView: sap.ui.ux3.DataSetView) -> sap.ui.ux3.DataSet","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.ux3.DataSetItem<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.ux3.DataSetItem) -> Number","!category":"function"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!type":"fn() -> sap.ui.ux3.DataSet","!category":"function"},"addView":{"!description":"Adds some view into the aggregation named <code>views<\/code>.","!type":"fn(oView: sap.ui.ux3.DataSetView) -> sap.ui.ux3.DataSet","!category":"function"},"getMultiSelect":{"!description":"Gets current value of property <code>multiSelect<\/code>.\n\nSelection mode of the DataSet\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setShowFilter":{"!description":"Sets a new value for property <code>showFilter<\/code>.\n\nshow filter\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowFilter: Boolean) -> sap.ui.ux3.DataSet","!category":"function"},"indexOfFilter":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>filter<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFilter: sap.ui.core.Control) -> Number","!category":"function"},"indexOfView":{"!description":"Checks for the provided <code>sap.ui.ux3.DataSetView<\/code> in the aggregation named <code>views<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oView: sap.ui.ux3.DataSetView) -> Number","!category":"function"},"isSelectedIndex":{"!description":"Returns true if iIndex is selected","!type":"fn(iIndex: Number) -> Boolean","!category":"function"},"insertView":{"!description":"Inserts a view into the aggregation named <code>views<\/code>.","!type":"fn(oView: sap.ui.ux3.DataSetView, iIndex: Number) -> sap.ui.ux3.DataSet","!category":"function"},"getFilter":{"!description":"Gets content of aggregation <code>filter<\/code>.\n\nFilter control (e.g. a FacetFilter) for the DataSet","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllViews":{"!description":"Removes all the controls in the aggregation named <code>views<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.DataSetView]","!category":"function"},"removeView":{"!description":"Removes a view from the aggregation named <code>views<\/code>.","!type":"fn(vView: Number | String | sap.ui.ux3.DataSetView) -> sap.ui.ux3.DataSetView","!category":"function"},"removeToolbarItem":{"!description":"remove a toolbarItem to the toolbar","!type":"fn(oOToolbarItem: sap.ui.commons.ToolbarItem)","!category":"function"},"getViews":{"!description":"Gets content of aggregation <code>views<\/code>.\n\nviews","!type":"fn() -> [sap.ui.ux3.DataSetView]","!category":"function"},"destroyViews":{"!description":"Destroys all the views in the aggregation\nnamed <code>views<\/code>.","!type":"fn() -> sap.ui.ux3.DataSet","!category":"function"},"addFilter":{"!description":"Adds some filter into the aggregation named <code>filter<\/code>.","!type":"fn(oFilter: sap.ui.core.Control) -> sap.ui.ux3.DataSet","!category":"function"},"getSelectedIndices":{"!description":"use this function to retrieve all selected indices if multiple select is enabled","!type":"fn()","!category":"function"},"createViewSwitch":{"!description":"Creates a view switch button","!type":"fn(oView: Object, iIndex: Number) -> Object","!category":"function"},"fireSelectionChanged":{"!description":"Fires event selectionChanged to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'oldLeadSelectedIndex' of type <code>int<\/code>Old lead selected index<\/li>\n<li>'newLeadSelectedIndex' of type <code>int<\/code>New lead selected index<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.DataSet","!category":"function"},"_rerenderFilter":{"!description":"Rerendering of the FilterArea","!type":"fn()","!category":"function"},"setShowToolbar":{"!description":"Sets a new value for property <code>showToolbar<\/code>.\n\nshow Toolbar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowToolbar: Boolean) -> sap.ui.ux3.DataSet","!category":"function"},"setLeadSelection":{"!description":"Set the LeadSelection index","!type":"fn(iIIndex: Number)","!category":"function"},"addToolbarItem":{"!description":"add a toolbarItem to the toolbar","!type":"fn(oOToolbarItem: sap.ui.commons.ToolbarItem)","!category":"function"},"getSelectedIndex":{"!description":"use this function to retrieve the lead selected index","!type":"fn()","!category":"function"},"removeFilter":{"!description":"Removes a filter from the aggregation named <code>filter<\/code>.","!type":"fn(vFilter: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"!proto":"sap.ui.core.Control","attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'selectionChanged' event of this <code>sap.ui.ux3.DataSet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.DataSet<\/code> itself.\n\nselection Changed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSet","!category":"function"},"getLeadSelection":{"!description":"Returns the LeadSelection index","!type":"fn(sItemId: String) -> Number","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.ux3.DataSetItem) -> sap.ui.ux3.DataSet","!category":"function"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.DataSet","!category":"function"},"removeAllFilter":{"!description":"Removes all the controls in the aggregation named <code>filter<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'search' event of this <code>sap.ui.ux3.DataSet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.DataSet<\/code> itself.\n\nEvent which is fired when the user triggers a search","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSet","!category":"function"},"getShowToolbar":{"!description":"Gets current value of property <code>showToolbar<\/code>.\n\nshow Toolbar\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","fireSearch":{"!description":"Fires event search to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'query' of type <code>string<\/code>The search query<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.DataSet","!category":"function"},"setMultiSelect":{"!description":"setter for multi selection mode","!type":"fn(bMode: Boolean)","!category":"function"},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'search' event of this <code>sap.ui.ux3.DataSet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.DataSet","!category":"function"},"getShowFilter":{"!description":"Gets current value of property <code>showFilter<\/code>.\n\nshow filter\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setShowSearchField":{"!description":"Sets a new value for property <code>showSearchField<\/code>.\n\nShow/hide SearchField in Toolbar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSearchField: Boolean) -> sap.ui.ux3.DataSet","!category":"function"},"getSelectedView":{"!description":"ID of the element which is the current target of the <code>selectedView<\/code> association, or <code>null<\/code>.\n\nSelected view of the Dataset","!type":"fn() -> sap.ui.ux3.DataSetView","!category":"function"},"clearSelection":{"!description":"clears dataset from all previous selections","!type":"fn()","!category":"function"},"!description":"DataSet","destroyFilter":{"!description":"Destroys all the filter in the aggregation\nnamed <code>filter<\/code>.","!type":"fn() -> sap.ui.ux3.DataSet","!category":"function"},"insertFilter":{"!description":"Inserts a filter into the aggregation named <code>filter<\/code>.","!type":"fn(oFilter: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.DataSet","!category":"function"},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregation of DataSetItems","!type":"fn() -> [sap.ui.ux3.DataSetItem]","!category":"function"},"_rerenderToolbar":{"!description":"Rerendering of the Toolbar","!type":"fn()","!category":"function"},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'selectionChanged' event of this <code>sap.ui.ux3.DataSet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.DataSet","!category":"function"},"destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.ux3.DataSet","!category":"function"},"getSelectedItemId":{"!description":"Returns id of selected Item from given index","!type":"fn(iIndex: Number) -> String","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.DataSetItem]","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.ux3.DataSetItem, iIndex: Number) -> sap.ui.ux3.DataSet","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.DataSet.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.ThingInspector":{"addFacetContent":{"!description":"Adds some facetContent into the aggregation named <code>facetContent<\/code>.","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingInspector","!category":"function"},"insertFacet":{"!description":"Inserts a facet into the aggregation named <code>facets<\/code>.","!type":"fn(oFacet: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.ThingInspector","!category":"function"},"attachActionSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'actionSelected' event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ThingInspector<\/code> itself.\n\nFurther thing related Action selected","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","!category":"function"},"detachFeedSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'feedSubmit' event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ThingInspector","!category":"function"},"open":{"!description":"Opens this instance of ThingIspector","!type":"fn(initialFocusId?: String)","!category":"function"},"getFacets":{"!description":"Gets content of aggregation <code>facets<\/code>.\n\nThing Inspector facets","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"removeFacetContent":{"!description":"Removes a facetContent from the aggregation named <code>facetContent<\/code>.","!type":"fn(vFacetContent: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","!category":"function"},"removeAllFacets":{"!description":"Removes all the controls in the aggregation named <code>facets<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"attachFeedSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'feedSubmit' event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ThingInspector<\/code> itself.\n\nFired when a new feed entry is submitted.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","!category":"function"},"insertFacetContent":{"!description":"Inserts a facetContent into the aggregation named <code>facetContent<\/code>.","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingInspector","!category":"function"},"setHeaderType":{"!description":"Sets a new value for property <code>headerType<\/code>.\n\nDefines which header type should be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sHeaderType: sap.ui.ux3.ThingViewerHeaderType) -> sap.ui.ux3.ThingInspector","!category":"function"},"addHeaderContent":{"!description":"Adds some headerContent into the aggregation named <code>headerContent<\/code>.","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingInspector","!category":"function"},"getUpdateActionEnabled":{"!description":"Gets current value of property <code>updateActionEnabled<\/code>.\n\nUpdate action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setFlagState":{"!description":"Sets a new value for property <code>flagState<\/code>.\n\nState of Flag Action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFlagState: Boolean) -> sap.ui.ux3.ThingInspector","!category":"function"},"setFavoriteState":{"!description":"Sets a new value for property <code>favoriteState<\/code>.\n\nState Of favorite Action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFavoriteState: Boolean) -> sap.ui.ux3.ThingInspector","!category":"function"},"detachActionSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'actionSelected' event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ThingInspector","!category":"function"},"getSecondTitle":{"!description":"Gets current value of property <code>secondTitle<\/code>.\n\nSecond Line of the Thing Inspector Title","!type":"fn() -> String","!category":"function"},"getFirstTitle":{"!description":"Gets current value of property <code>firstTitle<\/code>.\n\nFirst Line of the Thing Inspector Title","!type":"fn() -> String","!category":"function"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nThing type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sType: String) -> sap.ui.ux3.ThingInspector","!category":"function"},"getFacetContent":{"!description":"Gets content of aggregation <code>facetContent<\/code>.\n\nThingGroups for content of the selected facet","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"getActions":{"!description":"Gets content of aggregation <code>actions<\/code>.\n\nActions of a Thing","!type":"fn() -> [sap.ui.ux3.ThingAction]","!category":"function"},"insertAction":{"!description":"Inserts a action into the aggregation named <code>actions<\/code>.","!type":"fn(oAction: sap.ui.ux3.ThingAction, iIndex: Number) -> sap.ui.ux3.ThingInspector","!category":"function"},"setFirstTitle":{"!description":"Sets a new value for property <code>firstTitle<\/code>.\n\nFirst Line of the Thing Inspector Title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFirstTitle: String) -> sap.ui.ux3.ThingInspector","!category":"function"},"destroyActions":{"!description":"Destroys all the actions in the aggregation\nnamed <code>actions<\/code>.","!type":"fn() -> sap.ui.ux3.ThingInspector","!category":"function"},"indexOfFacet":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation named <code>facets<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFacet: sap.ui.ux3.NavigationItem) -> Number","!category":"function"},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation named <code>headerContent<\/code>.","!type":"fn(vHeaderContent: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","!category":"function"},"destroyActionBar":{"!description":"Destroys the actionBar in the aggregation\nnamed <code>actionBar<\/code>.","!type":"fn() -> sap.ui.ux3.ThingInspector","!category":"function"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThing Icon Url\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.ThingInspector","!category":"function"},"getHeaderContent":{"!description":"Gets content of aggregation <code>headerContent<\/code>.\n\nThingGroups for the header content","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"setUpdateActionEnabled":{"!description":"Sets a new value for property <code>updateActionEnabled<\/code>.\n\nUpdate action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUpdateActionEnabled: Boolean) -> sap.ui.ux3.ThingInspector","!category":"function"},"!proto":"sap.ui.ux3.Overlay","attachFacetSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'facetSelected' event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ThingInspector<\/code> itself.\n\nEvent for facet selection. The application is responsible for displaying the correct content for the selected one. The ThingInspector will currently always mark the first facet as selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","!category":"function"},"removeAllFacetContent":{"!description":"Removes all the controls in the aggregation named <code>facetContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"setSecondTitle":{"!description":"Sets a new value for property <code>secondTitle<\/code>.\n\nSecond Line of the Thing Inspector Title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSecondTitle: String) -> sap.ui.ux3.ThingInspector","!category":"function"},"destroyFacets":{"!description":"Destroys all the facets in the aggregation\nnamed <code>facets<\/code>.","!type":"fn() -> sap.ui.ux3.ThingInspector","!category":"function"},"getFavoriteState":{"!description":"Gets current value of property <code>favoriteState<\/code>.\n\nState Of favorite Action\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThing Icon Url","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nThing type","!type":"fn() -> String","!category":"function"},"removeAllActions":{"!description":"Removes all the controls in the aggregation named <code>actions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ThingAction]","!category":"function"},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation named <code>headerContent<\/code>.","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingInspector","!category":"function"},"setFavoriteActionEnabled":{"!description":"Sets a new value for property <code>favoriteActionEnabled<\/code>.\n\nFavorite action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFavoriteActionEnabled: Boolean) -> sap.ui.ux3.ThingInspector","!category":"function"},"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation\nnamed <code>headerContent<\/code>.","!type":"fn() -> sap.ui.ux3.ThingInspector","!category":"function"},"getFlagActionEnabled":{"!description":"Gets current value of property <code>flagActionEnabled<\/code>.\n\nFlag action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","getFollowState":{"!description":"Gets current value of property <code>followState<\/code>.\n\nFollow State of a Thing\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.ux3.FollowActionState","!category":"function"},"addFacet":{"!description":"Adds some facet into the aggregation named <code>facets<\/code>.","!type":"fn(oFacet: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.ThingInspector","!category":"function"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingAction<\/code> in the aggregation named <code>actions<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAction: sap.ui.ux3.ThingAction) -> Number","!category":"function"},"setActionBar":{"!description":"Sets the aggregated <code>actionBar<\/code>.","!type":"fn(oActionBar: sap.ui.ux3.ActionBar) -> sap.ui.ux3.ThingInspector","!category":"function"},"getFavoriteActionEnabled":{"!description":"Gets current value of property <code>favoriteActionEnabled<\/code>.\n\nFavorite action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setSelectedFacet":{"!description":"Sets the associated <code>selectedFacet<\/code>.","!type":"fn(oSelectedFacet: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.ThingInspector","!category":"function"},"fireFeedSubmit":{"!description":"Fires event feedSubmit to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'text' of type <code>string<\/code>Feed text<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ThingInspector","!category":"function"},"setFlagActionEnabled":{"!description":"Sets a new value for property <code>flagActionEnabled<\/code>.\n\nFlag action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFlagActionEnabled: Boolean) -> sap.ui.ux3.ThingInspector","!category":"function"},"setFollowState":{"!description":"Sets a new value for property <code>followState<\/code>.\n\nFollow State of a Thing\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sFollowState: sap.ui.ux3.FollowActionState) -> sap.ui.ux3.ThingInspector","!category":"function"},"removeAllHeaderContent":{"!description":"Removes all the controls in the aggregation named <code>headerContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"fireActionSelected":{"!description":"Fires event actionSelected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>Id of selected ThingAction<\/li>\n<li>'action' of type <code>sap.ui.ux3.ThingAction<\/code>Selected ThingAction<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ThingInspector","!category":"function"},"detachFacetSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'facetSelected' event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ThingInspector","!category":"function"},"fireFacetSelected":{"!description":"Fires event facetSelected to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>Id of selected NavigationItem<\/li>\n<li>'item' of type <code>sap.ui.ux3.NavigationItem<\/code>The selected NavigationItem<\/li>\n<li>'key' of type <code>string<\/code>Key of selected NavigationItem<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"getFlagState":{"!description":"Gets current value of property <code>flagState<\/code>.\n\nState of Flag Action\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"indexOfFacetContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation named <code>facetContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup) -> Number","!category":"function"},"!description":"Thing Inspector","indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation named <code>headerContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup) -> Number","!category":"function"},"setFollowActionEnabled":{"!description":"Sets a new value for property <code>followActionEnabled<\/code>.\n\nFollow action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFollowActionEnabled: Boolean) -> sap.ui.ux3.ThingInspector","!category":"function"},"getFollowActionEnabled":{"!description":"Gets current value of property <code>followActionEnabled<\/code>.\n\nFollow action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getActionBar":{"!description":"Gets content of aggregation <code>actionBar<\/code>.\n\nActionBar. If no actionBar is set a default ActionBar will be created.","!type":"fn() -> sap.ui.ux3.ActionBar","!category":"function"},"removeFacet":{"!description":"Removes a facet from the aggregation named <code>facets<\/code>.","!type":"fn(vFacet: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","!category":"function"},"getSelectedFacet":{"!description":"ID of the element which is the current target of the <code>selectedFacet<\/code> association, or <code>null<\/code>.\n\nThe Facet that is currently selected.","!type":"fn() -> sap.ui.ux3.NavigationItem","!category":"function"},"addAction":{"!description":"Adds some action into the aggregation named <code>actions<\/code>.","!type":"fn(oAction: sap.ui.ux3.ThingAction) -> sap.ui.ux3.ThingInspector","!category":"function"},"getHeaderType":{"!description":"Gets current value of property <code>headerType<\/code>.\n\nDefines which header type should be used.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.ux3.ThingViewerHeaderType","!category":"function"},"removeAction":{"!description":"Removes a action from the aggregation named <code>actions<\/code>.","!type":"fn(vAction: Number | String | sap.ui.ux3.ThingAction) -> sap.ui.ux3.ThingAction","!category":"function"},"destroyFacetContent":{"!description":"Destroys all the facetContent in the aggregation\nnamed <code>facetContent<\/code>.","!type":"fn() -> sap.ui.ux3.ThingInspector","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ThingInspector.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.ThingViewer":{"attachFacetSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'facetSelected' event of this <code>sap.ui.ux3.ThingViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ThingViewer<\/code> itself.\n\nEvent for facet selection. The application is responsible for displaying the correct content for the selected one. The ThingInspector will currently always mark the first facet as selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingViewer","!category":"function"},"removeAllFacetContent":{"!description":"Removes all the controls in the aggregation named <code>facetContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"addFacetContent":{"!description":"Adds some facetContent into the aggregation named <code>facetContent<\/code>.","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingViewer","!category":"function"},"insertFacet":{"!description":"Inserts a facet into the aggregation named <code>facets<\/code>.","!type":"fn(oFacet: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.ThingViewer","!category":"function"},"destroyFacets":{"!description":"Destroys all the facets in the aggregation\nnamed <code>facets<\/code>.","!type":"fn() -> sap.ui.ux3.ThingViewer","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThing Icon Url","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getFacets":{"!description":"Gets content of aggregation <code>facets<\/code>.\n\nThing Inspector facets","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of the ThingViewer\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nThing type","!type":"fn() -> String","!category":"function"},"removeFacetContent":{"!description":"Removes a facetContent from the aggregation named <code>facetContent<\/code>.","!type":"fn(vFacetContent: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","!category":"function"},"removeAllFacets":{"!description":"Removes all the controls in the aggregation named <code>facets<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.NavigationItem]","!category":"function"},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation named <code>headerContent<\/code>.","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingViewer","!category":"function"},"insertFacetContent":{"!description":"Inserts a facetContent into the aggregation named <code>facetContent<\/code>.","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingViewer","!category":"function"},"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation\nnamed <code>headerContent<\/code>.","!type":"fn() -> sap.ui.ux3.ThingViewer","!category":"function"},"setHeaderType":{"!description":"Sets a new value for property <code>headerType<\/code>.\n\nDefines which header type should be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sHeaderType: sap.ui.ux3.ThingViewerHeaderType) -> sap.ui.ux3.ThingViewer","!category":"function"},"!category":"class","setSubtitle":{"!description":"Sets a new value for property <code>subtitle<\/code>.\n\nSubtitle of the Thing Inspector\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSubtitle: String) -> sap.ui.ux3.ThingViewer","!category":"function"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the ThingViewer\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle of the Thing Inspector","!type":"fn() -> String","!category":"function"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the ThingViewer\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.ux3.ThingViewer","!category":"function"},"addFacet":{"!description":"Adds some facet into the aggregation named <code>facets<\/code>.","!type":"fn(oFacet: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.ThingViewer","!category":"function"},"setActionBar":{"!description":"Sets the aggregated <code>actionBar<\/code>.","!type":"fn(oActionBar: sap.ui.ux3.ActionBar) -> sap.ui.ux3.ThingViewer","!category":"function"},"addHeaderContent":{"!description":"Adds some headerContent into the aggregation named <code>headerContent<\/code>.","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingViewer","!category":"function"},"setSelectedFacet":{"!description":"Sets the associated <code>selectedFacet<\/code>.","!type":"fn(oSelectedFacet: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.ThingViewer","!category":"function"},"getSubtitle":{"!description":"Gets current value of property <code>subtitle<\/code>.\n\nSubtitle of the Thing Inspector","!type":"fn() -> String","!category":"function"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nThing type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sType: String) -> sap.ui.ux3.ThingViewer","!category":"function"},"getFacetContent":{"!description":"Gets content of aggregation <code>facetContent<\/code>.\n\nThingGroups for content of the selected facet","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"removeAllHeaderContent":{"!description":"Removes all the controls in the aggregation named <code>headerContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"detachFacetSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'facetSelected' event of this <code>sap.ui.ux3.ThingViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ThingViewer","!category":"function"},"fireFacetSelected":{"!description":"Fires event facetSelected to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>Id of selected NavigationItem<\/li>\n<li>'item' of type <code>sap.ui.ux3.NavigationItem<\/code>The selected NavigationItem<\/li>\n<li>'key' of type <code>string<\/code>Key of selected NavigationItem<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"indexOfFacetContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation named <code>facetContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup) -> Number","!category":"function"},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation named <code>headerContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup) -> Number","!category":"function"},"!description":"ThingViewer: Same as ThingInspector but decoupled from the Overlay and the ActionBar.\nThe control can be added to a Parent container that has a defined width. The ThingViewer fill the whole container. If the parent container has no width defined the control will not work properly.","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle of the Thing Inspector\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.ux3.ThingViewer","!category":"function"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of the ThingViewer\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.ux3.ThingViewer","!category":"function"},"indexOfFacet":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation named <code>facets<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFacet: sap.ui.ux3.NavigationItem) -> Number","!category":"function"},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation named <code>headerContent<\/code>.","!type":"fn(vHeaderContent: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","!category":"function"},"destroyActionBar":{"!description":"Destroys the actionBar in the aggregation\nnamed <code>actionBar<\/code>.","!type":"fn() -> sap.ui.ux3.ThingViewer","!category":"function"},"getActionBar":{"!description":"Gets content of aggregation <code>actionBar<\/code>.\n\nAn ActionBar can be given","!type":"fn() -> sap.ui.ux3.ActionBar","!category":"function"},"removeFacet":{"!description":"Removes a facet from the aggregation named <code>facets<\/code>.","!type":"fn(vFacet: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","!category":"function"},"getSelectedFacet":{"!description":"ID of the element which is the current target of the <code>selectedFacet<\/code> association, or <code>null<\/code>.\n\nThe Facet that is currently selected.","!type":"fn() -> sap.ui.ux3.NavigationItem","!category":"function"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThing Icon Url\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.ThingViewer","!category":"function"},"getHeaderType":{"!description":"Gets current value of property <code>headerType<\/code>.\n\nDefines which header type should be used.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.ux3.ThingViewerHeaderType","!category":"function"},"getHeaderContent":{"!description":"Gets content of aggregation <code>headerContent<\/code>.\n\nThingGroups for the header content","!type":"fn() -> [sap.ui.ux3.ThingGroup]","!category":"function"},"destroyFacetContent":{"!description":"Destroys all the facetContent in the aggregation\nnamed <code>facetContent<\/code>.","!type":"fn() -> sap.ui.ux3.ThingViewer","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ThingViewer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.ActionBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ActionBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ActionBar"},"sap.ui.ux3.ToolPopup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ToolPopup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ToolPopup"},"sap.ui.ux3.FacetFilterList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FacetFilterList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.FacetFilterList"},"sap.ui.ux3.DataSetView":{"!description":"\n  \t\tMarker interface for controls which are suitable as view rendering for a DataSet.","!category":"static class"},"sap.ui.ux3.QuickView":{"attachActionSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'actionSelected' event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.QuickView<\/code> itself.\n\nAction is selected in Action Bar","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","!category":"function"},"detachFeedSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'feedSubmit' event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.QuickView","!category":"function"},"attachFeedSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'feedSubmit' event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.QuickView<\/code> itself.\n\nFired when a new feed entry is submitted.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","!category":"function"},"setShowActionBar":{"!description":"Sets a new value for property <code>showActionBar<\/code>.\n\nShow Action Bar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowActionBar: Boolean) -> sap.ui.ux3.QuickView","!category":"function"},"getFirstTitleHref":{"!description":"Gets current value of property <code>firstTitleHref<\/code>.\n\nURI to Thing Inspector","!type":"fn() -> String","!category":"function"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example).","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getUpdateActionEnabled":{"!description":"Gets current value of property <code>updateActionEnabled<\/code>.\n\nUpdate action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setFlagState":{"!description":"Sets a new value for property <code>flagState<\/code>.\n\nState of Flag Action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFlagState: Boolean) -> sap.ui.ux3.QuickView","!category":"function"},"setFavoriteState":{"!description":"Sets a new value for property <code>favoriteState<\/code>.\n\nState Of favorite Action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFavoriteState: Boolean) -> sap.ui.ux3.QuickView","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Element) -> sap.ui.ux3.QuickView","!category":"function"},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'navigate' event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.QuickView","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nBody content of the QuickView","!type":"fn() -> [sap.ui.core.Element]","!category":"function"},"detachActionSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'actionSelected' event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.QuickView","!category":"function"},"getSecondTitle":{"!description":"Gets current value of property <code>secondTitle<\/code>.\n\nOptional short text shown under the firstTitle","!type":"fn() -> String","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Element]","!category":"function"},"getFirstTitle":{"!description":"Gets current value of property <code>firstTitle<\/code>.\n\nThing name shown in the header of the QuickView","!type":"fn() -> String","!category":"function"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nThing type (mandatory) like Account, Material, Employee etc. is displayed in a header at the top part of the QuickView.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sType: String) -> sap.ui.ux3.QuickView","!category":"function"},"getActions":{"!description":"Gets content of aggregation <code>actions<\/code>.\n\nActions of a Thing","!type":"fn() -> [sap.ui.ux3.ThingAction]","!category":"function"},"insertAction":{"!description":"Inserts a action into the aggregation named <code>actions<\/code>.","!type":"fn(oAction: sap.ui.ux3.ThingAction, iIndex: Number) -> sap.ui.ux3.QuickView","!category":"function"},"setFirstTitle":{"!description":"Sets a new value for property <code>firstTitle<\/code>.\n\nThing name shown in the header of the QuickView\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFirstTitle: String) -> sap.ui.ux3.QuickView","!category":"function"},"destroyActions":{"!description":"Destroys all the actions in the aggregation\nnamed <code>actions<\/code>.","!type":"fn() -> sap.ui.ux3.QuickView","!category":"function"},"destroyActionBar":{"!description":"Destroys the actionBar in the aggregation\nnamed <code>actionBar<\/code>.","!type":"fn() -> sap.ui.ux3.QuickView","!category":"function"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nURI of the Thing icon image (mandatory). The image is scaled down to the maximal size of 32 pixel (vertical or horizontal).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.QuickView","!category":"function"},"setUpdateActionEnabled":{"!description":"Sets a new value for property <code>updateActionEnabled<\/code>.\n\nUpdate action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUpdateActionEnabled: Boolean) -> sap.ui.ux3.QuickView","!category":"function"},"!proto":"sap.ui.commons.CalloutBase","fireNavigate":{"!description":"Fires event navigate to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\n\nExpects the following event parameters:\n<ul>\n<li>'href' of type <code>string<\/code>URI of the Thing Inspector application.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Element<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Element) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Element) -> sap.ui.core.Element","!category":"function"},"setSecondTitle":{"!description":"Sets a new value for property <code>secondTitle<\/code>.\n\nOptional short text shown under the firstTitle\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSecondTitle: String) -> sap.ui.ux3.QuickView","!category":"function"},"getFavoriteState":{"!description":"Gets current value of property <code>favoriteState<\/code>.\n\nState Of favorite Action\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getShowActionBar":{"!description":"Gets current value of property <code>showActionBar<\/code>.\n\nShow Action Bar\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nURI of the Thing icon image (mandatory). The image is scaled down to the maximal size of 32 pixel (vertical or horizontal).","!type":"fn() -> sap.ui.core.URI","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.ux3.QuickView","!category":"function"},"getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nThing type (mandatory) like Account, Material, Employee etc. is displayed in a header at the top part of the QuickView.","!type":"fn() -> String","!category":"function"},"removeAllActions":{"!description":"Removes all the controls in the aggregation named <code>actions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ThingAction]","!category":"function"},"getFlagActionEnabled":{"!description":"Gets current value of property <code>flagActionEnabled<\/code>.\n\nFlag action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setFavoriteActionEnabled":{"!description":"Sets a new value for property <code>favoriteActionEnabled<\/code>.\n\nFavorite action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFavoriteActionEnabled: Boolean) -> sap.ui.ux3.QuickView","!category":"function"},"!category":"class","getFollowState":{"!description":"Gets current value of property <code>followState<\/code>.\n\nFollow State of a Thing\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.ux3.FollowActionState","!category":"function"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.ux3.QuickView","!category":"function"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingAction<\/code> in the aggregation named <code>actions<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAction: sap.ui.ux3.ThingAction) -> Number","!category":"function"},"setActionBar":{"!description":"Sets the aggregated <code>actionBar<\/code>.","!type":"fn(oActionBar: sap.ui.ux3.ActionBar) -> sap.ui.ux3.QuickView","!category":"function"},"getFavoriteActionEnabled":{"!description":"Gets current value of property <code>favoriteActionEnabled<\/code>.\n\nFavorite action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireFeedSubmit":{"!description":"Fires event feedSubmit to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'text' of type <code>string<\/code>Feed text<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.QuickView","!category":"function"},"setFirstTitleHref":{"!description":"Sets a new value for property <code>firstTitleHref<\/code>.\n\nURI to Thing Inspector\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFirstTitleHref: String) -> sap.ui.ux3.QuickView","!category":"function"},"setFlagActionEnabled":{"!description":"Sets a new value for property <code>flagActionEnabled<\/code>.\n\nFlag action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFlagActionEnabled: Boolean) -> sap.ui.ux3.QuickView","!category":"function"},"setFollowState":{"!description":"Sets a new value for property <code>followState<\/code>.\n\nFollow State of a Thing\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sFollowState: sap.ui.ux3.FollowActionState) -> sap.ui.ux3.QuickView","!category":"function"},"fireActionSelected":{"!description":"Fires event actionSelected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>Id of selected ThingAction<\/li>\n<li>'action' of type <code>sap.ui.ux3.ThingAction<\/code>Selected ThingAction<\/li>\n<li>'newState' of type <code>string<\/code>New State of the selected action. Only filled if the respective action maintains a state property, for example 'FollowUp' or 'Favorite'<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.QuickView","!category":"function"},"getOpenActionEnabled":{"!description":"Gets current value of property <code>openActionEnabled<\/code>.\n\nOpen Thing action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getFlagState":{"!description":"Gets current value of property <code>flagState<\/code>.\n\nState of Flag Action\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"QuickView is a small popup with a short overview of a Thing.\nQuickView is shown when a user holds the mouse pointer over a related screen element.","attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'navigate' event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.QuickView<\/code> itself.\n\nEvent is fired when a user clicks on the firstTitle link. Call the preventDefault method of the event object to cancel browser navigation.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Element, iIndex: Number) -> sap.ui.ux3.QuickView","!category":"function"},"setOpenActionEnabled":{"!description":"Sets a new value for property <code>openActionEnabled<\/code>.\n\nOpen Thing action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bOpenActionEnabled: Boolean) -> sap.ui.ux3.QuickView","!category":"function"},"setFollowActionEnabled":{"!description":"Sets a new value for property <code>followActionEnabled<\/code>.\n\nFollow action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFollowActionEnabled: Boolean) -> sap.ui.ux3.QuickView","!category":"function"},"getFollowActionEnabled":{"!description":"Gets current value of property <code>followActionEnabled<\/code>.\n\nFollow action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getActionBar":{"!description":"Gets content of aggregation <code>actionBar<\/code>.\n\nActionBar. If no actionBar is set a default ActionBar will be created.\nIn any case, ActionBar is displayed only when the showActionBar property is set to true.","!type":"fn() -> sap.ui.ux3.ActionBar","!category":"function"},"addAction":{"!description":"Adds some action into the aggregation named <code>actions<\/code>.","!type":"fn(oAction: sap.ui.ux3.ThingAction) -> sap.ui.ux3.QuickView","!category":"function"},"removeAction":{"!description":"Removes a action from the aggregation named <code>actions<\/code>.","!type":"fn(vAction: Number | String | sap.ui.ux3.ThingAction) -> sap.ui.ux3.ThingAction","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.QuickView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.ExactBrowser":{"getTopListWidth":{"!description":"Gets current value of property <code>topListWidth<\/code>.\n\nSpecifies the width of the top list in pixels. The value must be between 70 and 500.\n\nDefault value is <code>168<\/code>.","!type":"fn() -> Number","!category":"function"},"getShowTopList":{"!description":"Gets current value of property <code>showTopList<\/code>.\n\nWhether the top list of the ExactBrowser should be shown. When the property is set to false the\napplication must ensure to select top level attributes appropriately.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireSave":{"!description":"Fires event save to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ExactBrowser","!category":"function"},"setListHeight":{"!description":"Sets a new value for property <code>listHeight<\/code>.\n\nThe height of the list area in px.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>290<\/code>.","!type":"fn(iListHeight: Number) -> sap.ui.ux3.ExactBrowser","!category":"function"},"setTopListOrder":{"!description":"Sets a new value for property <code>topListOrder<\/code>.\n\nThe order how the sublists of the top level list should be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Select<\/code>.","!type":"fn(sTopListOrder: sap.ui.ux3.ExactOrder) -> sap.ui.ux3.ExactBrowser","!category":"function"},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nWhether the header area of the ExactBrowser should be shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowHeader: Boolean) -> sap.ui.ux3.ExactBrowser","!category":"function"},"setEnableSave":{"!description":"Sets a new value for property <code>enableSave<\/code>.\n\nWhether the save button should be available in the header area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableSave: Boolean) -> sap.ui.ux3.ExactBrowser","!category":"function"},"getOptionsMenu":{"!description":"Gets content of aggregation <code>optionsMenu<\/code>.\n\nMenu with options. The menu can not used when the property showTopList is set to false.","!type":"fn() -> sap.ui.commons.Menu","!category":"function"},"fireAttributeSelected":{"!description":"Fires event attributeSelected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'attribute' of type <code>sap.ui.ux3.ExactAttribute<\/code>The attribute which was selected or unselected recently<\/li>\n<li>'allAttributes' of type <code>object<\/code>Array of all selected ExactAttributes<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ExactBrowser","!category":"function"},"setFollowUpControl":{"!description":"Sets the associated <code>followUpControl<\/code>.","!type":"fn(oFollowUpControl: sap.ui.core.Control) -> sap.ui.ux3.ExactBrowser","!category":"function"},"getHeaderTitle":{"!description":"Gets current value of property <code>headerTitle<\/code>.\n\nTitle text in the header of the Exact Browser.","!type":"fn() -> String","!category":"function"},"insertAttribute":{"!description":"Inserts a attribute into the aggregation named <code>attributes<\/code>.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute, iIndex: Number) -> sap.ui.ux3.ExactBrowser","!category":"function"},"setTopListWidth":{"!description":"Sets a new value for property <code>topListWidth<\/code>.\n\nSpecifies the width of the top list in pixels. The value must be between 70 and 500.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>168<\/code>.","!type":"fn(iTopListWidth: Number) -> sap.ui.ux3.ExactBrowser","!category":"function"},"getListHeight":{"!description":"Gets current value of property <code>listHeight<\/code>.\n\nThe height of the list area in px.\n\nDefault value is <code>290<\/code>.","!type":"fn() -> Number","!category":"function"},"!category":"class","reset":{"!description":"Deselects all currently selected attributes and closes all attribute lists.","!type":"fn()","!category":"function"},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation\nnamed <code>attributes<\/code>.","!type":"fn() -> sap.ui.ux3.ExactBrowser","!category":"function"},"getEnableReset":{"!description":"Gets current value of property <code>enableReset<\/code>.\n\nWhether the reset functionality should be available in the header area.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle text in the list area of the Exact Browser. The title is not shown when the property showTopList is set to false.","!type":"fn() -> String","!category":"function"},"setEnableReset":{"!description":"Sets a new value for property <code>enableReset<\/code>.\n\nWhether the reset functionality should be available in the header area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableReset: Boolean) -> sap.ui.ux3.ExactBrowser","!category":"function"},"removeAllAttributes":{"!description":"Removes all the controls in the aggregation named <code>attributes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ExactAttribute]","!category":"function"},"setHeaderTitle":{"!description":"Sets a new value for property <code>headerTitle<\/code>.\n\nTitle text in the header of the Exact Browser.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeaderTitle: String) -> sap.ui.ux3.ExactBrowser","!category":"function"},"destroyOptionsMenu":{"!description":"Destroys the optionsMenu in the aggregation\nnamed <code>optionsMenu<\/code>.","!type":"fn() -> sap.ui.ux3.ExactBrowser","!category":"function"},"setOptionsMenu":{"!description":"Sets the aggregated <code>optionsMenu<\/code>.","!type":"fn(oOptionsMenu: sap.ui.commons.Menu) -> sap.ui.ux3.ExactBrowser","!category":"function"},"detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'save' event of this <code>sap.ui.ux3.ExactBrowser<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ExactBrowser","!category":"function"},"getEnableSave":{"!description":"Gets current value of property <code>enableSave<\/code>.\n\nWhether the save button should be available in the header area.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"attachAttributeSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'attributeSelected' event of this <code>sap.ui.ux3.ExactBrowser<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ExactBrowser<\/code> itself.\n\nEvent is fired when an attribute is selected or unselected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactBrowser","!category":"function"},"setEnableListClose":{"!description":"Sets a new value for property <code>enableListClose<\/code>.\n\nEnables the close icons of the displayed lists.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableListClose: Boolean) -> sap.ui.ux3.ExactBrowser","!category":"function"},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nWhether the header area of the ExactBrowser should be shown.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'save' event of this <code>sap.ui.ux3.ExactBrowser<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ExactBrowser<\/code> itself.\n\nEvent is fired when an attribute is selected or unselected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactBrowser","!category":"function"},"getTopListOrder":{"!description":"Gets current value of property <code>topListOrder<\/code>.\n\nThe order how the sublists of the top level list should be displayed.\n\nDefault value is <code>Select<\/code>.","!type":"fn() -> sap.ui.ux3.ExactOrder","!category":"function"},"!description":"Attribute browse area used within the Exact pattern. The main benefit of this control is the high flexibility when large data amounts shall be displayed\nin the form of structured data sets with a high or low interdependency level. From lists - which can be nested according to the defined attributes - the user can choose\nentries and thereby trigger the display of further information, depending on the chosen entry/entries (multiple selection supported).","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle text in the list area of the Exact Browser. The title is not shown when the property showTopList is set to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.ux3.ExactBrowser","!category":"function"},"detachAttributeSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'attributeSelected' event of this <code>sap.ui.ux3.ExactBrowser<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ExactBrowser","!category":"function"},"getEnableListClose":{"!description":"Gets current value of property <code>enableListClose<\/code>.\n\nEnables the close icons of the displayed lists.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getFollowUpControl":{"!description":"ID of the element which is the current target of the <code>followUpControl<\/code> association, or <code>null<\/code>.\n\nThe successor control of the Exact Browser. The id of this control is used in the ARIA description of the control.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"setShowTopList":{"!description":"Sets a new value for property <code>showTopList<\/code>.\n\nWhether the top list of the ExactBrowser should be shown. When the property is set to false the\napplication must ensure to select top level attributes appropriately.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowTopList: Boolean) -> sap.ui.ux3.ExactBrowser","!category":"function"},"indexOfAttribute":{"!description":"Checks for the provided <code>sap.ui.ux3.ExactAttribute<\/code> in the aggregation named <code>attributes<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> Number","!category":"function"},"removeAttribute":{"!description":"Removes a attribute from the aggregation named <code>attributes<\/code>.","!type":"fn(vAttribute: Number | String | sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactAttribute","!category":"function"},"getAttributes":{"!description":"Gets content of aggregation <code>attributes<\/code>.\n\nThe attributes which shall be available.","!type":"fn() -> [sap.ui.ux3.ExactAttribute]","!category":"function"},"addAttribute":{"!description":"Adds some attribute into the aggregation named <code>attributes<\/code>.","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactBrowser","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ExactBrowser.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.Notifier":{"detachMessageSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'messageSelected' event of this <code>sap.ui.ux3.Notifier<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.Notifier","!category":"function"},"insertMessage":{"!description":"Inserts a message into the aggregation named <code>messages<\/code>.","!type":"fn(oMessage: sap.ui.core.Message, iIndex: Number) -> sap.ui.ux3.Notifier","!category":"function"},"removeAllMessages":{"!description":"Removes all the controls in the aggregation named <code>messages<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Message]","!category":"function"},"attachMessageSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'messageSelected' event of this <code>sap.ui.ux3.Notifier<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.Notifier<\/code> itself.\n\nEvent is fired when a message of the notifiers was selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Notifier","!category":"function"},"indexOfMessage":{"!description":"Checks for the provided <code>sap.ui.core.Message<\/code> in the aggregation named <code>messages<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oMessage: sap.ui.core.Message) -> Number","!category":"function"},"destroyMessages":{"!description":"Destroys all the messages in the aggregation\nnamed <code>messages<\/code>.","!type":"fn() -> sap.ui.ux3.Notifier","!category":"function"},"hasItems":{"!description":"This method checks if the notifier has any items.","!type":"fn() -> Boolean","!category":"function"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon of the control that should be displayed within the corresponding bar","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getMessages":{"!description":"Gets content of aggregation <code>messages<\/code>.\n\nMessages of this notifier.","!type":"fn() -> [sap.ui.core.Message]","!category":"function"},"!description":"This element can be docked to a notification bar to show notification items","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDefines the title that should be displayed within the opening popup\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.ux3.Notifier","!category":"function"},"!category":"class","addMessage":{"!description":"Adds some message into the aggregation named <code>messages<\/code>.","!type":"fn(oMessage: sap.ui.core.Message) -> sap.ui.ux3.Notifier","!category":"function"},"fireMessageSelected":{"!description":"Fires event messageSelected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'message' of type <code>sap.ui.core.Message<\/code>The message that was selected<\/li>\n<li>'notifier' of type <code>sap.ui.ux3.Notifier<\/code>The notifier that contains the selected message<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.Notifier","!category":"function"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the title that should be displayed within the opening popup","!type":"fn() -> String","!category":"function"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon of the control that should be displayed within the corresponding bar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.Notifier","!category":"function"},"removeMessage":{"!description":"Removes a message from the aggregation named <code>messages<\/code>.","!type":"fn(vMessage: Number | String | sap.ui.core.Message) -> sap.ui.core.Message","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Notifier.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.NotificationBar":{"getResizeEnabled":{"!description":"Gets current value of property <code>resizeEnabled<\/code>.\n\nThis property enables the bar to be resized by the user.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setAlwaysShowToggler":{"!type":"fn(boolean?: bAlwaysShow)","!category":"function"},"detachDisplay":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'display' event of this <code>sap.ui.ux3.NotificationBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.NotificationBar","!category":"function"},"indexOfNotifier":{"!description":"Checks for the provided <code>sap.ui.core.Element<\/code> in the aggregation named <code>notifiers<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oNotifier: sap.ui.core.Element) -> Number","!category":"function"},"getAlwaysShowToggler":{"!description":"Gets current value of property <code>alwaysShowToggler<\/code>.\n\nThis property defines if the toggler should be displayed the whole time when the NotificationBar is shown.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireDisplay":{"!description":"Fires event display to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'show' of type <code>boolean<\/code>Indicates if the bar wants to be shown or hidden<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.NotificationBar","!category":"function"},"removeNotifier":{"!description":"Removes a notifier from the aggregation named <code>notifiers<\/code>.","!type":"fn(vNotifier: Number | String | sap.ui.core.Element) -> sap.ui.core.Element","!category":"function"},"!category":"class","setResizeEnabled":{"!description":"Sets a new value for property <code>resizeEnabled<\/code>.\n\nThis property enables the bar to be resized by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bResizeEnabled: Boolean) -> sap.ui.ux3.NotificationBar","!category":"function"},"setVisibleStatus":{"!description":"Sets a new value for property <code>visibleStatus<\/code>.\n\nThis property displays the bar corresponding to given status\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sVisibleStatus: sap.ui.ux3.NotificationBarStatus) -> sap.ui.ux3.NotificationBar","!category":"function"},"fireResize":{"!description":"Fires event resize to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'status' of type <code>sap.ui.ux3.NotificationBarStatus<\/code>The corresponding status to which the bar was resized. The corresponding heights can be taken for the bar's CSS file.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.NotificationBar","!category":"function"},"getMessageNotifier":{"!description":"Gets content of aggregation <code>messageNotifier<\/code>.\n\nNotifier that shows messages","!type":"fn() -> sap.ui.core.Element","!category":"function"},"destroyMessageNotifier":{"!description":"Destroys the messageNotifier in the aggregation\nnamed <code>messageNotifier<\/code>.","!type":"fn() -> sap.ui.ux3.NotificationBar","!category":"function"},"getVisibleStatus":{"!description":"Gets current value of property <code>visibleStatus<\/code>.\n\nThis property displays the bar corresponding to given status\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.ux3.NotificationBarStatus","!category":"function"},"hasItems":{"!description":"This method checks if the NotificationBar has any items (notifications or messages) to show and returns true if there are any items to show. So the application should decide if the bar should be displayed.","!type":"fn() -> Boolean","!category":"function"},"removeAllNotifiers":{"!description":"Removes all the controls in the aggregation named <code>notifiers<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Element]","!category":"function"},"setMessageNotifier":{"!description":"Sets the aggregated <code>messageNotifier<\/code>.","!type":"fn(oMessageNotifier: sap.ui.core.Element) -> sap.ui.ux3.NotificationBar","!category":"function"},"destroyNotifiers":{"!description":"Destroys all the notifiers in the aggregation\nnamed <code>notifiers<\/code>.","!type":"fn() -> sap.ui.ux3.NotificationBar","!category":"function"},"attachResize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'resize' event of this <code>sap.ui.ux3.NotificationBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.NotificationBar<\/code> itself.\n\nThis event is thrown when the bar was resized (to the different valid states: Min, Max, Default, None). The event itself can be used from SAPUI5-version 1.12.2 since there was a bug in the previous versions firing this event.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NotificationBar","!category":"function"},"getNotifiers":{"!description":"Gets content of aggregation <code>notifiers<\/code>.\n\nNotifiers that monitor something within the application and display the corresponding notifications.","!type":"fn() -> [sap.ui.core.Element]","!category":"function"},"attachDisplay":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'display' event of this <code>sap.ui.ux3.NotificationBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.NotificationBar<\/code> itself.\n\nEvent is fired when the bar wants to be displayed depending on given flag. This allows the application to decide what to do.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NotificationBar","!category":"function"},"!description":"A NotificationBar is a \"toolbar\" that can be added to a page to show messages and notifications from the application.\nIts position, height and width is inherited from the element that the notification bar is added to.","addNotifier":{"!description":"Adds some notifier into the aggregation named <code>notifiers<\/code>.","!type":"fn(oNotifier: sap.ui.core.Element) -> sap.ui.ux3.NotificationBar","!category":"function"},"detachResize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'resize' event of this <code>sap.ui.ux3.NotificationBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.NotificationBar","!category":"function"},"insertNotifier":{"!description":"Inserts a notifier into the aggregation named <code>notifiers<\/code>.","!type":"fn(oNotifier: sap.ui.core.Element, iIndex: Number) -> sap.ui.ux3.NotificationBar","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.NotificationBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.VisibleItemCountMode":{"!description":"VisibleItemCountMode of the FacetFilter defines if the FacetFilter takes the whole available height (Auto) in the surrounding container, or is so high as needed to show 5 Items (\"Fixed \" - default).","Auto":{"!description":"The FacetFilter automatically fills the height of the surrounding container. The visibleItemCount property is automatically changed accordingly.","!type":"String","!category":"enum"},"!category":"static class","Fixed":{"!description":"The FacetFilter always has as many items in the FacetFilterList as defined in the visibleItemCount property.","!type":"String","!category":"enum"}},"sap.ui.ux3.Shell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Shell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Shell"},"sap.ui.ux3.ActionBar":{"getShowFollow":{"!description":"Gets current value of property <code>showFollow<\/code>.\n\nIndicates whether social action \u201cFollow\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getShowUpdate":{"!description":"Gets current value of property <code>showUpdate<\/code>.\n\nIndicates whether social action \u201cUpdate\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getDividerWidth":{"!description":"Gets current value of property <code>dividerWidth<\/code>.\n\nThe minimum width of ActionBar's the social actions part: business action controls have to be rendered outside this area","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"attachActionSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'actionSelected' event of this <code>sap.ui.ux3.ActionBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ActionBar<\/code> itself.\n\nFired when any of the social action\u2019s toolbar buttons except \u2018Update\u2019 or any of the business action\u2019s menu items resp. buttons is pressed. The selected action can be identified by its id and newState (the latter if applicable only)\n\u2018Follow\u2019 button + menu: id: follow, newState: Follow/Hold/Default\n\u2018Mark for follow up\u2019 button: id: flag, newState: true/false\n\u2018Favorite\u2019 button: id: favorite, newState: true/false\n\u2018Open Thing Inspector\u2019 button id: open\nBusiness Actions: id: the ThingAction id\n\nFor \u2018Update\u2019, please refer to event \u2018feedSubmit\u2019","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ActionBar","!category":"function"},"getFavoriteState":{"!description":"Gets current value of property <code>favoriteState<\/code>.\n\nIndicates whether \u201cFavorite\u201d is active","!type":"fn() -> Boolean","!category":"function"},"setShowUpdate":{"!description":"Sets a new value for property <code>showUpdate<\/code>.\n\nIndicates whether social action \u201cUpdate\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowUpdate: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"setDividerWidth":{"!description":"Sets a new value for property <code>dividerWidth<\/code>.\n\nThe minimum width of ActionBar's the social actions part: business action controls have to be rendered outside this area\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDividerWidth: sap.ui.core.CSSSize) -> sap.ui.ux3.ActionBar","!category":"function"},"getBusinessActions":{"!description":"Gets content of aggregation <code>businessActions<\/code>.\n\nDisplayed on the actionBar's right hand-side, either as menu item under 'More' or as individual buttons","!type":"fn() -> [sap.ui.ux3.ThingAction]","!category":"function"},"detachFeedSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'feedSubmit' event of this <code>sap.ui.ux3.ActionBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ActionBar","!category":"function"},"attachFeedSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the 'feedSubmit' event of this <code>sap.ui.ux3.ActionBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise it will be bound to this <code>sap.ui.ux3.ActionBar<\/code> itself.\n\nFired when a new feed entry is submitted.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ActionBar","!category":"function"},"setShowFlag":{"!description":"Sets a new value for property <code>showFlag<\/code>.\n\nIndicates whether social action \u201cMark for Follow Up\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowFlag: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"!category":"class","getAlwaysShowMoreMenu":{"!description":"Gets current value of property <code>alwaysShowMoreMenu<\/code>.\n\nIf true, business actions are rendered as menu items of the 'More' menu button. Otherwise, 'More' menu button is only displayed for overflow and business actions are rendered as inidividual buttons.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getFollowState":{"!description":"Gets current value of property <code>followState<\/code>.\n\nKeeps track of the actionBars Follow/Unfollow button\u2019s state. Its value is one of\n- FollowActionState.Default\n- FollowActionState.Follow\n- FollowActionState.Hold\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.ux3.FollowActionState","!category":"function"},"setShowFollow":{"!description":"Sets a new value for property <code>showFollow<\/code>.\n\nIndicates whether social action \u201cFollow\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowFollow: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"getShowOpen":{"!description":"Gets current value of property <code>showOpen<\/code>.\n\nIndicates whether social action \u201cOpen\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setShowOpen":{"!description":"Sets a new value for property <code>showOpen<\/code>.\n\nIndicates whether social action \u201cOpen\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowOpen: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"setShowFavorite":{"!description":"Sets a new value for property <code>showFavorite<\/code>.\n\nIndicates whether social action \u201cFavorite\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowFavorite: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"setFlagState":{"!description":"Sets a new value for property <code>flagState<\/code>.\n\nIndicates whether \u201cMark for Follow Up\u201d is active\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bFlagState: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"setFavoriteState":{"!description":"Sets a new value for property <code>favoriteState<\/code>.\n\nIndicates whether \u201cFavorite\u201d is active\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bFavoriteState: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"fireFeedSubmit":{"!description":"Fires event feedSubmit to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'text' of type <code>string<\/code>Feed text<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ActionBar","!category":"function"},"getUpdateState":{"!description":"Gets current value of property <code>updateState<\/code>.\n\nIndicates whether \u201cUpdate\u201d is active","!type":"fn() -> Boolean","!category":"function"},"indexOfBusinessAction":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingAction<\/code> in the aggregation named <code>businessActions<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oBusinessAction: sap.ui.ux3.ThingAction) -> Number","!category":"function"},"detachActionSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the 'actionSelected' event of this <code>sap.ui.ux3.ActionBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.ux3.ActionBar","!category":"function"},"setFollowState":{"!description":"Sets a new value for property <code>followState<\/code>.\n\nKeeps track of the actionBars Follow/Unfollow button\u2019s state. Its value is one of\n- FollowActionState.Default\n- FollowActionState.Follow\n- FollowActionState.Hold\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sFollowState: sap.ui.ux3.FollowActionState) -> sap.ui.ux3.ActionBar","!category":"function"},"setThingIconURI":{"!description":"Sets a new value for property <code>thingIconURI<\/code>.\n\nThe thing icon uri. Icon will be displayed in Feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sThingIconURI: sap.ui.core.URI) -> sap.ui.ux3.ActionBar","!category":"function"},"getShowFavorite":{"!description":"Gets current value of property <code>showFavorite<\/code>.\n\nIndicates whether social action \u201cFavorite\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"isActive":{"!description":"Checks whether the control is still valid (is in the DOM). ActionBar\ninstance is rendered if and only if 'isActive' returns 'true'. This\ncheck is called implicitely by the rendere, MUST not be removed.","!type":"fn() -> Boolean","!category":"function"},"fireActionSelected":{"!description":"Fires event actionSelected to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>Id of selected ThingAction<\/li>\n<li>'action' of type <code>sap.ui.ux3.ThingAction<\/code>Selected ThingAction<\/li>\n<li>'newState' of type <code>string<\/code>New State of the selected action.Only filled if the respective action maintains a state property, for example 'FollowUp' or 'Favorite'<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.ux3.ActionBar","!category":"function"},"getFlagState":{"!description":"Gets current value of property <code>flagState<\/code>.\n\nIndicates whether \u201cMark for Follow Up\u201d is active","!type":"fn() -> Boolean","!category":"function"},"setAlwaysShowMoreMenu":{"!description":"Sets a new value for property <code>alwaysShowMoreMenu<\/code>.\n\nIf true, business actions are rendered as menu items of the 'More' menu button. Otherwise, 'More' menu button is only displayed for overflow and business actions are rendered as inidividual buttons.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bAlwaysShowMoreMenu: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"!description":"A special toolbar with predefined social actions which can be shown as needed. These are: Create an update (Feed), Follow, Mark for Follow Up, Mark as Favorite and Open Thing.\n\nIn addition business actions (ThingAction instances) can be added which are either displayed as MenuItems of the 'More' menu button or as individual tool bar buttons.\n\nWhen using this control, please be aware that it fulfills rather specific requirements: it has been designed for and is used within composite controls QuickView and ThingInspector.","setUpdateState":{"!description":"Sets a new value for property <code>updateState<\/code>.\n\nIndicates whether \u201cUpdate\u201d is active\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bUpdateState: Boolean) -> sap.ui.ux3.ActionBar","!category":"function"},"getThingIconURI":{"!description":"Gets current value of property <code>thingIconURI<\/code>.\n\nThe thing icon uri. Icon will be displayed in Feeder","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getShowFlag":{"!description":"Gets current value of property <code>showFlag<\/code>.\n\nIndicates whether social action \u201cMark for Follow Up\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"closePopups":{"!description":"Closes all popups which might be opened as ActionBar children\nThese are the more- and follow menu and the feeder popup","!type":"fn()","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ActionBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.OverlayDialog":{"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.OverlayDialog","!category":"function"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent for the OverlayDialog.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.ux3.OverlayDialog","!category":"function"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the height of the Overlay Dialog. If the height is set to \"auto\" it is always 50% of the overlay height.\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"!description":"Dialog implementation based on the Overlay. If used in a Shell it leaves the Tool-Palette, Pane-Bar and Header-Items accessible.","insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.OverlayDialog","!category":"function"},"setHeight":{"!description":"The height for the OverlayDialog.","!type":"fn(sHeight: sap.ui.core.CSSSize)","!category":"function"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the Overlay Dialog. If the width is set to \"auto\" it is always 50% of the overlay width.\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setOpenButtonVisible":{"!description":"This Method is not supported for the OverlayDialog.","!type":"fn(bVisible: Boolean)","!category":"function"},"setWidth":{"!description":"The width for the OverlayDialog.","!type":"fn(sWidth: sap.ui.core.CSSSize)","!category":"function"},"!proto":"sap.ui.ux3.Overlay","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.OverlayDialog.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.Exact_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Exact with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Exact"},"sap.ui.ux3":{"showActionBar":{"!description":"Show Action Bar","!type":"Boolean","!category":"enum"},"visibleStatus":{"!description":"This property displays the bar corresponding to given status","!type":"sap.ui.ux3.NotificationBarStatus","!category":"enum"},"enableListClose":{"!description":"Enables the close icons of the displayed lists.","!type":"Boolean","!category":"enum"},"designType":{"!description":"Defines which design type is to be used.","!type":"sap.ui.ux3.ShellDesignType","!category":"enum"},"showTopList":{"!description":"Whether the top list of the ExactBrowser should be shown. When the property is set to false the\napplication must ensure to select top level attributes appropriately.","!type":"Boolean","!category":"enum"},"secondTitle":{"!description":"Second Line of the Thing Inspector Title","!type":"String","!category":"enum"},"autoClose":{"!description":"Determines whether the ToolPopup will auto close when it loses focus.\nIf the user e.g. clicks outside of the ToolPopup it will be closed.\nPlease don't use \"modal\" and \"autoclose\" at the same time.\nIn this case a warning will be prompted to the console and \"autoclose\" won't be used.","!type":"Boolean","!category":"enum"},"headerType":{"!description":"Defines which header type should be used.","!type":"sap.ui.ux3.ThingViewerHeaderType","!category":"enum"},"ShellHeaderType":"sap.ui.ux3.ShellHeaderType","showFlag":{"!description":"Indicates whether social action \u201cMark for Follow Up\u201d is shown, default is \u2018true\u2019","!type":"Boolean","!category":"enum"},"showOpen":{"!description":"Indicates whether social action \u201cOpen\u201d is shown, default is \u2018true\u2019","!type":"Boolean","!category":"enum"},"followState":{"!description":"Follow State of a Thing","!type":"sap.ui.ux3.FollowActionState","!category":"enum"},"Shell":"sap.ui.ux3.Shell_obj","placeholderText":{"!description":"This property could be used for costum placeholder. If it is not set, the default text is used.","!type":"String","!category":"enum"},"DataSetView":"sap.ui.ux3.DataSetView","visibleItemCountMode":{"!description":"If the value is \"Auto\" - the Facet Filter takes the whole available height. If \"Fixed\" , then the default number of Facet Filter Items (5) is visible.","!type":"sap.ui.ux3.VisibleItemCountMode","!category":"enum"},"fitParent":{"!description":"If set to true, control will fit parents content area","!type":"Boolean","!category":"enum"},"href":{"!description":"Defines the link target URL. This property is optional and should only be set when required!\nThe use of the href property is to not only allow users to navigate in-place by left-clicking NavigationItems, but also to allow right-click and then \"open in new tab\" or \"open in new window\". As long as href is not set, an empty window will open and stay blank. But when href is set, the new window/tab will load this URL and it is the application's responsibility to display what the user expects (e.g. the Shell, with the respective NavigationItem being selected).","!type":"sap.ui.core.URI","!category":"enum"},"firstTitleHref":{"!description":"URI to Thing Inspector","!type":"String","!category":"enum"},"collision":{"!description":"Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.","!type":"sap.ui.core.Collision","!category":"enum"},"closeButtonVisible":{"!description":"Defines whether the 'Close' button shall be visible.","!type":"Boolean","!category":"enum"},"iconSrc":{"!description":"image","!type":"sap.ui.core.URI","!category":"enum"},"NavigationItem":"sap.ui.ux3.NavigationItem_obj","firstTitle":{"!description":"First Line of the Thing Inspector Title","!type":"String","!category":"enum"},"followActionEnabled":{"!description":"Follow action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"DataSet":"sap.ui.ux3.DataSet_obj","inverted":{"!description":"Specifies whether the ToolPopup has a dark or bright background. If set to true\nthe background and borders will be dark. If false they will be bright.\nThis property only has an effect for the GoldReflection-theme.","!type":"Boolean","!category":"enum"},"favorite":{"!description":"Defines whether the entry shall be displayed as favorite. This property is not supported for comment chunks.","!type":"Boolean","!category":"enum"},"updateState":{"!description":"Indicates whether \u201cUpdate\u201d is active","!type":"Boolean","!category":"enum"},"FacetFilter":"sap.ui.ux3.FacetFilter_obj","sidebarVisible":{"!description":"Defines if the list of collection items is visible on the left","!type":"Boolean","!category":"enum"},"favoriteActionEnabled":{"!description":"Favorite action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!type":"sap.ui.core.TextDirection","!category":"enum"},"supplyActive":{"!description":"The supplyAttributes event is only fired if supplyActive has value true which is the default. After firing the event, the attribute is automatically set to false.\nThe idea is that a supply function is called only once when the data is requested. To enable the event again it is possible to manually set the attribute back to true.","!type":"Boolean","!category":"enum"},"alwaysShowToggler":{"!description":"This property defines if the toggler should be displayed the whole time when the NotificationBar is shown.","!type":"Boolean","!category":"enum"},"showToolbar":{"!description":"show Toolbar","!type":"Boolean","!category":"enum"},"showTools":{"!description":"Whether the tool area should be displayed at all or not.","!type":"Boolean","!category":"enum"},"OverlayDialog":"sap.ui.ux3.OverlayDialog_obj","showSearchTool":{"!description":"Whether the \"Global Search\" tool should be displayed or not.","!type":"Boolean","!category":"enum"},"toolbarVisible":{"!description":"Specifies whether the tool bar shall be visible","!type":"Boolean","!category":"enum"},"resizeEnabled":{"!description":"This property enables the bar to be resized by the user.","!type":"Boolean","!category":"enum"},"enableShare":{"!description":"If true the share action is enabled.","!type":"Boolean","!category":"enum"},"iconSelected":{"!description":"This property is relevant for Shell use:\nThe URL to the icon in selected state displayed in the tool area which is used to open the popup.\nIf no selected icon is given, the hover icon is used.","!type":"sap.ui.core.URI","!category":"enum"},"closeDelay":{"!description":"Closing delay of the tooltip in milliseconds","!type":"Number","!category":"enum"},"paneWidth":{"!description":"The width of the right-hand side pane in pixels. The value must be a non-negative integer. The Shell reserves the right to define a minimum width (currently 50px).","!type":"Number","!category":"enum"},"favoriteState":{"!description":"State Of favorite Action","!type":"Boolean","!category":"enum"},"enableFavorite":{"!description":"If true the favorite action is enabled.","!type":"Boolean","!category":"enum"},"applyContentPadding":{"!description":"Whether the Shell content area should have a theme-dependent padding or not.","!type":"Boolean","!category":"enum"},"Exact":"sap.ui.ux3.Exact_obj","myPosition":{"!description":"Optional. My position defines which position on the extended tooltip being positioned to align with the target control.","!type":"sap.ui.core.Dock","!category":"enum"},"checkable":{"!description":"checkable","!type":"Boolean","!category":"enum"},"DataSetSimpleView":"sap.ui.ux3.DataSetSimpleView_obj","enableComment":{"!description":"If true the comment action is enabled.","!type":"Boolean","!category":"enum"},"alwaysShowMoreMenu":{"!description":"If true, business actions are rendered as menu items of the 'More' menu button. Otherwise, 'More' menu button is only displayed for overflow and business actions are rendered as inidividual buttons.","!type":"Boolean","!category":"enum"},"deletionAllowed":{"!description":"Flag if the deletion of the chunk shall be allowed","!type":"Boolean","!category":"enum"},"timestamp":{"!description":"Format is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone","!type":"String","!category":"enum"},"VisibleItemCountMode":"sap.ui.ux3.VisibleItemCountMode","title":{"!description":"Determines the title displayed in the pop up window","!type":"String","!category":"enum"},"enableReset":{"!description":"Whether the reset functionality should be available in the header area.","!type":"Boolean","!category":"enum"},"updateActionEnabled":{"!description":"Update action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"ExactBrowser":"sap.ui.ux3.ExactBrowser_obj","openDuration":{"!description":"Time in milliseconds for the open animation.","!type":"Number","!category":"enum"},"logoutButtonTooltip":{"!description":"The tooltip to be displayed for the Logout Button of the Shell. If not set, a text meaning \"Logout\" in the current language will be displayed.","!type":"String","!category":"enum"},"!category":"namespace","showPane":{"!description":"Whether the pane bar should be displayed at all or not.","!type":"Boolean","!category":"enum"},"toplevelVariant":{"!description":"Defines whether the navigation bar shall have top-level appearance","!type":"Boolean","!category":"enum"},"QuickView":"sap.ui.ux3.QuickView_obj","modal":{"!description":"Specifies whether the popup is modal and blocks any user-interaction with controls in the background.\nChanging this property while the ToolPopup is open will not have any effect.\nPlease don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will\nbe prompted to the console and \"autoclose\" won't be used.","!type":"Boolean","!category":"enum"},"ShellPersonalization":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"String","!category":"enum"},"displaySecondaryValues":{"!description":"Specifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.","!type":"Boolean","!category":"enum"},"Collection":"sap.ui.ux3.Collection_obj","showCounter":{"!description":"Specifies whether the counter for all entries is shown.","!type":"Boolean","!category":"enum"},"ExactAttribute":"sap.ui.ux3.ExactAttribute_obj","FollowActionState":"sap.ui.ux3.FollowActionState","CollectionInspector":"sap.ui.ux3.CollectionInspector_obj","!description":"Controls that implement the SAP User Experience (UX) Guidelines 3.0","allowOverlayHeaderAccess":{"!description":"Whether the Shell header (Title Area + Header Items) can be accessed when an Overlay, OverlayContainer or ThingInspector is open.","!type":"Boolean","!category":"enum"},"FacetFilterList":"sap.ui.ux3.FacetFilterList_obj","flagActionEnabled":{"!description":"Flag action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!type":"[String]","!category":"enum"},"iconHover":{"!description":"This property is relevant for Shell use:\nThe URL to the icon in hover state, displayed in the tool area which is used to open the popup.","!type":"sap.ui.core.URI","!category":"enum"},"appIcon":{"!description":"The URL of the image to appear in the left part of the header, usually a branding image containing a logo and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.\nIf the appIcon is set, for accessibility reasons the appIconTooltip must also be set.","!type":"sap.ui.core.URI","!category":"enum"},"thumbnailSrc":{"!description":"URL to the thumb nail image\nThis property is optional if the feeder is a sub-control of a feed or a feedChunk control. In this case the value of the feed or feddChunk control is used if it's not set. So it must be only set once on the feed or feedChunk control.","!type":"sap.ui.core.URI","!category":"enum"},"ThingViewer":"sap.ui.ux3.ThingViewer_obj","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!type":"Boolean","!category":"enum"},"showLogoutButton":{"!description":"Whether the Logoff button in the header should be displayed or not.","!type":"Boolean","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"fullHeightContent":{"!description":"If set to true, the content area has a defined height. This means that any content put inside can use \"100%\" height in CSS and will then consume all available space.\nHowever, if content is larger, scrollbars will appear at the content area of the Shell and not on window level.","!type":"Boolean","!category":"enum"},"ShellDesignType":"sap.ui.ux3.ShellDesignType","showSearchField":{"!description":"Show/hide SearchField in Toolbar","!type":"Boolean","!category":"enum"},"type":{"!description":"Thing type","!type":"String","!category":"enum"},"flagState":{"!description":"State of Flag Action","!type":"Boolean","!category":"enum"},"sender":{"!description":"Sender of the chunk","!type":"String","!category":"enum"},"showUpdate":{"!description":"Indicates whether social action \u201cUpdate\u201d is shown, default is \u2018true\u2019","!type":"Boolean","!category":"enum"},"reloadItemCount":{"!description":"This number defines the item count which is reloaded on scroll if initialItemCount is enabled.","!type":"Number","!category":"enum"},"height":{"!description":"Height of the ThingViewer","!type":"sap.ui.core.CSSSize","!category":"enum"},"ToolPopup":"sap.ui.ux3.ToolPopup_obj","ThingAction":"sap.ui.ux3.ThingAction_obj","maxWidth":{"!description":"Forces a maximum width of the ToolPopup in pixels.","!type":"sap.ui.core.CSSSize","!category":"enum"},"ActionBar":"sap.ui.ux3.ActionBar_obj","NotificationBar":"sap.ui.ux3.NotificationBar_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"headerTitle":{"!description":"Title text in the header of the Exact Browser.","!type":"String","!category":"enum"},"key":{"!description":"Can be used as input for subsequent actions.","!type":"String","!category":"enum"},"live":{"!description":"Specifies whether the feed shall be in live mode","!type":"Boolean","!category":"enum"},"ThingViewerHeaderType":"sap.ui.ux3.ThingViewerHeaderType","ThingInspector":"sap.ui.ux3.ThingInspector_obj","closeDuration":{"!description":"Time in milliseconds for the close animation.","!type":"Number","!category":"enum"},"shared":{"!description":"Defines whether the entry shall be shared. This property is not supported for comment chunks.","!type":"Boolean","!category":"enum"},"commentChunk":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Not longer used. If a chunk is a comment is determined from hierarchy. If the parent is a chunk it's automatically a comment.<br>This flag changes a FeedChunk into a CommentChunk. In this case, it can not have own comments,\nfurthermore it must be assigned to a FeedChunk.","!type":"Boolean","!category":"enum"},"enabled":{"!description":"action enabled (true/false)","!type":"Boolean","!category":"enum"},"ExactOrder":"sap.ui.ux3.ExactOrder","iconHovered":{"!description":"icon: hovered state","!type":"sap.ui.core.URI","!category":"enum"},"text":{"!description":"text of action","!type":"String","!category":"enum"},"colspan":{"!description":"If Group is used in a column layout the groups spans the all columns if set to true.","!type":"Boolean","!category":"enum"},"ThingGroup":"sap.ui.ux3.ThingGroup_obj","Feed":"sap.ui.ux3.Feed_obj","NotificationBarStatus":"sap.ui.ux3.NotificationBarStatus","width":{"!description":"Width of the ThingViewer","!type":"sap.ui.core.CSSSize","!category":"enum"},"showSubAttributesIndicator":{"!description":"Specifies whether the attribute shall have sub values for visual purposes.\nThe indicator which is a little arrow beside an attribute in the list is computed automatically\n(getShowSubAttributesIndicator_Computed() of sap.ui.ux3.ExactAttribute).\nIn the case that a supply function is attached, and the supplyActive attribute has value 'true',\nthen the Exact pattern needs a hint if sub attributes are available. The showSubAttributesIndicator attribute is\nconsidered then and has to be maintained. If the back-end does not support count-calls, for example,\nshowSubAttributesIndicator should be set to true.","!type":"Boolean","!category":"enum"},"DataSetItem":"sap.ui.ux3.DataSetItem_obj","editable":{"!description":"If a collection is editable an edit button will be displayed below the list of items","!type":"Boolean","!category":"enum"},"listOrder":{"!description":"The order how the sublists of this attribute should be displayed.","!type":"sap.ui.ux3.ExactOrder","!category":"enum"},"showInspectorTool":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.7.2 According to the current Ux designs, the ThingInspector should NOT be opened like this from the Tool Pane. And technically, the ThingInspector is not a ToolPopup.\nInstead trigger it from the respective elements in the Shell content.<br>Whether the \"Inspector\" tool should be displayed or not.","!type":"Boolean","!category":"enum"},"thingIconURI":{"!description":"The thing icon uri. Icon will be displayed in Feeder","!type":"sap.ui.core.URI","!category":"enum"},"NavigationBar":"sap.ui.ux3.NavigationBar_obj","maxHeight":{"!description":"Forces a maximum height of the ToolPopup in pixels. If the ToolPopup content\nis higher than the ToolPopup, the content will be scrollable.","!type":"sap.ui.core.CSSSize","!category":"enum"},"floating":{"!description":"When true the DatSet items are floating containers. When set to false The Items are rendered in a 1 column Layout.","!type":"Boolean","!category":"enum"},"selectedKeys":{"!description":"Array of type string containing the selected keys.","!type":"[String]","!category":"enum"},"enableSave":{"!description":"Whether the save button should be available in the header area.","!type":"Boolean","!category":"enum"},"topListOrder":{"!description":"The order how the sublists of the top level list should be displayed.","!type":"sap.ui.ux3.ExactOrder","!category":"enum"},"autoActivateSupply":{"!description":"If you want the supply function to be called on every select, you can set the autoActivateSupply attribute to true. In this case, supplyActive is automatically\nset to true on every unselect.","!type":"Boolean","!category":"enum"},"appIconTooltip":{"!description":"The tooltip of the application icon in the header","!type":"String","!category":"enum"},"showFollow":{"!description":"Indicates whether social action \u201cFollow\u201d is shown, default is \u2018true\u2019","!type":"Boolean","!category":"enum"},"flagged":{"!description":"Defines whether the entry is flagged. This property is not supported for comment chunks.","!type":"Boolean","!category":"enum"},"openDelay":{"!description":"Opening delay of the tooltip in milliseconds","!type":"Number","!category":"enum"},"atPosition":{"!description":"Optional. At position defines which position on the target control to align the positioned tooltip.","!type":"sap.ui.core.Dock","!category":"enum"},"enableInspect":{"!description":"If true the inspect action is enabled.","!type":"Boolean","!category":"enum"},"scrollArea":{"!description":"ID of the DOM Element or jQuery reference to the dom which holds the scrollbar for the dataset","!type":"Object","!category":"enum"},"multiSelection":{"!description":"Allow multi selection of items in collection","!type":"Boolean","!category":"enum"},"ExactArea":"sap.ui.ux3.ExactArea_obj","enableFlag":{"!description":"If true the flag action is enabled.","!type":"Boolean","!category":"enum"},"multiSelect":{"!description":"Specifies whether multiple or single selection is used.","!type":"Boolean","!category":"enum"},"selected":{"!description":"Specifies whether the attribute shall be selected","!type":"Boolean","!category":"enum"},"OverlayContainer":"sap.ui.ux3.OverlayContainer_obj","name":{"!description":"Name of the View","!type":"String","!category":"enum"},"itemMinWidth":{"!description":"When itemMinWidth>0 and the property floating is true the given minimum width in pixels is set to DatSet items. A minimum width must be given when the property responsive is set.","!type":"Number","!category":"enum"},"openActionEnabled":{"!description":"Open Thing action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"offset":{"!description":"Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".","!type":"String","!category":"enum"},"topListWidth":{"!description":"Specifies the width of the top list in pixels. The value must be between 70 and 500.","!type":"Number","!category":"enum"},"icon":{"!description":"This property is relevant for Shell use:\nThe URL to the icon displayed in the tool area which is used to open the ToolPopup.\nThe recommended size is 32x32px, including some transparent border. Therefore,\nthe content will cover about 20x20px.","!type":"sap.ui.core.URI","!category":"enum"},"initialItemCount":{"!description":"If this value is greater zero only this amount of items is loaded in the first place. New items are loaded automatically when the user scrolls down. The number of items which are reloaded can be defined with the property \"reloadItemCount\"","!type":"Number","!category":"enum"},"showFilter":{"!description":"show filter","!type":"Boolean","!category":"enum"},"listHeight":{"!description":"The height of the list area in px.","!type":"Number","!category":"enum"},"Notifier":"sap.ui.ux3.Notifier_obj","Overlay":"sap.ui.ux3.Overlay_obj","appTitle":{"!description":"The application title to appear in the left part of the header, usually a company and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.","!type":"String","!category":"enum"},"additionalData":{"!description":"An example for additional data are database keys","!type":"Object","!category":"enum"},"Feeder":"sap.ui.ux3.Feeder_obj","feederSender":{"!description":"Sender for the comment feeder\nThis property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.","!type":"String","!category":"enum"},"showFeederTool":{"!description":"Whether the \"Feeder\" tool should be displayed or not.","!type":"Boolean","!category":"enum"},"FeederType":"sap.ui.ux3.FeederType","feederThumbnailSrc":{"!description":"URL to the thumbnail image for the comment feeder.\nThis property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.","!type":"sap.ui.core.URI","!category":"enum"},"ActionBarSocialActions":"sap.ui.ux3.ActionBarSocialActions","showHeader":{"!description":"Whether the header area of the ExactBrowser should be shown.","!type":"Boolean","!category":"enum"},"subtitle":{"!description":"Subtitle of the Thing Inspector","!type":"String","!category":"enum"},"responsive":{"!description":"When true and the property floating is true the DatSet items are floating containers filling the whole space of a row.","!type":"Boolean","!category":"enum"},"showFavorite":{"!description":"Indicates whether social action \u201cFavorite\u201d is shown, default is \u2018true\u2019","!type":"Boolean","!category":"enum"},"openButtonVisible":{"!description":"Defines whether the 'Open' button shall be visible.","!type":"Boolean","!category":"enum"},"FeedChunk":"sap.ui.ux3.FeedChunk_obj","resultText":{"!description":"A title text which is displayed above the result section","!type":"String","!category":"enum"},"dividerWidth":{"!description":"The minimum width of ActionBar's the social actions part: business action controls have to be rendered outside this area","!type":"sap.ui.core.CSSSize","!category":"enum"}},"sap.ui.ux3.FacetFilter":{"destroyLists":{"!description":"Destroys all the lists in the aggregation\nnamed <code>lists<\/code>.","!type":"fn() -> sap.ui.ux3.FacetFilter","!category":"function"},"getVisibleItemCountMode":{"!description":"Gets current value of property <code>visibleItemCountMode<\/code>.\n\nIf the value is \"Auto\" - the Facet Filter takes the whole available height. If \"Fixed\" , then the default number of Facet Filter Items (5) is visible.\n\nDefault value is <code>Fixed<\/code>.","!type":"fn() -> sap.ui.ux3.VisibleItemCountMode","!category":"function"},"setVisibleItemCountMode":{"!description":"Sets a new value for property <code>visibleItemCountMode<\/code>.\n\nIf the value is \"Auto\" - the Facet Filter takes the whole available height. If \"Fixed\" , then the default number of Facet Filter Items (5) is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Fixed<\/code>.","!type":"fn(sVisibleItemCountMode: sap.ui.ux3.VisibleItemCountMode) -> sap.ui.ux3.FacetFilter","!category":"function"},"removeAllLists":{"!description":"Removes all the controls in the aggregation named <code>lists<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.FacetFilterList]","!category":"function"},"getLists":{"!description":"Gets content of aggregation <code>lists<\/code>.\n\nFacet Filter list represents the list of the filter values and the title of this list.","!type":"fn() -> [sap.ui.ux3.FacetFilterList]","!category":"function"},"!description":"FacetFilter Control.","indexOfList":{"!description":"Checks for the provided <code>sap.ui.ux3.FacetFilterList<\/code> in the aggregation named <code>lists<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oList: sap.ui.ux3.FacetFilterList) -> Number","!category":"function"},"insertList":{"!description":"Inserts a list into the aggregation named <code>lists<\/code>.","!type":"fn(oList: sap.ui.ux3.FacetFilterList, iIndex: Number) -> sap.ui.ux3.FacetFilter","!category":"function"},"removeList":{"!description":"Removes a list from the aggregation named <code>lists<\/code>.","!type":"fn(vList: Number | String | sap.ui.ux3.FacetFilterList) -> sap.ui.ux3.FacetFilterList","!category":"function"},"!category":"class","!proto":"sap.ui.core.Control","addList":{"!description":"Adds some list into the aggregation named <code>lists<\/code>.","!type":"fn(oList: sap.ui.ux3.FacetFilterList) -> sap.ui.ux3.FacetFilter","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.FacetFilter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.ux3.NavigationItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NavigationItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.NavigationItem"},"sap.ui.ux3.OverlayDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.OverlayDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.OverlayDialog"},"sap.ui.ux3.ExactOrder":{"Select":{"!description":"The order of the sub lists is defined by the selection order of the user.","!type":"String","!category":"enum"},"!description":"Defines the order of the sub lists of a list in the ExactBrowser.","!category":"static class","Fixed":{"!description":"The order of the sub lists is defined by order of the defined sub attributes.","!type":"String","!category":"enum"}},"sap.ui.ux3.CollectionInspector_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.CollectionInspector with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.CollectionInspector"}},"!name":"sap.ui.ux3","mtproduction_maven_plugin_version":"1.2.0"}